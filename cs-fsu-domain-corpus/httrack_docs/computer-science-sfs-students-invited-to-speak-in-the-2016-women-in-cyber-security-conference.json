{"url": "www.cs.fsu.edu/computer-science-sfs-students-invited-to-speak-in-the-2016-women-in-cyber-security-conference/", "text": "Computer Science SFS Students Invited to Speak in the 2016 Women in Cyber Security Conference | Computer Science SFS Students Invited to Speak in the 2016 Women in Cyber Security Conference Feb 10, 2016 | Student Recognition Computer Science students Aranya Ajith and Rebecca Powell have been invited to give a 5 min Lighting talk at the 2016 Women in Cyber Security (WiCyS) Conference that will be held in Dallas, TX from March 31st to April 2nd. Aranya and Rebecca are in the NSF Scholarship for Service (SFS) program, directed by Dr. Mike Burmester. WiCyS is sponsored by National Science Foundation (NSF), federal agencies and academic partners. WiCyS continues to recruit, retrain and advance women in cybersecurity from academia, research, and industry all in the name of sharing knowledge, experience, networking, and mentoring other women. Aranya Ajith and Rebecca Powell will be talking about what reverse engineering is used for and mainly the difference between static and dynamic reverse engineering. An excerpt from their talk: \u201cReverse Engineering disassembles code to analyze its features, and understand weaknesses and exploits. It is a powerful tool for the programmer, the security analyst, but also for the adversary. For the programmer, to design better code; for the analyst, to understand its structure and potential malicious traits; and for the adversary, to\u00a0 take control of the application. Dynamic analysis allows for the inspection of the behavior of the code as it runs: what processes it starts, what locations it attempts to access, while static program analysis is another semi-easy practical way of learning x86 and how it plays into malware analysis without having any risk of infecting the machine while still being able to\u00a0 learn vital strings, host-based indicators, network-based indicators, etc. Understanding how to use these tools, and how to interpret the pseudocode, is the real challenge: it is hands-on and involves most of the effort. Understanding the theory is far less challenging.\u201d"}