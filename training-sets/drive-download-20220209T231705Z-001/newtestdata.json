{"data": [{"paragraphs": [{"qas": [{"question": "What award was Chris Mills' paper selected for?", "id": 173825, "answers": [{"answer_id": 227680, "document_id": 287676, "question_id": 173825, "text": "ACM Distinguished Paper award", "answer_start": 1327, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "News | CS faculty part of an FSU research team that won award from National Institute on Aging News Prof. Shayok Chakraborty is part of an FSU research team that won a $2.9 million award from National Institute on Aging. Welcoming Chris Mills to our CS Faculty News The FSU Computer Science Department would like to extend a warm welcome to Chris Mills \u2014 Chris will be joining our teaching faculty and we are pleased he is doing so. Welcome, Chris! Chris Mills is now currently a Teaching Faculty member in the FSU Computer Science Department and Chief Research Officer of i2x Solutions, LLC. Chris earned his Ph.D. in Computer Science from FSU in Spring 2019. His doctoral research focused on software engineering, with a specific focus on applications of machine learning to software traceability. Chris has published and presented his work in/at ACM Transactions on Software Engineering and Methodology (TOSEM), The International Conference on Software Engineering (ICSE), The International Conference on Software Maintenance and Evolution (ICSME), and The Joint Meeting of the European Software Engineering Conference and the ACM SIGSOFT Symposium on the Foundations of Software Engineering (ESEC/FSE\u201917). At ICSME 2018, Chris\u2019s paper \u201cAre Bug Reports Enough for Text Retrieval-based Bug Localization?\u201d was selected for an ACM Distinguished Paper award. Chris\u2019 professional experience includes working as a technical consultant for 2 years and a software engineer for 5 years at Aderant. He also worked as a technical team lead for the Florida Department of Education before moving into his current role as CRO at i2x Solutions. As CRO, Chris is responsible for managing a diverse set of research projects centered around building next generation products using artificial intelligence to support complex business processes. For FSU, Chris looks forward to teaching courses on C#, Artificial Intelligence, and Software Engineering. Before entering Computer Science, Chris earned a M.S. in Applied and Computational Mathematics from FSU in 2011 and... FSU CS Faculty Welcomes back Ann Tyson to the Department News Ann F. Tyson joins the CS Faculty Many CS Students, Faculty, Staff, Recognized at Honors Day 2019 News The Computer Science Department held its annual Honors day on 4/19/19. Many students, faculty and staff in the department were recognized for Awards, Fellowships, Scholarships, or Society induction. CS awarded a significant amount of technology fee to upgrade its instructional technology infrastructure News The Computer Science Department has been awarded over $85K Technology Fee to upgrade its instructional technology infrastructure in four projects: (1) to upgrade Grads Lab computers, (2) to build CS private cloud services, (3) to upgrade the data center server switch, (4) to upgrade audio\u2013visual technology in classrooms. The Systems Group manager, Yu Wang, and Systems Group member, Bobby Roy, developed the proposals for the four projects. The proposals were selected by the Student Technology Fee Advisory Committee, and approved by the IT Governance Council. Faculty promotion News Congratulations to Prof. Zhenghao Zhang for being promoted to the rank of full professor and to Prof. Sonia Haiduc and Prof. Jie Yang for being promoted to the rank of associate professor with tenure, all effective in Fall 2019. \u00ab Older Entries Next Entries \u00bb", "document_id": 287676}]}, {"paragraphs": [{"qas": [{"question": "What are the preferred programming skills for Dr. Aggarwal's position?", "id": 173840, "answers": [{"answer_id": 227695, "document_id": 287677, "question_id": 173840, "text": "(1) iOS development (Swift programming); (2) Java Programming and (3) Python programming.", "answer_start": 1955, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}, {"question": "What scripting languages must the candidate be familiar with?", "id": 173833, "answers": [{"answer_id": 227688, "document_id": 287677, "question_id": 173833, "text": " perl, php 7.1, JavaScript, etc", "answer_start": 704, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}, {"question": "Where should interested applicants email their resume?", "id": 173834, "answers": [{"answer_id": 227689, "document_id": 287677, "question_id": 173834, "text": "smho@fsu.edu", "answer_start": 863, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}, {"question": "How long is the postdoctoral research position?", "id": 173835, "answers": [{"answer_id": 227690, "document_id": 287677, "question_id": 173835, "text": "full time, two-year, renewable position", "answer_start": 1178, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "Openings | Graduate Assistantship \u2013 Open Until Fill \u2013 Fall 2018 Openings The Computer Science (CS) and School of Information (iSchool) seek an outstanding graduate assistant to work 20 hours for the Fall 2018. The student\u2019s responsibilities will be to collaborate with the research team, to maintain and develop a research server, and to develop game-based scenarios under professor\u2019s guidance. The candidate is required to have good communication and writing skills, and know how to set up current social media, preferably with developer experience in Facebook, Google+, and twitter, etc. The candidate must be willing to learn various development platforms. Some knowledge of scripting languages (e.g., perl, php 7.1, JavaScript, etc.), MySQL database, and text mining techniques would be necessary. Interested applicants should email their resume to Dr. Ho at smho@fsu.edu. Review of applications begins immediately and continues until the position is... Postdoctoral Researcher Openings The Computer Architecture and System Laboratory (CASTL) at Florida State University has a postdoctoral researcher position on large-scale parallel computing and data analytics. This is a full time, two-year, renewable position. The successful candidate must have earned a PhD in computer science or related disciplines and at least one first-author research publication in a reputable systems conference or journal. To apply, visit: http://hr.fsu.edu, click Job Opportunities, then enter 43971 as the job ID. Questions regarding the position can be directed to Prof. Weikuan Yu... RAship opportunity for fall 2018 Openings Dr. Aggarwal is seeking students for a 10 hour (possibly 20 hour) RA position, currently for the Fall semester 2018 only. The project relates to targeted data extraction from mobile phones. Good programming skills are essential but he is also looking for students with interest in forensics / security. Preferred programming skills would be (1) iOS development (Swift programming); (2) Java Programming and (3) Python programming. The project is using machine learning techniques for identification / categorization so experience with ML environments, tools, and techniques would also give priority. A selected student should also be able to understand existing code implementations and make modifications as needed. If you believe you can contribute to this project then first email Dr. Aggarwal a resume and he will contact you as follow up. Include information about your skills, GPA, etc. Also indicate in your email if you currently (in fall) have TA funding from the department as some existing TA funding would be preferred. Sudhir Aggarwal Mainline Information Systems Professor Department of Computer Science Florida State University Tallahassee, FL 32306 Tel: 850-644-0164...", "document_id": 287677}]}, {"paragraphs": [{"qas": [{"question": "What did Dr. Gao receive an award for?", "id": 162677, "answers": [{"answer_id": 227227, "document_id": 287675, "question_id": 162677, "text": " Curved Mesh Generation and Analysis", "answer_start": 46, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "News | Dr. Xifeng Gao awarded an NSF grant for Curved Mesh Generation and Analysis News FSU Computer Science Prof. Xifeng Gao recently received a grant from the National Science Foundation (NSF) for his project \u201cRobust High Order Meshing and Analysis for Design Pipeline Automation\u201d. Dr. David Whalley awarded $600K NSF grant for Instruction-Level Parallelism Research News FSU Department of Computer Science Professor David Whalley has been awarded a new NSF grant for his project \u201cStatically Controlled Asynchronous Lane Execution (SCALE)\u201d. Dr. Works Joins FSU CS Faculty at the Panama City Campus News Dr. Karen Works joins PC Campus Faculty Dr. Zhenghao Zhang awarded $446k grant in Wireless Communication News Dr. Zhenghao Zhang awarded $446k in funding by the National Science Foundation. Welcoming Alan Kuhnle to our CS Faculty News The FSU CS Faculty welcomed quite a few to their department this fall, and we are pleased this bunch includes Dr. Alan Kuhnle \u2014 Welcome! Computer Science Faculty Welcomes Grigory Fedyukovich News The FSU Computer Science faculty has been growing steadily in numbers and quality \u2014 we are pleased to continue this trend and welcome Grigory Fedyukovich, beginning with us this Fall 2019. \u00ab Older Entries Next Entries \u00bb", "document_id": 287675}]}, {"paragraphs": [{"qas": [], "context": "Student Recognition | CS Students won the best paper award in EuroS&P 2019 Student Recognition FSU CS students, Mustakimur R. Khandaker, Abu Naser, and Wenqing Liu, won the best paper award in EuroS&P 2019 (4th IEEE European Symposium on Security and Privacy), hold Jun 17 -19 at Stockholm Sweden, for their paper titled \u201cAdaptive Call-site Sensitive Control Flow Integrity\u201d. EuroS&P is the flagship security conference in Europe. CS students receive DoD Cyber Scholarships Student Recognition 2 juniors (major: Computer Science) and one graduate in Computer Science at FSU have been awarded DoD Cyber Scholarship. CS Students to Present in Top Computer Security Conference Student Recognition Mustakimur R. Khandaker, a Ph.D. student from the CS Department, has published a full paper in the prestigious 28th USENIX Security Symposium, which will hold on August 14-16, 2019 in Santa Clara, California. USENIX Security is one of the top-tier conferences in the Computer Security area. The paper, titled \u201cOrigin-sensitive Control Flow Integrity\u201d proposes a new context-sensitive CFI system that can significantly improve the security of the state-of-art CFI systems. This work is the continuation of his earlier work published in EuroS&P\u201919 titled \u201cAdaptive Call-site Sensitive Control Flow Integrity\u201d. Both projects have been open-sourced available at the author\u2019s GitHub page: https://github.com/mustakcsecuet/. The other students that contributed to the projects include Wenqing Liu and Abu... Recent Student Publications in CS Student Recognition Some of the recent student publications produced by members of the FSU Computer Science program\u2026 CS Student Presented in Top High Performance Computing Conference Student Recognition Peyman Faizian, a PhD student from the CS Department, has published a full paper in the prestigious IEEE/ACM SC: the International Conference for High Performance Computing, Networking, Storage and Analysis, held in November 2017 in Denver, Colorado. Ms. Gokila Dorai Awarded UPE Scholarship Student Recognition Ms. Gokila Dorai was awarded the UPE Scholarship Cash Award of $1000 by Upsilon Pi Epsilon \u00ab Older Entries Next Entries \u00bb", "document_id": 287680}]}, {"paragraphs": [{"qas": [], "context": "Computer Science Earns NSA Centers of Academic Excellence Award for Critical Infrastructure Protection | Computer Science Earns NSA Centers of Academic Excellence Award for Critical Infrastructure Protection The Computer Science Department was awarded a $291,000 grant through NSA\u2019s National Centers of Academic Excellence in Information Assurance / Cyber Defense (CAE/IAE) Research and Education program, to study the resilience of Electrical Grids (EG) based on vulnerability analysis for 2015/2016. The PI\u2019s Dr. Burmester and Dr. Liu will be working together with Dr. Yu from the College of Engineering, to analyze real time multi-layer vulnerabilities and threats of EG infrastructures resulting from untrusted or unexpected behavior. Testing will involve the real time digital simulator (RTDS) hosted by FSUs Center for Advance Power System for hardware-in-the-loop testing. The ultimate goal is to develop an architecture that integrates well established trusted computing engines, trusted key management services, and cryptographic tools to support resiliency for critical infrastructure protection. The purpose of the National CAE designation program is to promote higher education in IA and CD and prepare a growing number of IA/CD professionals to meet the need to reduce vulnerabilities in the Nation\u2019s networks. The initial National CAE in IA Education (CAE/IAE) program was started by NSA in 1998, with DHS joining as a partner in 2004 in response to the President\u2019s National Strategy to Secure Cyberspace. Congratulations to Dr. Burmester, Dr. Liu, and Dr. Yu for their outstanding research efforts.", "document_id": 287686}]}, {"paragraphs": [{"qas": [], "context": "Computer Science Holds Annual CS Expo for 2015 | Computer Science Holds Annual CS Expo for 2015 On November 12th, 2015 the Computer Science Department held its fourth annual CS Expo in The Center for Global Engagement here on FSU\u2019s main campus. The CS Expo is one of the department\u2019s key annual events for both student and alumni, that takes place to showcase emerging technological projects, encourage innovative dialogue, and lets everyone exchange experiences in the world of tech. There are several components of the fair including a \u201cGrad-Made-Good\u201d talk, door prizes, poster contests, and a software demo contest. This most important part of this year\u2019s event included two talks from keynote speaker Dr. Prasad Kulkarni from University of Kansas, and an invited talk from the David Lawson of NewSci. Lawson is well known around Tallahassee\u2019s community of tech startups for being a partner at Domi Ventures, and for advising several companies including Return on Mission, Agile Equity, Small Act, and HG Data. During his talk he went into the new innovations in Big Data and the things NewSci is doing in regards to the field. Lawson was followed by Dr. Kulkarni who is currently an Associate Professor in the EECS department at the University of Kansas and is well known for being a Ph.D. recipient from FSU in 2007. He went into detail of his graduate experiences here at the university and how it has carried over in his professional field. Prasad also heads the Compilers, Architectures, and Runtime Systems (CARS) research group at KU and specializes in the efficiency in modern multi-core machines and embedded systems. The event also featured several student talks from students here in the department. CS student Javier Escobar presented his research project entitled: Automatic Categorization of Software Libraries Using Bytecode, where his proposed techniques could potentially help software developers use more efficient search methods for large repositories. Another student, Shiva Krishna Imminni, presented research on a more Python focused search engine project entitled PyQuery: A Search Engine for Python Packages and Modules. CS student Yue Chen held a talk based on his project entitled Harvesting Developer Credentials in Android Apps. His efforts explored the challenges of credentials in third party apps and safer ways to recover such information. CS Student Martin Brown delivered an exceptional talk on open-source benchmark suites designed to expose the complex interactions between components of the Android software stack in his presentation entitled Agave: a Benchmark Suite Addressing AndroidSystem Complexity. Finally, Peyman Faizian delivered a talk on The Performance of Random Regular Topologies. The event eventually closed out with student awards and closing remarks. The student talk winners were Martin Brown and Peyman Faizian, the best demo was given by Ali Hamie and the best poster was presented by Josh Garlitos. According to event organizers all students who participated in each contest did a wonderful job in their respective categories. Special thanks goes out to Jie Yang, Margareta Ackerman, and ACM student members Sharanya Jayaraman, David Perez, and Preston Hamlin who all assisted main event organizer Caitlin Carnahan with the event.", "document_id": 287688}]}, {"paragraphs": [{"qas": [], "context": "Computer Science Faculty Welcomes Grigory Fedyukovich | Computer Science Faculty Welcomes Grigory Fedyukovich The FSU Computer Science faculty has been growing steadily in numbers and quality \u2014 we are pleased to continue this trend and welcome Grigory Fedyukovich, beginning with us this Fall 2019. Dr. Grigory Fedyukovich is an Assistant Professor at Florida State University, USA. He completed his Ph.D. at the University of Lugano, Switzerland, under the supervision of Prof Natasha Sharygina, and then he was a postdoc at the University of Washington with Prof Rastislav Bodik and at Princeton University with Prof Aarti Gupta. His research interests are in automated software verification and synthesis, equivalence checking, and applications of relational verification to analyzing software security. He is looking for students with a background in mathematics and logic to work on a number of interesting projects.", "document_id": 287687}]}, {"paragraphs": [{"qas": [], "context": "Computer Science introduces a new BA in Computer Programming and Applications major | Computer Science introduces a new BA in Computer Programming and Applications major Jan 12, 2017 | News Starting from Spring 2017, Computer Science offers a new BA in Computer Programming and Applications major. This new major provides a broad-based background sufficient for entry to a career in computing. It provides an applications view of computing, emphasizing the interdependence of programming, object orientation, and software design and engineering. This major develops core competencies in programming, data structures, software engineering, and computer organization. It allows opportunities to study a range of other aspects of computer and information science, such as web programming, mobile programming, cybersecurity, digital forensics, databases and data engineering, data communication and networks, computer and network systems administration, computer systems, and theoretical computer science. This major is also intended to give students flexibility in combining computing with other interests. For more information, please visit the new major\u2019s webpage at http://www.cs.fsu.edu/academics/undergraduate-programs/bacpa/.", "document_id": 287689}]}, {"paragraphs": [{"qas": [], "context": "Computer Science Professor Leads Multi-University Ebola Research Team | Computer Science Professor Leads Multi-University Ebola Research Team Associate Professor of Computer Science Ashok Srinivasan has been tapped to lead a research team with the goal of finding new ways to decrease the risk of Ebola being spread through air travel. The team is comprised of Professor Srinivasan and researchers from Embry Riddle Aeronautical University and Arizona State University. The research is imperative for limiting the amount of air travel passengers exposed to the disease via unknown persons infected on the plane. Funding for the project comes via the National Science Foundation and its Rapid Response Research Grant fund dedicated to facilitating researchers finding solutions for the disease. \u201cPredicting exact human response to policy decisions is difficult. Rather, we aim to identify vulnerabilities in different policy options given inherent uncertainties,\u201d Dr.\u00a0Srinivasan said. \u201cAnd we need to determine if some of these vulnerabilities would lead to disastrous consequences, such as causing an epidemic in the US.\u201d Srinivasan is a supercomputing whiz: his knowledge is needed for the simulations to be completed in a timely matter. Srinivasan\u2019s expertise on this project stems from a new research direction he spearheaded with his Fulbright grant on \u201cSupercomputing for policy decisions.\u201d The software and modeling infrastructure this team develops could be applied to other contagious disease scenarios as well. He hopes that they will be ready with a solution when the next outbreak threatens human well-being. Congratulations to Dr.\u00a0Srinivasan for once again proving computing knowledge is applicable to the many real-world problems in our everyday lives.", "document_id": 287690}]}, {"paragraphs": [{"qas": [], "context": "Computer Science Welcomes Two Tenure-track Faculty Members to Start in Fall 2017 | Computer Science Welcomes Two Tenure-track Faculty Members to Start in Fall 2017 Dr. Shayok Chakraborty will join the department of Computer Science at FSU in Fall 2017 as an Assistant Professor. Prior to joining FSU, Dr. Chakraborty held a research faculty position at Arizona State University, where he was an Associate Director of the Center for Cognitive Ubiquitous Computing (CUbiC) laboratory. He received his PhD in Computer Science from Arizona State University in 2013. He has worked as a Post-doctoral researcher at Intel Labs, Oregon and in the Electrical and Computer Engineering department at Carnegie Mellon University. He also had a collaboration with the machine learning department at Microsoft Research, Redmond. Dr. Chakraborty\u2019s research interests include machine learning and computer vision. He has published his research in premier conferences and journals in these areas. He also extensively serves in the program committee and as a reviewer of these conferences and journals. His paper on person-centered multimedia computing received the 2017 IEEE Multimedia Best Department Article Award. He is looking for highly motivated students to work with at Florida State University. Dr. Jiawei Zhang will join the department in the fall semester as an assistant professor. Dr. Zhang received his PhD degree in Computer Science from University of Illinois at Chicago in August 2017. Prior to joining UIC, Dr. Zhang obtained his Bachelor\u2019s Degree in Computer Science from Nanjing University, in China. Dr. Zhang\u2019s research interests span the fields of Data Science, Data Mining, Network Mining, and Machine Learning. Dr. Zhang\u2019s research works focus on fusing multiple large-scale information sources of diverse varieties together, and carrying out synergistic data mining tasks across these fused sources in one unified analytic. Dr. Zhang\u2019s fusion learning works have appeared in KDD, ICDM, SDM, ECML/PKDD, IJCAI, WWW, WSDM, CIKM, IEEE Transactions on Knowledge and Data Engineering (TKDE). Dr. Zhang receives the Best Student Paper Runner Up Award from ASONAM\u201916. Dr. Zhang has been serving as the information specialist and director of ACM Transaction on Knowledge Discovery from Data (TKDD) since August 2014. Dr. Zhang is also the PC member of WWW\u201917, KDD\u201916, CIKM\u201916, CIKM\u201915 and AIRS\u201916. Besides the academic experience at University of Illinois at Chicago, Dr. Zhang also has industrial research experiences working at Microsoft Research in 2014, IBM T. J. Watson Research Center in 2015, and Yahoo! Research in 2016.", "document_id": 287693}]}, {"paragraphs": [{"qas": [], "context": "CS awarded a significant amount of technology fee to upgrade its instructional technology infrastructure | CS awarded a significant amount of technology fee to upgrade its instructional technology infrastructure The Computer Science Department has been awarded $100K Technology Fee to upgrade its instructional technology infrastructure in four projects: (1) to upgrade Majors Lab computers, (2) to upgrade department network firewall, (3) to upgrade DHCP services, (4) to set up imaging server for computer labs. The proposals were selected by the Student Technology Fee Advisory Committee, and approved by the IT Governance Council. The awards will significantly enhance the department\u2019s instructional technology resources for students and faculty.", "document_id": 287695}]}, {"paragraphs": [{"qas": [], "context": "CS faculty featured in Tallahassee Democrat | CS faculty featured in Tallahassee Democrat Professor Shayok Chakraborty is featured in Tallahassee Democrat for his AI research. Please see the detail at https://www.tallahassee.com/story/life/wellness/2018/06/23/fsu-collaborates-ai-help-older-adults-and-others/725442002/", "document_id": 287700}]}, {"paragraphs": [{"qas": [], "context": "CS awarded a significant amount of technology fee to upgrade its instructional technology infrastructure | CS awarded a significant amount of technology fee to upgrade its instructional technology infrastructure The Computer Science Department has been awarded $122K Technology Fee to upgrade its instructional technology infrastructure in six projects: (1) to improve wireless coverage for laboratories and offices, (2) to upgrade network lab computers, (3) to upgrade data center server switch, (4) to update the LOV 151 projection system, (5) to update the LOV 025 majors lab computers, (6) to upgrade SSH client software. The systems group manager, Yu Wang, and systems group member, Sigrun Ahlquist, developed the proposals for the six projects. The proposals were selected by the Student Technology Fee Advisory Committee, and approved by the IT Governance Council. The awards will significantly enhance the department\u2019s instructional technology resources for students and faculty.", "document_id": 287694}]}, {"paragraphs": [{"qas": [], "context": "CS Department\u2019s Sharanya Jayaraman wins Seminole Torchbearer Award | CS Department\u2019s Sharanya Jayaraman wins Seminole Torchbearer Award Dec 7, 2015 | Student Recognition Congratulations to ACM\u2019s Sharanya Jayaraman for her induction into the prestigious Seminole Torchbearer\u2019s program here at Florid State University. Seminole Torchbearers is an organization founded 1986 to keep close bonds with alumni who were student leaders in their time on campus. Since then, over 5,500 alums have been inducted into this prestigious group. Each year approximately 200 junior and senior student leaders are invited to join this elite group. Sharanya was nominated through department member Eleanor McNealy for her dedication to the CS department\u2019s ACM organization.\u00a0 Sharanya actively helped out advising students, helping them out with schedules, helping them find tutors for the harder classes, organizing workshops on topics that are not taught in courses, and helping to improve the overall student experience in the department. She also is a strong female voice for the ACM and its women\u2019s division. Once again congratulations on Sharanya for representing the leadership of the department on a university wide scale.", "document_id": 287698}]}, {"paragraphs": [{"qas": [], "context": "CS Expo 2015 | CS Expo 2015 The CS Expo is the premier annual event for students, alumni and faculty of the Computer Science department at the Florida State University to showcase science, technology, and cutting-edge projects, and to exchange opportunities and experiences. This one-day event sets up an open forum that features technical talks, research presentations, demos and posters by computer science students, a \u201cGrad-Made-Good\u201d talk by this year\u2019s keynote speaker Dr. Prasad Kulkarni from University of Kansas, and an invited talk from the David Lawson of NewSci. Alumni and friends of the Computer Science department participate in the event to share post-graduate experiences and opportunities for our students. Detailed information can be found at CS Expo site .", "document_id": 287699}]}, {"paragraphs": [{"qas": [{"question": "Who was part of the FSU research team that won an award?", "id": 173939, "answers": [{"answer_id": 227794, "document_id": 287701, "question_id": 173939, "text": "Shayok Chakraborty", "answer_start": 184, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "CS faculty part of an FSU research team that won award from National Institute on Aging | CS faculty part of an FSU research team that won award from National Institute on Aging Prof. Shayok Chakraborty is part of an FSU research team that won a $2.9 million award from National Institute on Aging. See the details here FSU News: FSU research team receives $2.9 million to examine early detection of dementia", "document_id": 287701}]}, {"paragraphs": [{"qas": [], "context": "CS Outstanding Teaching Assistants Awarded | CS Outstanding Teaching Assistants Awarded At the department\u2019s annual Honors and Awards ceremony held on April 17th, the department was pleased to present Outstanding Teaching Assistant awards to the following students: John Travis Chung Jaewon Yang Shamik Bose Mir Anamul Hasan Tathagata Mukherjee Sharanya Jayaraman Congratulations and the department\u2019s thanks to these dedicated individuals!", "document_id": 287702}]}, {"paragraphs": [{"qas": [], "context": "CS received $123K university technology fee to upgrade its computing infrastructure | CS received $123K university technology fee to upgrade its computing infrastructure Apr 20, 2016 | News University Student Technology Fee Committee has awarded $122,618 to the Department of Computer Science for upgrading its computing infrastructure in April 2016. Among the $123K technology fee award, $96K will be used to improve the programming environment (linprog and program servers) while the other $27K will be used to upgrade the majors lab. This funding will significantly enhance the instructional technology resources for students and faculty in the department. Yu Wang, our system administrator, who oversees the departmental computing infrastructure and the systems group, leads the effort in technology fee requests. Congratulations to Yu Wang for successfully securing such a significant amount of university technology fee for the department.", "document_id": 287706}]}, {"paragraphs": [{"qas": [{"question": "Where was Linghan's Zhan's paper published?", "id": 173966, "answers": [{"answer_id": 227821, "document_id": 287708, "question_id": 173966, "text": "ACM CCS 2016", "answer_start": 472, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "CS Student Presented in Top Security Conference | CS Student Presented in Top Security Conference Sep 6, 2016 | Student Recognition Linghan Zhang, a second year PhD student, has been conducting research in mobile security as her dissertation topic under the guidance of Prof. Jie Yang. Her recent work on voice liveness detection has been published in a paper, titled \u201cVoiceLive: A Phoneme Localization based Liveness Detection for Voice Authentication on Smartphones\u201d in ACM CCS 2016, a top tier conference in the Security area. The paper is co-authored with her lab-mate Sheng Tan, Prof. Jie Yang, and Prof. Yingying Chen at Stevens Institute of Technology. In the paper, Linghan proposed VoiceLive, a practical liveness detection system for voice authentication on smartphones. It works by leveraging the user\u2019s unique vocal system and the stereo recording of smartphones. It performs liveness detection by measuring TDoA changes of a sequence of phoneme sounds from the two microphones of a smartphone. Experimental evaluation shows that VoiceLive achieves over 99% detection accuracy at around 1% Equal Error Rate (EER). Results also show that VoiceLive is robust to different phone placements and is compatible to different sampling rates and phone models.", "document_id": 287708}]}, {"paragraphs": [{"qas": [], "context": "CS Student Presented in Top Security Conference | CS Student Presented in Top Security Conference Yue Chen, a fourth-year PhD student, has been conducting research in system and mobile security under the guidance of Prof. Zhi Wang. His recent paper titled \u201cAdaptive Android Kernel Live Patching\u201d has been published in USENIX Security 2017, a top-tier conference in security and privacy. In this paper, Yue tries to address an important real-world problem in which most Android devices are never timely updated. Kernel vulnerabilities in these devices pose a serious threat to user security and privacy because the kernel is the foundation of security and trust for the whole device. To protect users from kernel exploits, Yue, together with other researchers, proposed KARMA, an adaptive kernel live patching system for Android kernels. A defining feature of KARMA is that it can automatically adapt a reference patch to different devices, significantly reducing the window of vulnerability. This paper is a collaboration with researchers from the Baidu X-lab. KARMA is a key component in the forthcoming OASES open initiative ( https://oases.io/ ).", "document_id": 287709}]}, {"paragraphs": [{"qas": [], "context": "CS Student Published in Top Mobile and Wireless Computing Conference | CS Student Published in Top Mobile and Wireless Computing Conference Sep 13, 2016 | Student Recognition Fourth year PhD student, Sheng Tan, has been conducting research in mobile and pervasive computing as his dissertation topic under the guidance of Prof. Jie Yang. His recent work on wireless sensing has been published in a paper, titled \u201cWiFinger: Leveraging Commodity WiFi for Fine-grained Finger Gesture Recognition\u201d and co-authored with Prof. Jie Yang in ACM Mobihoc 2016, a top tier conference in the Mobile and Wireless Computing area. In the paper, Sheng proposed a finger gesture recognition system by using a single commodity WiFi device without requiring user to wear any sensors. The proposed system is easily deployable on existing WiFi devices without using any dedicated or specialized hardware. \u00a0Experimental evaluation in both home and office environments demonstrates that WiFinger can achieve over 93% recognition accuracy and is robust to both environment changes and individual diversity. Results also show that it can work with WiFi beacon signals and provides accurate gesture recognition under non-line-of-sight (NLOS) scenarios.", "document_id": 287710}]}, {"paragraphs": [{"qas": [], "context": "CS Students won the best paper award in EuroS&P 2019 | CS Students won the best paper award in EuroS&P 2019 FSU CS students, Mustakimur R. Khandaker, Abu Naser, and Wenqing Liu, won the best paper award in EuroS&P 2019 (4th IEEE European Symposium on Security and Privacy), hold Jun 17 -19 at Stockholm Sweden, for their paper titled \u201cAdaptive Call-site Sensitive Control Flow Integrity\u201d. EuroS&P is the flagship security conference in Europe. The paper was appraised for its practicality and effectiveness in defending software against contro-flow hijacking attacks. The source code is available at: https://github.com/mustakcsecuet/.", "document_id": 287715}]}, {"paragraphs": [{"qas": [{"question": "How much is the contract given to Dan Schwartz from the Office of Naval Research?", "id": 174000, "answers": [{"answer_id": 227855, "document_id": 287718, "question_id": 174000, "text": "$50,000", "answer_start": 228, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "Dan Schwartz wins contract from the Office of Naval Research | Dan Schwartz wins contract from the Office of Naval Research Jan 20, 2017 | News Dan Schwartz has recently obtained a software development contract in the amount of $50,000 from the Office of Naval Research. The project is entitled \u201cNaval Message Traffic Monitoring for Mine Countermeasures\u201d.", "document_id": 287718}]}, {"paragraphs": [{"qas": [], "context": "Undergraduate Advising FAQ | Undergraduate Advising FAQ University Resources: \u00b7 Majors/Minors/Certificates: http://www.academic-guide.fsu.edu \u00b7 CS Major Information & Flowcharts: https://www.cs.fsu.edu/academics/undergraduate-programs/ \u00b7 Liberal Studies Courses/Requirements: http://liberalstudies.fsu.edu/index.html \u00b7 Computer Science minor: http://www.cs.fsu.edu/academics/undergraduate-programs/minor-in-computer-science/ \u00b7 How to view your Academic Requirements Report: https://sc.my.fsu.edu/students/how/access-your-academic-requirements-report FAQ for all FSU students: 1.\tI am trying to enroll in MAD 2104 but received an error message. Can an advisor enroll me? A.\tNon-CS majors cannot enroll in that course. If you are a non-CS major and would like to request enrollment, contact Melissa Tillery in the Math department at mltillery@fsu.edu . 2.\tI am trying to enroll in a course that is not offered on my campus. What can I do? A.\tOn the Class Search or Schedule Assistant, adjust your filters to include only your campus. Search again. Students may not take courses outside of the Tallahassee campus as a Tallahassee-campus student. B.\tFor assistance in using Schedule Assistant: https://undergrad.fsu.edu/academic-information/schedule-planner/schedule-assistant 3.\tI am trying to enroll in a course and it is telling me the seats are reserved and I do not meet the reserve capacity requirements. How can I take it? A.\tUsually, you can click on the course and read the course notes or description and it will tell you who the course is reserved for (usually, this is certain majors). If it is still unclear, contact the department offering the course for more information. 4.\tI need __ form, where can I get it? A.\tMost forms can be found on the Registrar\u2019s website: http://registrar.fsu.edu/forms/", "document_id": 287598}]}, {"paragraphs": [{"qas": [], "context": "Dr. Fedyukovich Receives Amazon Research Award | Dr. Fedyukovich Receives Amazon Research Award FSU Computer Science Assistant Professor, Dr. Grigory Fedyukovich, has received the Amazon Research Award for his project \u201cApplying FreqHorn to verification of AWS C Common programs\u201d. A recent trend in automated software verification is to delegate the computational tasks to solvers for Satisfiability Modulo Theories (SMT) and Constrained Horn Clauses (CHC). The latter allows synthesizing inductive invariants and enables sound (but possibly incomplete) reasoning about loopy programs. Existing approaches to solving CHC are limited mainly to lightweight and imprecise first-order theories or expensive and impractical bit-precise reasoning. Supporting arrays and algebraic data types (ADT) is challenging due to the presence of quantifiers, but it is needed for a range of real-world applications such as Code-Level Model Checking in the Software Development Workflow by Amazon Web Services (called AWS C Common library). This proposal aims to extend a successful technique for CHC solving, implemented in a tool called FreqHorn and maintained at FSU. We will focus on the development of an automated converter from the AWS verification language to CHC, and we will exploit various different modeling paradigms that could serve to improve the scalability of verification. The award includes funding in the amount of $60,000 for one year.", "document_id": 287806}]}, {"paragraphs": [{"qas": [{"question": "How much was Dr. Haiduc awarded?", "id": 199949, "answers": [{"answer_id": 229207, "document_id": 287808, "question_id": 199949, "text": "$495K", "answer_start": 19, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "Dr. Haiduc awarded $495K NSF CAREER Award | Dr. Haiduc awarded $495K NSF CAREER Award FSU\u2019s Computer Science faculty member Sonia Haiduc was awarded the prestigious National Science Foundation CAREER Award. The award totals $494,989 over a duration of 5 years and will allow Dr. Haiduc to study and improve the use and production of programming video tutorials. The outcomes of this project have the potential to transform the way programmers and computer science students acquire knowledge from video tutorials, allowing them to easily access quality information that is easy to extract and use in their own contexts. The work under this project will allow professional programmers to leverage online documentation more efficiently and find help for their coding tasks faster, which can lead to time and effort savings and decreased software costs. The project also aims to support better learning and instruction out of the classroom, by improving access to the knowledge captured in high-quality video tutorials, and therefore supporting students in complementing their classroom learning experience. The grant will also support the organization of a Scratch summer coding camp for middle schoolers for four years starting in Summer 2020. Dr. Sonia Haiduc joined FSU in fall 2013. She obtained her PhD and M.Sc. from Wayne State University in 2013 and 2009, respectively. Her research interests are in software engineering, and in particular in software maintenance and evolution, program comprehension, and software documentation. She advises several PhD students and M.Sc. students, and works with several undergraduate students. Her research has been published in top journals and conferences in the field of software engineering and she is the recipient of several NSF grants. Her students are the recipients of several international research awards, such as an ACM Distinguished Paper Award and a Gold and a Silver Medal in ACM Graduate Research Competitions. She is also actively involved in the organization and review process of several conferences and journals. Added July 2019: See FSU\u2019s official article recognizing Sonia and the other faculty winners here: https://news.fsu.edu/news/university-news/2019/07/22/early-career-faculty-members-recognized-with-prestigious-nsf-awards/", "document_id": 287808}]}, {"paragraphs": [{"qas": [], "context": "Dr. Hoang Awarded $174k Grant From NSF | Dr. Hoang Awarded $174k Grant From NSF FSU Computer Science Prof. Viet Tung Hoang recently received a grant from the National Science Foundation (NSF) in the amount of $174,469, for his project \u201cCRII: SaTC: Towards Stronger and Verified Security for Real-World Cryptography\u201d. Today, many real-world cryptographic schemes are based on the provable-security paradigm, certifying their security via some proofs. However, in several important settings, existing proofs for the in-use constructions give weak security bounds, even to the extent that these results are not meaningful. Moreover, many proofs in the literature are buggy, giving false confidence on the security of actually vulnerable constructions. Even worse, practitioners may introduce seemingly harmless optimizations into a secure scheme, only to find out later that they completely undermine the security. In this project, Prof. Hoang aims to partially address these issues from several fronts: (1) improving security guarantees of important applications, (2) weeding out insecure optimizations of real-world protocols by giving attacks, and (3) developing tools for automatic verification of cryptographic proofs.", "document_id": 287809}]}, {"paragraphs": [{"qas": [{"question": "How much was Dr. Yang awarded?", "id": 199957, "answers": [{"answer_id": 229215, "document_id": 287810, "question_id": 199957, "text": "$459K", "answer_start": 21, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "Dr. Jie Yang awarded $459K NSF grant for Wireless Sensing Research | Dr. Jie Yang awarded $459K NSF grant for Wireless Sensing Research FSU Department of Computer Science Professor Jie Yang has been awarded a new NSF grant for his project \u201cTowards Ubiquitous Sensing With Commodity Wi-Fi\u201d. The aim of the project is to build a commodity WiFi-based ubiquitous sensing system that can simultaneously sense multiple persons and provides quantifiable gesture recognition without requiring environment-dependent training. The outcome of this project can be directly adopted by industry and will have a societal impact by facilitating a variety of applications such as HCI, smart homes, mobile healthcare, and security surveillance, among others. The award includes funding for FSU in the amount of $459,000 for three years.", "document_id": 287810}]}, {"paragraphs": [{"qas": [{"question": "Who gave Dr. Gao the grant?", "id": 199980, "answers": [{"answer_id": 229238, "document_id": 287816, "question_id": 199980, "text": "National Science Foundation (NSF)", "answer_start": 227, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "Dr. Xifeng Gao awarded an NSF grant for Curved Mesh Generation and Analysis | Dr. Xifeng Gao awarded an NSF grant for Curved Mesh Generation and Analysis FSU Computer Science Prof. Xifeng Gao recently received a grant from the National Science Foundation (NSF) for his project \u201cRobust High Order Meshing and Analysis for Design Pipeline Automation\u201d. The project is a collaborative effort between Florida State University and New York University. The goal of this project is to develop a robust meshing pipeline that generates curvilinear elements that can reproduce both CAD models and subdivision surfaces with high fidelity, uses a direct measure of approximation errors, leading to coarse meshes that are designed to match the simulation accuracy required by applications, and can robustly and automatically process large collections of real-world CAD models. For interactive applications, the combination of the generated curved elements and the new error estimate will lead to extremely coarse models ideal for fast simulation. In CAD settings, it will for the first time enable precise modeling of complex scenarios such as the driving of a screw or the simulations of the stress concentration on fillets. The approach will close the gap between design tools, providing an automatic conversion of curved geometry to analysis-suitable curved meshes. The awarded funding for FSU is in the amount of $260,722.", "document_id": 287816}]}, {"paragraphs": [{"qas": [], "context": "Dr. Zhenghao Zhang awarded $446k grant in Wireless Communication | Dr. Zhenghao Zhang awarded $446k grant in Wireless Communication Dr. Zhenghao Zhang was awarded funding by the National Science Foundation. The title of Dr. Zhang\u2019s research is \u201cCNS Core: Small: Supporting Massive Wireless Connections in the Internet-of-Things (IoT) with Multiple Zadoff-Chu (MZC) sequences.\u201d The amount is $446,751. Zhang is the sole PI of this grant.  In this project, a novel wireless communication technology for Low Power Wide Area Network will be investigated. The technology is based on modulating data on the Zadoff-Chu sequence, and is expected to  outperform the existing technologies significantly in capacity and communication range. See Dr. Zhang\u2019s homepage here.", "document_id": 287820}]}, {"paragraphs": [{"qas": [{"question": "What award did Dr. Zhi Wang win?", "id": 199998, "answers": [{"answer_id": 229256, "document_id": 287822, "question_id": 199998, "text": "Developing Scholar Award ", "answer_start": 69, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}, {"question": "Why are the developing scholars awards given?", "id": 199999, "answers": [{"answer_id": 229257, "document_id": 287822, "question_id": 199999, "text": "are given to mid-career, associate professor level faculty to support their research programs. ", "answer_start": 227, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "Dr. Zhi Wang won the Developing Scholar Award | Dr. Zhi Wang won the Developing Scholar Award Congratulations to Dr. Zhi Wang for winning the 2018-2019 competition of the Developing Scholar Award. The Developing Scholar Awards are given to mid-career, associate professor level faculty to support their research programs. Dr. Zhi Wang received his Ph.D in computer science from North Carolina State University in 2012, and his M.S and B.S from Xi\u2019an Jiaotong University in 2002 and 1999, respectively. He joined the Department of Computer Science at Florida State University as an assistant professor in 2012 and was promoted to associate professor with tenure in Fall 2018. His research interest focuses on systems security and has prolifically published papers in top systems and security conferences, including IEEE S&P, ACM CCS, USENIX Security, and NDSS, USENIX ATC, and EuroSys. Dr. Wang is a recipient of the NSF CAREER award (2015).", "document_id": 287822}]}, {"paragraphs": [{"qas": [], "context": "Dr. Xiaonan Zhang Joins the CS Department | Dr. Xiaonan Zhang Joins the CS Department Dr. Xiaonan Zhang joined the CS department at FSU in Fall 2020. She received her Ph.D. from Clemson University in Aug. 2020, and she received her M.S. degree from the State University of New York at Binghamton in 2017. Her current research interests focus on intelligent next-generation network systems, with an emphasis on resource allocation, network science, and wireless security in a heterogeneous wireless environment. She is looking for highly motivated students to work with at FSU. Note: next-generation network systems are expected to connect billions of heterogeneous Internet of Things (IoT) devices along with billions of people, enable machine-to-machine communications, and provide low-latency computational and storage resources on-demand at the edge and in the cloud.", "document_id": 287815}]}, {"paragraphs": [{"qas": [{"question": "Who sponsors the Mainline Information Systems professorship?", "id": 199986, "answers": [{"answer_id": 229244, "document_id": 287817, "question_id": 199986, "text": "Mainline Information Systems", "answer_start": 320, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "Dr. Xin Yuan and Dr. Weikuan Yu Awarded FSU CS Professorships | Dr. Xin Yuan and Dr. Weikuan Yu Awarded FSU CS Professorships Dr. Xin Yuan has been awarded the Harris Professorship that is sponsored by the L3Harris Corporation. Dr. Weikuan Yu has been awarded the Mainline Information Systems Professorship sponsored by Mainline Information Systems. Both professorships have three-year terms.", "document_id": 287817}]}, {"paragraphs": [{"qas": [], "context": "CS Department NSF S-STEM Scholarship | CS Department NSF S-STEM Scholarship Through the generous funding of the National Science Foundation, the Department of Computer Science will offer S-STEM scholarships to academically talented students with financial need, to address the shortage of labor, women, and underrepresented groups in computing. Each S-STEM scholar will be supported for four years, up to $10,000 per year. The scholarship is intended to reduce or replace student loans so that students can better focus on their academic endeavors. To be eligible to apply, you must (1) be a first-year undergraduate for 2015/2016, with an interest in taking early course sequences in computer science, (2) be a U.S. citizen/permanent resident, U.S. national, or otherwise qualified alien, and (3) have financial need as determined by the Free Application for Federal Student Aid (FAFSA). Women and underrepresented groups are strongly encouraged to apply. To apply for the S-STEM scholarship, please (1) complete and submit the FAFSA application to the FSU Financial Aid Office if you have not done so, and (2) download, complete, sign, date, and submit the S-STEM application form to the following address: Lauren Higbee 253 Love Building Department of Computer Science Florida State University Tallahassee, FL 32306-4530 FAX: (850) 644-0058 Application processing will begin on June 1 each year. For questions and assistance on completing FAFSA or S-STEM applications, please contact Lauren Higbee at higbee [at]cs.fsu.edu, (850) 644-8700.", "document_id": 287828}]}, {"paragraphs": [{"qas": [{"question": "How much did FSU receive?", "id": 200027, "answers": [{"answer_id": 229285, "document_id": 287833, "question_id": 200027, "text": "$300,400", "answer_start": 23, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "Florida State receives $300,400 to fund Scholarships For Service program | Florida State receives $300,400 to fund Scholarships For Service program Florida State University was granted $300,400 in additional support for its National Science Foundation\u00a0(NSF) Scholarships For Service (SFS) Cybercorps program. The program includes Florida State Master\u2019s Degree students in Computer Science, IT, and Computer Criminology. Focused on Information Assurance education, the SFS program awards scholarship funds to students in exchange for service in the federal government for a period equivalent to the length of their scholarship (up to three years). Federal agencies are able to select from a highly qualified pool of student applicants for internships and permanent positions, and students get a guaranteed job. The SFS program is offered by the National Science Foundation\u00a0(NSF) and co-sponsored by the Department of Homeland Security\u00a0(DHS). Each student receives a stipend up to $20,000 for undergrads, or $32,000 for graduates, plus tuition, fees, books, and medical. The program funds will support up to 50\u00a0Cyber Scholars for the period 2010-2017. Scholarship recipients shall pursue academic programs in Information Assurance for up to three years: the last undergraduate year (senior) and up to two years at MS level. They will participate as a cohort during their studies and activities, including a summer internship in a federal agency at the end of their first year of support. Mike Burmester, Professor and director of the Center for Security and Assurance in IT (C-SAIT), supports the program initiative and called it \u201ca great program in which students could really value the professional opportunity while receiving an excellent benefit package.\u201d Such an award continues to set FSU apart in a growing STEM-centered field of professional opportunities. It is indeed a great funding award, not only for SFS scholars, but also for those who want to continue to see the best and brightest come from FSU. The quality of this award demands a very selective process. Each candidate should expect to provide cumulative GPA, test scores, letters of reference, and evidence of technical knowledge and leadership skills. This award with this amendment totals $2,236,793 and ends August 31, 2017. For more information contact Mike Burmester and Xiuwen Liu . Or visit the C-SAIT Scholarship for Service page for application details.", "document_id": 287833}]}, {"paragraphs": [{"qas": [], "context": "FSU Computer Science Ph.D. Student to Present in Top Computer Architecture & Systems Conference | FSU Computer Science Ph.D. Student to Present in Top Computer Architecture & Systems Conference Mustakimur R. Khandaker, a Ph.D. candidate in the CS Department under the supervision of Prof. Zhi Wang, has published a full paper in the prestigious 25th ACM International Conference on Architectural Support for Programming Languages and Operating Systems (ASPLOS\u201920), which will hold on March 16-20, 2020 in Lausanne, Switzerland. ASPLOS is one of the top-tier conferences in the computer architecture and systems area. The paper, titled \u201cCOIN Attacks: On Insecurity of Enclave Untrusted Interfaces in SGX,\u201d proposes a comprehensive threat model, named \u201cCOIN Attacks\u201d in the Intel SGX enclave interface and develops an extensible framework to detect enclave vulnerabilities in the presence of the COIN attacks. The research reports 52 vulnerabilities in 10 GitHub open-source SGX projects. The artifact earns two badges \u201cArtifact Available\u201d and \u201cArtifact Functional\u201d from ASPLOS AE reviewers. In addition, Mustakimur published two papers earlier in Control-flow Integrity (CFI): \u201cAdaptive Call-site Sensitive Control Flow Integrity\u201d won the Best Paper Award in EuroS&P, and \u201cOrigin-sensitive Control Flow Integrity\u201d was published in USENIX Security, a top Computer Security conference. All three projects are available at the author\u2019s GitHub page: https://github.com/mustakcsecuet/ . Mustakimur is currently\u00a0seeking a job in academics.", "document_id": 287834}]}, {"paragraphs": [{"qas": [], "context": "FSU Professor Weikuan Yu Receives a Research Grant from Lawrence Livermore National Lab | FSU Professor Weikuan Yu Receives a Research Grant from Lawrence Livermore National Lab Dr. Weikuan Yu, from the Department of Computer Science at Florida State University, was awarded a grant of $72K from Lawrence Livermore National Laboratory for his most recent project on data-intensive systems research. Yu\u2019s project, titled \u201cA Distributed File System for Burst Buffers on HPC Systems\u201d will conduct research and development activities to develop a distributed file system for burst buffers. Burst buffers are being introduced into high performance computing (HPC) storage architectures as a mechanism for solving the scalability problems associated with I/O from large-scale runs. By enabling the efficient use of burst buffers, this new project will address the needs of scalable performance and reliability across distributed burst buffers for data-intensive applications on leadership computing facilities. The resulting prototype will be incorporated to large-scale file systems at DOE computing facilities hosted at LLNL. Dr. Yu is a tenured Associate Professor in the Department of Computer Science at Florida State University (FSU). He served as a Research Staff Member at Oak Ridge National Lab until 2009, and then an assistant and associate professor at Auburn University until 2015. He is also credited as the creator of the Parallel Architecture and Systems Laboratory (PASL) at Auburn and FSU. Dr. Yu\u2019s research interests include a multitude of technical areas including; data mining and analytics of big data and social networks, parallel computer systems and architecture, high speed interconnects, cloud computing, computational biology and climate modeling, and I/O systems. Once again, congratulations to Dr. Yu on his recent accomplishments. The development of more efficient distribution of burst buffers will do wonders in the field of large-scale file systems.", "document_id": 287838}]}, {"paragraphs": [{"qas": [{"question": "What does Dr. Gao research?", "id": 200036, "answers": [{"answer_id": 229294, "document_id": 287835, "question_id": 200036, "text": "geometry processing, such as Computer Graphics, Visualization, Multimedia Processing, Medical Imaging, Information Forensics, and Digital Fabrication", "answer_start": 520, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "FSU Computer Science Welcomes Dr. Xifeng Gao | FSU Computer Science Welcomes Dr. Xifeng Gao Dr. Xifeng Gao will join the Department of Computer Science at FSU in Fall 2018 as an Assistant Professor. Dr. Gao is now holding a PostDoc position at the Courant Institute of Mathematical Sciences of New York University. He received his Ph.D. degree in 2016 and won the best Ph.D. dissertation award from the Department of Computer Science at the University of Houston. Dr. Gao has wide research interests that are related to geometry processing, such as Computer Graphics, Visualization, Multimedia Processing, Medical Imaging, Information Forensics, and Digital Fabrication. His research works have been published in several leading Journals, e.g., ACM TOG, ACM TOMM, CGF, and IEEE TVCG. More details about his research can be found on his homepage: https://gaoxifeng.github.io/. He is looking for talented students interested in geometry processing.", "document_id": 287835}]}, {"paragraphs": [{"qas": [{"question": "How much was the grant worth?", "id": 200042, "answers": [{"answer_id": 229300, "document_id": 287837, "question_id": 200042, "text": "$315,000", "answer_start": 886, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "FSU Professor David Whalley Awarded NSF Project Grant | FSU Professor David Whalley Awarded NSF Project Grant FSU Department of Computer Science Professor David Whalley has been awarded a new NSF grant for his project \u201cSphinx: Combining Data and Instruction Level Parallelism through Demand Driven Execution of Imperative Programs.\u201d The project is a collaborative effort between FSU, and a colleague from Michigan Technological University. The aim of this project is to develop an alternative execution model, namely, demand-driven execution of imperative programs. As Professor Whalley explained, \u201cIn our model, a program that is compiled from a contemporary language is executed in a demand-driven fashion in such a way that both instruction and data-level parallelism can be harvested through compiler-architecture collaboration.\u201d The award includes funding for FSU in the amount of $315,000. To learn more about Dr. Whalley and his work, visit his website here", "document_id": 287837}]}, {"paragraphs": [{"qas": [{"question": "What is Jeffery Ereckson's email?", "id": 200056, "answers": [{"answer_id": 229314, "document_id": 287846, "question_id": 200056, "text": " jereckson@foundation.fsu.edu", "answer_start": 1247, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "Giving | Giving Your Gifts to Computer Science Are So Important Welcome Back Seminoles! If you would like the opportunity to reconnect with Florida State and the Department of Computer Science, you can make contributions by check, credit card, or bank draft through the FSU Foundation . One-time gifts or donations are extremely beneficial and make a tremendous difference in our efforts. For online gifts, go to https://one.fsu.edu/foundation/donate/give-online . Under Designation click on More Designations . In the Fund Description box, enter Computer Science Fund , and/or in the Fund # box, enter F00068 , then click the Search botton. In the search results, click on the Computer Science Fund link. To mail a contribution, go to https://one.fsu.edu/foundation/donate/give-online , print the form, and mail your gift along with the form to: The Florida State University College of Arts & Sciences Attn: Nancy Smilowitz 125 Convocation Way Tallahassee, FL 32306-1280 For more information on how you can donate to the Department of Computer Science, please contact Nancy Smilowotz or Jeff Ereckson in the College of Arts and Science. Nancy Smilowitz Office: (850)644-9324 Email: nsmilow@fsu.edu Jeffrey K. Ereckson Office: (850)644-3370 Email: jereckson@foundation.fsu.edu", "document_id": 287846}]}, {"paragraphs": [{"qas": [], "context": "Gokila Dorai named a Finalist at 2018 Three Minute Thesis Competition | Gokila Dorai named a Finalist at 2018 Three Minute Thesis Competition The 2018 Three Minute Thesis competition at Florida State University was held in the Durell Peadean Auditorium in the College of Medicine on Tuesday, Nov. 27. The Three Minute Thesis competition, which began at the University of Queensland in Australia in 2008, charges graduate students to explain their thesis work in a compelling three-minute speech. The goal is for participants to effectively explain their research in plain language in 3-minutes. This year there were 33 participants. A team of judges selected 14 finalists. This year Gokila Dorai from the Department of Computer Science was chosen as one of the finalists and she presented her talk on the topic \u201cDigital Forensic Analysis of Mobile Applications using AI\u201d.", "document_id": 287847}]}, {"paragraphs": [{"qas": [], "context": "Melina Myers promoted | Melina Myers promoted Congratulations to Melina Myers on her promotion to the rank of Teaching Faculty II, effective in Fall 2018. Melina Myers earned her Bachelor\u2019s degree in Computational Biology and Masters Degree in Information Security from FSU. She began teaching in the same department in late 2013. Since joining the CS Faculty, Melina has taught a number of courses including COP3014 Introduction Programming, COP3363 Programming in C++ for Majors, COP3353 Introduction to UNIX, COP3502 Introduction to Computer Science, CGS3416 Java Programming for Non-Spcialists, and CGS2100 Micro -computer applications for Business/Economics. Throughout her first five years teaching, Mrs. Myers was nominated every year for the FSU Undergraduate Teaching award, and won the university wide honor in 2017. She was also the recipient of the 2018 Phi Beta Kappa Excellence in Teaching Award, which is given to one teacher at FSU each year. Aside from teaching, Melina also enjoys sports photography and has worked for USA Today and other sports corporations.", "document_id": 287859}]}, {"paragraphs": [{"qas": [], "context": "Ms. Gokila Dorai Awarded UPE Scholarship | Ms. Gokila Dorai Awarded UPE Scholarship Ms. Gokila Dorai was awarded the UPE Scholarship Cash Award of $1000 by Upsilon Pi Epsilon, an International Honor Society for the Computing and Information Disciplines (www.acm.org/upe/) in September 2017. She was selected for this award on the basis of academic record, extra-curricular activities and the glowing recommendation of FSU Computer Science UPE Chapter Advisor Dr. David Gaitros.  Congratulations to Ms. Dorai!", "document_id": 287861}]}, {"paragraphs": [{"qas": [], "context": "Intel Awards Grant to FSU CS in Computer Vision | Intel Awards Grant to FSU CS in Computer Vision Intel Corporation recently awarded a 6-months grant in the amount of $25,074 to Prof. Shayok Chakraborty. The objective of this project, titled \u201cActive Learning for Computer Vision\u201d, is to develop a semester-long curriculum on the emerging topic of active learning for computer vision applications. The rapid escalation of technology and the widespread emergence of modern technological equipment have resulted in the generation of large amounts of digital data (in the form of images, videos and text) in the modern era. This has expanded the possibilities of solving real-world problems using computational learning frameworks. However, annotating the data with class labels, to induce a machine learning model, is an expensive process in terms of time, labor and human expertise. This has set the stage for research in the field of active learning. Active learning algorithms automatically identify the salient and exemplar samples from large amounts of unlabeled data. This tremendously reduces human annotation effort, as only a few samples, which are identified by the algorithm, need to be labeled manually. Further, since the model gets trained on the most informative samples from the data population, it has better generalization capability than a standard passive learner. This project will produce a comprehensive survey of the existing work on active learning for vision applications, which can be used to educate students and next generation machine learning researchers in industry and academia on this important research challenge.", "document_id": 287857}]}, {"paragraphs": [{"qas": [{"question": "What program honored Melina Myers?", "id": 200070, "answers": [{"answer_id": 229328, "document_id": 287860, "question_id": 200070, "text": "Transformation Through Teaching program", "answer_start": 185, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "Melina Myers Recognized for Inspiring, Motivating Students | Melina Myers Recognized for Inspiring, Motivating Students Ten Florida State University faculty members were honored by the Transformation Through Teaching program for their actions to foster meaning and purpose among their students. Included was our own Melina Myers, teaching faculty in our CS department. Melina was nominated by junior computer criminology major Jessica Mitchell for encouraging students to find their passion and offering valuable advice. \u201cWhen I took Melina Myers\u2019 class, her teaching and guidance at office hours and her taking time to get to know me helped me find the love I have for my major and sparked a light in me. I know she is there with advice whether life or computer science related. She has helped me build my confidence in my own skills, and I know that I was taught by one of the best FSU has to offer.\u201d \u2014 Jessica Mitchell Outside Link: https://news.fsu.edu/news/university-news/2018/11/30/ten-fsu-faculty-recognized-for-inspiring-and-motivating-students/", "document_id": 287860}]}, {"paragraphs": [{"qas": [], "context": "Professor Zhenghao Zhang awarded a grant for wireless networks research | Professor Zhenghao Zhang awarded a grant for wireless networks research The National Science Foundation (NSF) recently awarded a 3-year, $360,751.00 grant to Prof. Zhenghao Zhang for his research in wireless networks. The project is titled \u201cNeTS: Small: Theory and Applications of Sparse Approximations of the Channel State Information in Wi-Fi Networks.\u201d The focus of this project is to design efficient methods for measuring, compressing, and utilizing the Channel State Information (CSI) of Wi-Fi networks based on the discovery made by Prof. Zhang and his student Avishek Mukherjee that the CSI can be approximated very well by very few sinusoids in most Wi-Fi networks. As the CSI is the key to many operations, such as data modulation in MU-MIMO transmissions, this project will likely remove a major bottleneck in Wi-Fi networks and allow users to enjoy higher speed and better service.", "document_id": 287862}]}, {"paragraphs": [{"qas": [], "context": "Weikuan Yu joins Computer Science | Weikuan Yu joins Computer Science The Department of Computer Science is pleased to welcome Dr.\u00a0Weikuan Yu as the newest faculty member to join our roster. With a PhD in Computer Science and a MS in Neurobiology from the Ohio State University, Dr.\u00a0Yu has been an Associate Professor at Auburn University for more than six years. There he directs the NSF-funded TigerSphere project for an Auburn campus-wide network and the Parallel Architecture and System Laboratory (PASL) group that hosts a 100-node CPU+GPU cluster for interdisciplinary data analytics and systems research. Dr.\u00a0Yu brings a broad array of scholarly, dedicated research and professional experiences to Florida State. His areas of specialization include big data, high-performance computing, computer architecture, file and storage systems, and interdisciplinary research on computational genomics. To date Dr.\u00a0Yu has more than 70 publications under his belt, which showcases his expertise in the field of computing. Dr.\u00a0Yu\u2019s most recent research has been supported in part by NASA, DOE (ORNL and LLNL), NSF, Alabama Department of Commerce, Mellanox, Intel, NVIDIA, Scitor, and Auburn University, with Yu as the PI for nearly $3.5M in external grants. In addition to his significant research contributions to the computer science field, Dr.\u00a0Yu has advised many Master\u2019s and Ph.D. students, many of whom have landed jobs in prestigious industrial and research organizations upon graduation. Former students under his leadership have joined organizations such as Oak Ridge National Laboratory, Yahoo, Intel, Boeing, IBM T.J. Watson Research Center, Amazon, and other industry positions. Also, Dr.\u00a0Yu\u2019s research won the 2012 Alabama Innovation Award and the First Prize of 2012 ACM Student Research Competition Grand Finals. Yu is a senior member of IEEE and member of ACM and USENIX. \u201cThe Department of Computer Science at Florida State University is very attractive to me because of its vibrant body of faculty and students, along with a strong emphasis on teaching and research excellence,\u201d Dr.\u00a0Yu said on his new tenure at Florida State University. \u201cI am very excited to join the department and I look forward to working with all colleagues for sustainable and impactful contributions to FSU and beyond.\u201d", "document_id": 287866}]}, {"paragraphs": [{"qas": [], "context": "PhD Grad Linghan Zhang Lands Tenure-Track Position at George Mason University | PhD Grad Linghan Zhang Lands Tenure-Track Position at George Mason University Linghan Zhang, a Ph.D. candidate under the supervision of Prof. Jie Yang, has earned a tenure-track Assistant Professor position in the Department of Cybersecurity at George Mason University. Her research focuses on cybersecurity including discovering new human biometrics, inventing biometric sensing methods, and designing practical systems for user authentication and identification. Her research work has been published in top-tier conferences such as ACM CCS, ACM CHI, and ACM Ubicomp, and has been reported by presses like NewScientist, Digital Trends, MobileTechDaily, Yahoo!, Tech Xplore. She will join the George Mason University in August 2021. George Mason University is a Carnegie Tier 1 Research [R1] university located in the greater Washington, D.C. metropolitan area, and is the largest public research university in Virginia, with an enrollment of over 38,000 students studying in over 200-degree programs.", "document_id": 287897}]}, {"paragraphs": [{"qas": [], "context": "Ph.D. Graduate Hired for Tenure-Track Position at UGA | Ph.D. Graduate Hired for Tenure-Track Position at UGA Mustakimur R. Khandaker, a recent Ph.D. graduate advised by Dr. Zhi Wang, will join the Department of Computer Science at the University of Georgia as a Tenure-track Assistant Professor. Mustakimur\u2019s research focuses on system and software security, more specifically, Control Flow Integrity (CFI), Trusted Executed Environment (TEE), program analysis (e.g., concolic analysis), etc. He has published in the top security and system conferences (USENIX Security, ASPLOS, and EuroS&P), and won the best paper award in EuroS&P 19. All his research projects are open-source available at https://github.com/mustakcsecuet . Mustakimur won the departmental outstanding teaching assistant award in 2018 and the graduate research assistant award in 2019. We wish him the best of luck in his new career in teaching and research at the University of Georgia. (Mustakimur is looking for motivated graduate students with strong background and interest in cyber-security. Send him an email if you are interested in joining him at the University of Georgia.)", "document_id": 287898}]}, {"paragraphs": [{"qas": [], "context": "Professor Peixiang Zhao Awarded a Grant For Big Graph Computation | Professor Peixiang Zhao Awarded a Grant For Big Graph Computation The National Science Foundation (NSF) recently awarded a 2-year, $200,000 grant to Prof. Peixiang Zhao for his research in big graph management, computation, and mining. This project, titled \u201cFacilitate Graph Computation by Graph Sparsification\u201d, was awarded from the NSF directorate CISE:IIS:III. In the past decade, modern science and technology have witnessed an explosive growth of networked systems giving rise to a vast ocean of data with completely transformed scale, structure, and complexity, which, without loss of generality, are often modeled and interpreted as graphs. However, real-world graphs are voluminous and exhibit unprecedented complexity and challenges, rendering them extremely hard to manage, costly to ingest, and complicated to analyze. In this project, Prof. Zhao and his students will systematically investigate the principles, methodologies, and algorithms of graph sparsification. The objective of this project is to simplify large-scale graphs into structure-enriched, quality-preserving graph summaries moving toward facilitating and optimizing a wide range of graph-based computations in real-world big graphs.", "document_id": 287903}]}, {"paragraphs": [{"qas": [], "context": "Professors Wang, Whalley, Haiduc, and Liu Awarded a $1 Million Grant from the National Science Foundation | Professors Wang, Whalley, Haiduc, and Liu Awarded a $1 Million Grant from the National Science Foundation The Department of Computer Science and the Department of Education have been jointly awarded a five-year $1 million grant to address the shortage of labor, women, and underrepresented groups as well as the high attrition rate in the field of computer science. The grant will support 32 four-year scholarships to help undergraduate students complete their degrees through broadened curricula, academic support, professional development, and cohort activities. Additionally, we seek to gather fine-grained qualitative data, to which we intend to apply natural language processing, machine learning, and traditional tools to help us identify the nature of persistence and causes of attrition across social economic backgrounds. Professor Andy Wang is the PI on this grant, and Professors David Whalley, Sonia Haiduc, Xiuwen Liu, and Lara Perez-Felkner are the co-PIs.", "document_id": 287905}]}, {"paragraphs": [{"qas": [], "context": "Professor Piyush Kumar Wins Fulbright American Scholar Award | Professor Piyush Kumar Wins Fulbright American Scholar Award FSU\u2019s Computer Science faculty member, Dr.\u00a0Piyush Kumar, was recently honored with the distinction of receiving this year\u2019s Fulbright American Scholar Award. This program was established to increase mutual understanding between the people of the United States and other countries through the exchange of persons, knowledge, and skills. There are over 8,000 grants given annually to undertake graduate study, advanced research, university lecturing, and classroom teaching. As of 2013, more than 325,400 persons\u2013122,800 from the United States and 202,600 from other countries\u2013have participated in the program since it began. Dr.\u00a0Kumar has been with the department since 2004 after joining as an assistant professor. He also held numerous visitations as a scientist throughout the United States and the UK in schools including MIT, Duke, and Oregon. He specializes in bridging the boundaries between algorithms and everyday life. His research revolves around taking computer theories and making them apply to real world practices. Designations like these continue to show the hard work our department puts into recruiting faculty dedicated to making a difference in their respective fields. As this distinction puts the department\u2019s best face forward on a national level, we wish him nothing but the best on his travels.", "document_id": 287904}]}, {"paragraphs": [{"qas": [], "context": "Professor Xin Yuan wins a grant for Software Defined Networking research | Professor Xin Yuan wins a grant for Software Defined Networking research Department of Energy (DoE) awards a 3-year $450,000 research grant to Prof. Xin Yuan for his research in Software Defined Networking (SDN). The project is titled \u201cSoftware Defined Networking for HPC Interconnects and its Extension across Domains.\u201d SDN is an emerging networking technology that allows software innovation in network control. It has been widely deployed in campus networks and data centers. This project will investigate the techniques and benefits of introducing Openflow-style SDN capability in the high performance computing (HPC) environment. The researchers also plan to develop software systems to provide Openflow-style SDN capability in InfiniBand, the current dominating interconnection network technology for HPC clusters, and to support SDN capability across multiple SDN domains by leveraging an existing inter-domain SDN framework such as the OSCARS system on ESnet.", "document_id": 287906}]}, {"paragraphs": [{"qas": [], "context": "The E-Crime Investigative Technologies (ECIT) Lab | The E-Crime Investigative Technologies (ECIT) Lab The E-Crime Investigative Technologies (ECIT) conducts research in support of digital forensics investigations. It develops new technologies and forensic tools to address real-world problems related to electronic or digital crime. ECIT often works closely with the Florida Department of Law Enforcement and with the National White Collar Crime Center.", "document_id": 287922}]}, {"paragraphs": [{"qas": [], "context": "Students Chosen to Attend Grade Hopper Conference | Students Chosen to Attend Grade Hopper Conference Florida State Computer Science students Ms. Gokila Dorai, Ms. Rebecca James, Ms. Jordan Snow, and Ms. Soheila Abishrami were chosen to attend the GraceHopper Conference 2017 in Orlando earlier this month.  Ms. Dorai, Ms. James, and Ms. Snow were awarded a conference scholarship from the Anita Borg Institute. Ms. Abishrami was awarded a travel grant from Google to attend GHC\u201917. During the conference, all the four students had a great opportunity to network with 18,000 other women in computing, all while learning a great deal about AI, HCI, ML, etc. Ms. Dorai, Ms. James, and Ms. Snow also participated in the Open Source Day, a Code-a-thon sponsored by Redhat.", "document_id": 287932}]}, {"paragraphs": [{"qas": [], "context": "Professor Yu Receives a New Grant from Lawrence Livermore National Lab | Professor Yu Receives a New Grant from Lawrence Livermore National Lab Oct 20, 2016 | News Dr. Weikuan Yu from the Department of Computer Science at Florida State University was awarded a grant of $125K from Lawrence Livermore National Laboratory for his most recent project on user-level file system research for burst buffers. Burst buffers are introduced into high performance computing (HPC) storage architectures as a mechanism for solving the scalability problems associated with I/O from large-scale runs. Building on top of his team\u2019s prior success in developing the BurstFS file system, Dr. Yu and his graduate students will conduct further research and development to enhance the performance and scalability of burst buffer file systems. Dr. Yu also has research interests in a multitude of technical areas including: data mining and analytics of big data and social networks, parallel computer systems and architecture, high speed interconnects, cloud computing, computational biology and climate modeling, and I/O systems. More information about his group research can be found at http://pasl.cs.fsu.edu/.", "document_id": 287908}]}, {"paragraphs": [{"qas": [{"question": "What award did Professor Zhang receive?", "id": 200185, "answers": [{"answer_id": 229442, "document_id": 287909, "question_id": 200185, "text": "NSF CAREER Award", "answer_start": 24, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}, {"question": "How much is the award worth?", "id": 200186, "answers": [{"answer_id": 229443, "document_id": 287909, "question_id": 200186, "text": "$499,672 ", "answer_start": 490, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "Professor Zhi Wang wins NSF CAREER Award | Professor Zhi Wang wins NSF CAREER Award FSU\u2019s Computer Science faculty member Zhi Wang recently received the privilege of being awarded this year\u2019s National Science Foundation CAREER Award. The NSF is the only federal agency whose mission includes support for all fields of fundamental science and engineering. NSF is no stranger to the department when it comes to funding research endeavors, and this designation comes with a funding package of $499,672 for the next 5\u00a0years. Professor Wang has been with the department since 2012, joining as an assistant professor where he also earned the First Year Professor Award. He earned a Ph.D. in Computer Science from North Carolina State University before deciding coming to Florida State. Before that, he spent several years as a Senior Software engineer for Intel Asia-Pacific Research and Development, Ltd. His current research focuses on solving a serious issue involving trustworthy operating systems. Professor Wang seeks to develop a kernel-level security enclave for operating systems, and then use these isolated enclaves to design unique defense techniques against attacks. Also, this research could present avenues to prevent cold-boot attacks, which are security headaches for governments and corporations. Professor Wang\u2019s work demonstrates the high level of the research our department is capable of producing and applying to real-world uses. Congratulations to Professor Wang on receiving this funding award, and best of luck on his current research.", "document_id": 287909}]}, {"paragraphs": [{"qas": [], "context": "Advanced Computation and Information Systems (ACIS) Lab | Advanced Computation and Information Systems (ACIS) Lab The lab has eight PS3 machines for research. The PS3\u2019s will serve the dedicated cycles we need to run experiments with CPU-bound forecast models. We are also interested in programming models and compilation techniques for heterogeneous multicore systems for which the machine will serve as a testbed.", "document_id": 287921}]}, {"paragraphs": [{"qas": [], "context": "The Large-Scale Experimental Networks and Systems (LENS) Group | The Large-Scale Experimental Networks and Systems (LENS) Group The Large-Scale Experimental Networks and Systems (LENS) Group investigates issues in networking and systems such as QoS routing, communication algorithms, overlay networks, performance analysis, and message passing libraries.", "document_id": 287923}]}, {"paragraphs": [{"qas": [{"question": "Who gave the award?", "id": 200111, "answers": [{"answer_id": 229368, "document_id": 287933, "question_id": 200111, "text": "National Institute of Justice", "answer_start": 242, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "Sudhir Aggarwal and Tathagata Mukherjee Receive New Award from NIJ | Sudhir Aggarwal and Tathagata Mukherjee Receive New Award from NIJ Dec 19, 2016 | News Professor Sudhir Aggarwal and Tathagata Mukherjee recently received an award from the National Institute of Justice in the amount of $541,232. The award supports the project \u201cTargeted Forensic Data Extraction from Mobile Devices.\u201d Such devices now have so much data on them that the privacy of this data is a reasonable concern. The goal of this proposal is to develop a prototype software system that supports relevant data extraction from iOS or Android based devices in a forensically sound manner.", "document_id": 287933}]}, {"paragraphs": [{"qas": [], "context": "Welcoming Alan Kuhnle to our CS Faculty | Welcoming Alan Kuhnle to our CS Faculty The FSU CS Faculty welcomed quite a few to their department this fall, and we are pleased this bunch includes Dr. Alan Kuhnle \u2014 Welcome! Prior to joining FSU, Alan Kuhnle was a Post-Doctoral Fellow at the University of Florida Informatics Institute, where he worked on efficient algorithms for large-scale genomics indexing. He received his Ph.D. degree in computer science from University of Florida in 2018, and he received his M.S. degree in mathematics from University of Florida in 2013. His research interests include optimization, machine learning, and network science. He is interested in the design of scalable algorithms with provable performance guarantees and the application of these algorithms to problems such as misinformation containment in online social networks, image summarization, and indexing of genetic data. His works have appeared in premier conferences and journals in machine learning and data mining. He is looking for highly motivated students to work with at Florida State University.", "document_id": 287937}]}, {"paragraphs": [{"qas": [{"question": "What does Dr. Gubanov research?", "id": 158298, "answers": [{"answer_id": 222942, "document_id": 287592, "question_id": 158298, "text": " Data Science, Large-scale Data Management and Deep Learning, Web-search, and Mobile Computing. ", "answer_start": 891, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "Dr. Gubanov published a paper in the August issue of Communications of ACM | Dr. Gubanov published a paper in the August issue of Communications of ACM The publication by Michael Gubanov together with collaborators from Rice University was selected to be included in the Research Highlight section of the Communications of ACM (CACM) journal. The journal is known to be very selective, summarizing the most impactful contributions to Computer Science across all areas. Gubanov describes a novel data analytics system, marrying linear and relational algebra, introduced by Edgar Codd in the Communications of ACM in 1970 and used widely in data management systems today. CACM has rigorous nomination and selection processes to ensure the best CACM articles are published in this section. Dr. Gubanov is an Assistant Professor in the Computer Science department. His research interests include Data Science, Large-scale Data Management and Deep Learning, Web-search, and Mobile Computing. His recent research accomplishments include 2017 IEEE ICDE Best Paper Award, 2018 ACM SIGMOD Research Highlight Award, invited articles to ACM SIGMOD Record, and IEEE TKDE journals in 2018 and 2019, 2020 CACM Research Highlight Honor, election to Sigma Xi, The Scientific Research Honor Society in 2021. Gubanov serves as a Vice-Chair of IEEE BigData 2021, as a Senior PC (SPC) member of The Web Conference 2021, as a PC Member of ACM SIGMOD 2022, IEEE ICDE 2022, 2021 ACM SIGMOD PC, 2021 EDBT PC, and as an SPC member of EDBT 2021. He also serves as a reviewer for 2021 ACM SIGMOD Record and IEEE TKDE journals.", "document_id": 287592}]}, {"paragraphs": [{"qas": [{"question": "Is coursework in linear algebra mandatory for the IDS program?", "id": 174009, "answers": [{"answer_id": 227863, "document_id": 287719, "question_id": 174009, "text": "Coursework in linear algebra is desirable, but not mandatory;", "answer_start": 1857, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "Interdisciplinary Master\u2019s Degree in Data Science (MS-IDS) in Computer Science | Interdisciplinary Master\u2019s Degree in Data Science (MS-IDS) in Computer Science Program Overview The Florida State University (FSU) College of Arts and Sciences and the Departments of Computer Science, Mathematics, Scientific Computing, and Statistics offer a Master\u2019s of Science Degree in Interdisciplinary Data Science (MS-IDS) that provides students a unique and broad educational experience across the four foundational areas of Data Science. The program requires 30 credits and can be completed in three academic semesters. The program consists of \u2013 a common core of 18-credit course work, and four additional electives that define a concentration in one of the participating areas Admission Requirements The MS-IDS graduate program appeals directly to students with undergraduate degrees in math, computer science, or statistics, but will also attract students with less traditional backgrounds, e.g., physics or engineering.  Therefore, the admissions requirements are designed to select students with strong training in mathematics, statistics, and computer science that would be common across a range of undergraduate degrees. In addition to meeting all of the University and College admission requirements for graduate study, each applicant for the MS-IDS program must: \u2013> The FSU IDS program is a self-pay program. In addition to meeting Florida State University and College of Arts and Sciences admission requirements for graduate study, each applicant for the FSU IDS program must: Have earned a Bachelor\u2019s degree from an accredited institution and possess a minimal background consisting of Calculus 2 (MAC 2312 or equivalent), Introductory Statistics (STA 2023 or equivalent), and experience with an object-oriented programming language, preferably Python or R. Coursework in linear algebra is desirable, but not mandatory; Have a minimum of 3.0 GPA (B or better average) on the last 60 hours of undergraduate credits; and be in good standing at the institution of higher learning last attended; Provide a statement of intent and CV or r\u00e9sum\u00e9; and Provide three letters of recommendation discussing the student\u2019s aptitude for graduate study A GRE score is not required for admission to the FSU IDS program for Fall 2021. Different majors and advanced electives may require additional prerequisites, which students will either have to demonstrate in their backgrounds or take additional coursework to satisfy. Additional information is available on the MS-IDS web site . Graduation Requirements The program requires at least 30 credits and 16 months to complete a course-based degree (3 academic semesters). The curriculum is designed with the expectation that the majority of students will graduate with a non-thesis course-based master\u2019s degree. All students will complete a common set of core courses (18 credits) and a minimum of 12 credits of electives that define the specific chosen major. Although most students are expected to complete the course-based option, students will have the option to pursue completion of a thesis or project track by completing a qualified research project, taking additional credits for research and project/thesis defense. This track may require up to 6 additional credit hours. Interdisciplinary Data Science Core Coursework: This is a course-based Master\u2019s degree program. All students will complete 30 credit hours consisting of 18 hours of core courses and 12 additional hours of coursework that define a specific major. 18 hours of core courses consist of: MAD 5XXX Mathematics for Data Science (3) COP 5XXX Introduction to Data Science (3) STA 5207 Applied Regression Methods (3) STA 5635 Machine Learning (3) CAP 5771 Data Mining (3) PHI 5XXX Data Ethics (2) XXX 5XXX Professional Development Seminar (1) Required Electives: The 12-hour additional coursework consists of four graduate courses and they are major-specific. For MS-IDS in Computer Science , the additional four courses are: CAP 5XXX Advanced Topics in Data Science (3) COP 5XXX Advanced Data Mining (3) Restricted Electives: One course in Cybersecurity chosen from the following, based on student background: CGS 5XXX Computer Security Fundamentals for Data Science (3) CIS 5370 Computer Security (3) One course from the following: CAP 5619 Deep and Reinforcement Learning Fundamentals (3) CAP 5605 Artificial Intelligence (3) CDA 5125 Parallel and Distributed Systems (3) CDA 5155 Computer Architectures (3) CNT 5505 Computer and Network Administration (3) COP 5570 Concurrent, Parallel and Distributed Programming (3) COP 5611 Advanced Operating Systems (3) COP 5725 Database Systems (3) COT 5405 Advanced Algorithms (3) ISC 5318 High-Performance Computing (3) Free Electives: None Detailed course description is available on the here .", "document_id": 287719}]}, {"paragraphs": [{"qas": [], "context": "Ann Tyson | Ann Tyson Teaching Faculty III Office: 101B MCH Telephone: 850-644-3416 E-Mail: aford [ at fsu dot edu ] Visit Personal Page", "document_id": 287740}]}, {"paragraphs": [{"qas": [{"question": "What is Professor Gaitros' email?", "id": 179430, "answers": [{"answer_id": 228872, "document_id": 287749, "question_id": 179430, "text": "gaitrosd [ at cs dot fsu dot edu ]", "answer_start": 115, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "David Gaitros | David Gaitros Senior Teaching Faculty Office: 105D Love Building Telephone: (850) 644-5832 E-Mail: gaitrosd [ at cs dot fsu dot edu ] Visit Personal Page", "document_id": 287749}]}, {"paragraphs": [{"qas": [], "context": "Caitlin Carnahan | Caitlin Carnahan Teaching Faculty Office: 205A Love Building Telephone: E-Mail: carnahan [ at cs dot fsu dot edu ] Visit Personal Page", "document_id": 287745}]}, {"paragraphs": [{"qas": [{"question": "Where is Professor Burmester's office?", "id": 179384, "answers": [{"answer_id": 228827, "document_id": 287744, "question_id": 179384, "text": "268 Love Building", "answer_start": 50, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}, {"question": "Who is researching lightweight cryptographic applications?", "id": 179409, "answers": [{"answer_id": 228852, "document_id": 287744, "question_id": 179409, "text": "Mike Burmester ", "answer_start": 0, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "Mike Burmester | Mike Burmester Professor Office: 268 Love Building Telephone: (850) 644-6410 E-Mail: burmeste [ at cs dot fsu dot edu ] Visit Personal Page Research Main research interest is securing distributed applications. Particular topics include: privacy/anonymity, pervasive/ubiquitous systems, lightweight cryptographic applications, RFIDs and sensor applications, trust management, and group key exchange. Recent work focuses on modularity and composability for secure lightweight cryptographic applications.", "document_id": 287744}]}, {"paragraphs": [{"qas": [{"question": "What is Professor van Engelen's phone number?", "id": 179416, "answers": [{"answer_id": 228859, "document_id": 287747, "question_id": 179416, "text": "(850) 645-0309", "answer_start": 93, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "Robert A. van Engelen | Robert A. van Engelen Professor Office: 168 Love Building Telephone: (850) 645-0309 E-Mail: engelen [ at cs dot fsu dot edu ] Visit Personal Page Research Dr. van Engelen\u2019s chief research interests are in the areas of compilers, distributed computing, grid computing and Web services, problem-solving environments for scientific computing, and Bayesian probabilistic networks. His specialization in the area of compilers is symbolic analysis for restructuring and parallelizing compilers, generalized induction variable recognition, data dependence analysis, embedded systems optimizations, and parametric estimation. He developed the gSOAP toolkit for XML Grid and Web services, which has become the de-facto Web services development toolkit for C/C++ in industry and academia. He also developed the CTADEL problem-solving environment for meteorological and atmospheric prediction models.", "document_id": 287747}]}, {"paragraphs": [{"qas": [{"question": "What does Professor Srinivasan research?", "id": 179375, "answers": [{"answer_id": 228818, "document_id": 287741, "question_id": 179375, "text": " Scientific and High Performance Computing, Applications, Parallel Algorithms, Mathematical Software, Stochastic techniques for linear algebra, and Computational nanotechnology.", "answer_start": 278, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}, {"question": "Who is researching stochastic techniques for linear algebra?", "id": 179398, "answers": [{"answer_id": 228841, "document_id": 287741, "question_id": 179398, "text": "Ashok Srinivasan", "answer_start": 0, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}, {"question": "Who developed SPRNG?", "id": 179400, "answers": [{"answer_id": 228843, "document_id": 287741, "question_id": 179400, "text": "Ashok Srinivasan", "answer_start": 0, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "Ashok Srinivasan | Ashok Srinivasan Affiliated Professor Office: Department of Computer Science, University of West Florida Telephone: (850) 644-0559 E-Mail: asriniva [ at cs dot fsu dot edu ] Visit Personal Page Research The primary research interests of Dr. Srinivasan include Scientific and High Performance Computing, Applications, Parallel Algorithms, Mathematical Software, Stochastic techniques for linear algebra, and Computational nanotechnology. His research is funded by NSF and DoD. Dr. Srinivasan developed the SPRNG Scalable Parallel Random Number Generation software, which is used by major organizations worldwide.", "document_id": 287741}]}, {"paragraphs": [{"qas": [], "context": "Zhenhai Duan | Zhenhai Duan Associate Professor Office: 162 Love Building Telephone: (850) 645-1561 E-Mail: duan [ at cs dot fsu dot edu ] Visit Personal Page Research Dr. Duan\u2019s research interests are broadly in computer networks, multimedia applications, and modeling and performance analysis of computer systems. Currently he is focusing on the scalable QoS control and management in the Internet, Internet routing protocols and service architectures, networking security, and wireless networks.", "document_id": 287746}]}, {"paragraphs": [{"qas": [{"question": "What is Professor Grigory's phone number?", "id": 179422, "answers": [{"answer_id": 228865, "document_id": 287748, "question_id": 179422, "text": "(206) 475-8585", "answer_start": 99, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "Grigory Fedyukovich | Grigory Fedyukovich Assistant Professor Office: 106C MCH Building Telephone: (206) 475-8585 E-Mail: grigory [ at cs dot fsu dot edu ] Visit Personal Page Research Dr. Fedyukovich\u2019s research interests are: Synthesis of inductive invariants for verification of program safety and termination Relational verification and its applications to security analysis and automated parallelization Functional (Skolem) synthesis via lazy quantifier elimination and programming by example Incremental verification using function summaries and simulation relations.", "document_id": 287748}]}, {"paragraphs": [{"qas": [{"question": "What is Professor Gao's email?", "id": 179434, "answers": [{"answer_id": 228876, "document_id": 287750, "question_id": 179434, "text": "gao [ at cs dot fsu dot edu ] ", "answer_start": 71, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "Xifeng Gao | Xifeng Gao Assistant Professor Office: Telephone: E-Mail: gao [ at cs dot fsu dot edu ] Visit Personal Page Research Dr. Gao has wide research interests in fields related to Geometry Computing, such as Computer Graphics, Computer Vision, Visualization, Robotics, and Fabrication.", "document_id": 287750}]}, {"paragraphs": [{"qas": [{"question": "What is Professor Hawkes researching?", "id": 199776, "answers": [{"answer_id": 229036, "document_id": 287752, "question_id": 199776, "text": "development of fault-tolerant protocols that will support reliable, large data transfers over high-speed WANs", "answer_start": 247, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "Lois Wright Hawkes | Lois Wright Hawkes Professor and Senior Associate Dean Office: 0110 Longmire Building Telephone: (850) 644-1083 E-Mail: hawkes [ at cs dot fsu dot edu ] Visit Personal Page Research Dr. Hawkes research interests relate to the development of fault-tolerant protocols that will support reliable, large data transfers over high-speed WANs. This is in response to the increasing need for high-performance disaster-tolerant networks that allow for the use of backup sites at a significant distance from the main site, thus ensuring a single disaster will not take down both sites. Included in this work are the development of fault-tolerant network protocols, quality of service issues, and reliability in end-to-end performance for the transfer of very large data sets. The corresponding infrastructure must be both cost-effective and robust.", "document_id": 287752}]}, {"paragraphs": [{"qas": [{"question": "Who is researching machine learning?", "id": 199783, "answers": [{"answer_id": 229043, "document_id": 287754, "question_id": 199783, "text": "Jiawei Zhang", "answer_start": 0, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "Jiawei Zhang | Jiawei Zhang Assistant Professor Office: 171 Love Building Telephone: (850)645-2174 E-Mail: jzhang [ at cs dot fsu dot edu ] Visit Personal Page Research Dr. Zhang\u2019s research interests span the fields of Data Fusion, Data Mining, and Machine Learning. The research projects in IFM Lab directed by Dr. Zhang include knowledge discovery from online social networks, text data, knowledge graphs, enterprise context data, human brain images with traditional machine learning and deep learning techniques. His research works focus on fusing multiple large-scale information sources of diverse varieties together, and carrying out synergistic data mining tasks across these fused sources in one unified analytic.", "document_id": 287754}]}, {"paragraphs": [{"qas": [], "context": "R. Christopher Lacher | R. Christopher Lacher Emeritus Professor Office: 206 Love Building Telephone: E-Mail: lacher [ at cs dot fsu dot edu ] Visit Personal Page", "document_id": 287758}]}, {"paragraphs": [{"qas": [], "context": "Jie Yang | Jie Yang Associate Professor Office: 251C Love Building Telephone: (850) 645-0417 E-Mail: jieyang [ at cs dot fsu dot edu ] Visit Personal Page Research Dr. Yang\u2019s research interests include cyber security and mobile computing, with an emphasis on network security, smartphone security and applications, security in cognitive radio and smart grid, location systems and vehicular applications. Dr. Yang\u2019s current research projects are supported by National Science Foundation (NSF) and Army Research Office (ARO) grants, including wireless security, security in cognitive radio networks, and mobile safety systems.", "document_id": 287755}]}, {"paragraphs": [{"qas": [{"question": "Who is researching optimization?", "id": 199800, "answers": [{"answer_id": 229059, "document_id": 287757, "question_id": 199800, "text": "Alan Kuhnle", "answer_start": 0, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}, {"question": "Who is researching network science?", "id": 199802, "answers": [{"answer_id": 229061, "document_id": 287757, "question_id": 199802, "text": "Alan Kuhnle ", "answer_start": 0, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "Alan Kuhnle | Alan Kuhnle Assistant Professor Office: 106A MCH Building Telephone: E-Mail: kuhnle [ at cs dot fsu dot edu ] Visit Personal Page Research Dr. Kuhnle\u2019s works generally focuses on the design and analysis of algorithms to solve optimization problems arising from machine learning, network science, and bioinformatics. Particular interests currently include scalable optimization of submodular functions, fast evolutionary algorithms with theoretical guarantees, and succinct data structures for representing genomics data.", "document_id": 287757}]}, {"paragraphs": [{"qas": [], "context": "Randolph Langley | Randolph Langley Senior Computer Scientist Office: 103 Carothers Building Telephone: (850) 645-1225 E-Mail: langley [ at cs dot fsu dot edu ] Visit Personal Page", "document_id": 287759}]}, {"paragraphs": [{"qas": [{"question": "What is Professor Levitz's email?", "id": 199812, "answers": [{"answer_id": 229070, "document_id": 287761, "question_id": 199812, "text": " levitz [ at cs dot fsu dot edu ]", "answer_start": 111, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "Hilbert Levitz | Hilbert Levitz Emeritus Professor Office: 206A Love Building Telephone: (904) 352-8201 E-Mail: levitz [ at cs dot fsu dot edu ] Visit Personal Page", "document_id": 287761}]}, {"paragraphs": [{"qas": [], "context": "Xian F. Mallory | Xian F. Mallory Assistant Professor Office: 171 Love Building Telephone: E-Mail: fan [ at cs dot fsu dot edu ] Visit Personal Page Research Dr. Mallory is interested in developing novel computational techniques for analyzing large data sets in order to understand biological phenomena and processes, with particular emphasis on cancer. Dr. Mallory\u2019s work draws upon methodologies from combinatorial optimization, statistical inference, and machine learning.", "document_id": 287763}]}, {"paragraphs": [{"qas": [], "context": "Melina Myers (Vastola) | Melina Myers (Vastola) Teaching Faculty II Office: 105B Love Building Telephone: (850) 645-0900 E-Mail: melina [ at cs dot fsu dot edu ] Visit Personal Page", "document_id": 287765}]}, {"paragraphs": [{"qas": [], "context": "Bob Myers | Bob Myers Associate Teaching Faculty Office: 105C Love Building Telephone: (850) 644-0972 E-Mail: myers [ at cs dot fsu dot edu ] Visit Personal Page", "document_id": 287767}]}, {"paragraphs": [{"qas": [], "context": "Sarp Oral | Sarp Oral Affiliated Faculty Office: ORNL Remote Telephone: (865)574-2173 E-Mail: oralhs [at ornl dot gov] Visit Personal Page", "document_id": 287769}]}, {"paragraphs": [{"qas": [], "context": "Daniel Schwartz | Daniel Schwartz Associate Professor Office: 266 Love Building Telephone: (850) 644-5875 E-Mail: schwartz [ at cs dot fsu dot edu ] Visit Personal Page Research Dr. Schwartz\u2019s research has spanned mathematical logic, fuzzy logic, formal methods in artificial intelligence, and their applications. He currently is engaged in project for the US Army involving case-based reasoning and data mining for computer network intrusion detection. This has led to an interest generally in information security. Dr. Schwartz also has interests in the area of digital libraries, which in turn entails concern with databases, software engineering, and Internet applications. His recent teaching includes courses on formal logic, artificial intelligence, databases, Java, and enterprise systems programming.", "document_id": 287771}]}, {"paragraphs": [{"qas": [], "context": "Sharanya Jayaraman | Sharanya Jayaraman Teaching Faculty Office: 205A Love Building Telephone: E-Mail: jayarama [ at cs dot fsu dot edu ] Visit Personal Page", "document_id": 287773}]}, {"paragraphs": [{"qas": [], "context": "Sudhir Aggarwal | Sudhir Aggarwal Professor Office: 263 Love Building Telephone: (850) 644 0164 E-Mail: sudhir [ at cs dot fsu dot edu ] Visit Personal Page Research Sudhir Aggarwal\u2019s current research interests are computer and communication networks where he is investigating support infrastructures for network games and building efficient overlay networks. He is also interested in building software tools in support of cybersecurity and law enforcement. His research interests have included problems in distributed and real-time system; design, analysis and verification of communication protocols; search engines; and modeling and simulation.", "document_id": 287775}]}, {"paragraphs": [{"qas": [{"question": "What is Professor Mascagni's phone number?", "id": 199824, "answers": [{"answer_id": 229082, "document_id": 287764, "question_id": 199824, "text": "(850) 644-3290", "answer_start": 98, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}, {"question": "Who is researching random number generation?", "id": 199829, "answers": [{"answer_id": 229087, "document_id": 287764, "question_id": 199829, "text": "Michael Mascagni", "answer_start": 0, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "Michael Mascagni | Michael Mascagni Professor (732) 601-4470 Office: 207 Love Building Telephone: (850) 644-3290 E-Mail: mascagni [ at cs dot fsu dot edu ] Visit Personal Page Research My research group focuses on all aspects of stochastic computing. We are interested in the development of Monte Carlo and Quasi-Monte Carlo algorithms; the applications of these algorithms in materials science, biochemistry, and physics; and the creation of computational infrastructure to support effective stochastic computing. We view Monte Carlo algorithms as any algorithms that use random number to compute quantities of interest. As such, we have developed extremely efficient Monte Carlo for problems ranging from the computation of permeabilities of packed beds to the electrostatic field elicited on large biomolecules in ionic solution. In addition, we study basic computational kernels, such as those involved in numerical linear algebra, to find effective Monte Carlo alternatives to existing, deterministic, algorithms. Finally, we have been involved in the development of computational infrastructure for stochastic computing. We developed the Scalable Parallel Random Number Generators (SPRNG) library that is very widely used in highly demanding Monte Carlo applications. SPRNG was an outgrowth of our own research in pseudo- and quasirandom number generation which continues in concert with SPRNG development. Also, building on SPRNG, we have developed extensive infrastructure for stochastic computing on the computational grid. In all these activities we have had undergraduate and graduate students, as well as postdoctoral scholars, visitors, and international collaborators working with me in our research group.", "document_id": 287764}]}, {"paragraphs": [{"qas": [], "context": "Chris Mills | Chris Mills Teaching Faculty I Office LOV 105-B Telephone: E-Mail: cmills [ at cs dot fsu dot edu ] Visit Personal Page", "document_id": 287766}]}, {"paragraphs": [{"qas": [{"question": "What is Professor Leach's email?", "id": 199809, "answers": [{"answer_id": 229067, "document_id": 287760, "question_id": 199809, "text": "sleach [ at pc dot fsu dot edu ]", "answer_start": 67, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "Stephen Leach | Stephen Leach Professor Office: Telephone: E-Mail: sleach [ at pc dot fsu dot edu ]", "document_id": 287760}]}, {"paragraphs": [{"qas": [], "context": "Adrian Nistor | Adrian Nistor Office: 251A Love Building Telephone: 850-644-1852 E-Mail: nistor [ at cs dot fsu dot edu ] Visit Personal Page Adrian received his PhD from the Department of Computer Science at the University of Illinois, Urbana-Champaign.  Adrian\u2019s research interests are in software engineering, with a focus on detecting, repairing, and preventing software bugs in real-world applications.  Adrian\u2019s techniques found more than 190 previously unknown bugs in widely used software, e.g., Google Chrome, Mozilla, Google Core Libraries, GCC, MySQL, Ant, Lucene, Groovy, Tomcat, JUnit, JMeter, Log4J, Struts, etc.", "document_id": 287768}]}, {"paragraphs": [{"qas": [{"question": "Who is researching information retreival?", "id": 199866, "answers": [{"answer_id": 229124, "document_id": 287772, "question_id": 199866, "text": "Sonia Haiduc ", "answer_start": 0, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "Sonia Haiduc | Sonia Haiduc Associate Professor Office: 251B Love Building Telephone: (850) 645-0727 E-Mail: shaiduc [ at cs dot fsu dot edu ] Visit Personal Page Research Dr. Haiduc\u2019s research interests are in software engineering, including software maintenance and evolution, program comprehension, source code search, and applications of information retrieval and natural language processing for solving software engineering tasks. Her work has been published in several highly selective software engineering venues, including the IEEE/ACM International Conference on Software Engineering. She serves on the Program Committee of several international conferences on software evolution and program comprehension and is a reviewer for journals such as the IEEE Transactions in Software Engineering, Journal of Software: Evolution and Process, and Automated Software Engineering.", "document_id": 287772}]}, {"paragraphs": [{"qas": [], "context": "Shayok Chakraborty | Shayok Chakraborty Assistant Professor Office: 264 Love Building Telephone: E-Mail: shayok [ at cs dot fsu dot edu ] Visit Personal Page Research Dr. Chakraborty\u2019s research interests include computer vision and machine learning. He is interested in developing intelligent learning algorithms under weak human supervision. His research has been validated on a variety of applications including face and facial expression recognition, object recognition and assistive technology.", "document_id": 287774}]}, {"paragraphs": [{"qas": [{"question": "Where is Professor Hoang's office?", "id": 199883, "answers": [{"answer_id": 229141, "document_id": 287776, "question_id": 199883, "text": "261 Love Building ", "answer_start": 62, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "Viet Tung Hoang | Viet Tung Hoang Assistant Professor Office: 261 Love Building Telephone: E-Mail: tvhoang [ at cs dot fsu dot edu ] Visit Personal Page", "document_id": 287776}]}, {"paragraphs": [{"qas": [], "context": "Zhi Wang | Zhi Wang Associate Professor Office: 166 Love Building Telephone: (850) 645-0476 E-Mail: zwang [ at cs dot fsu dot edu ] Visit Personal Page", "document_id": 287784}]}, {"paragraphs": [{"qas": [], "context": "David Whalley | David Whalley Professor Office: 160 Love Building Telephone: E-Mail: whalley [ at cs dot fsu dot edu ] Visit Personal Page Research Dr. Whalley\u2019s research interests include compilers, computer architecture, embedded systems, and performance evaluation. Over the years he has developed compiler optimizations, techniques for predicting the worst-case execution time of real-time tasks, fast methods for obtaining performance measures, and a number of compilation tools to ease the process of developing and enhancing a compiler. He recently has investigated both architectural and compilation issues involving embedded systems.", "document_id": 287778}]}, {"paragraphs": [{"qas": [], "context": "Xiaonan Zhang | Xiaonan Zhang Assistant Professor Office: Telephone: E-Mail: xzhang [ at cs dot fsu dot edu ] Visit Personal Page", "document_id": 287780}]}, {"paragraphs": [{"qas": [], "context": "James Wang | James Wang Research Specialist Office: 208B Carothers Building Telephone: E-Mail: yuwang [ at cs dot fsu dot edu ] Visit Personal Page Yu Wang is the manager of the Systems Group. He also plans, architects, and manages the department\u2019s computing systems and network.", "document_id": 287782}]}, {"paragraphs": [{"qas": [], "context": "Gary Tyson | Gary Tyson Professor Office: 163 Love Building Telephone: (850) 644-3088 E-Mail: tyson [ at cs dot fsu dot edu ] Visit Personal Page Research Dr. Tyson\u2019s research areas span all aspects of computer architecture and compiler optimization. His most recent efforts have concentrated on the design of high-performance single-chip processors with a focus on how the compiler can organize microarchitectural resources to provide the highest performance. Gary and his students have published numerous papers on cache organization and have designed several decoupled architectures. His research is funded by the National Science Foundation, Intel Corporation, IBM, and (of course) taxpayers throughout the country.", "document_id": 287777}]}, {"paragraphs": [{"qas": [{"question": "Where is Professor Yuan's office?", "id": 199899, "answers": [{"answer_id": 229157, "document_id": 287779, "question_id": 199899, "text": "168 Love Building", "answer_start": 38, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "Xin Yuan | Xin Yuan Professor Office: 168 Love Building Telephone: (850) 644-9133 E-Mail: xyuan [ at cs dot fsu dot edu ] Visit Personal Page Research Dr. Yuan\u2019s research interests are in Computer Networks, Computer Systems, and High Performance Computing (HPC). His most recent efforts have concentrated on the design and evaluation of high-performance interconnection networks for extreme-scale high-performance computing systems and data centers, and on applying the software defined networking technology to improve communication subsystems for both HPC systems and data centers. His research is funded by the National Science Foundation, NSA, Department of Energy, and Los Alamos National Laboratory.", "document_id": 287779}]}, {"paragraphs": [{"qas": [], "context": "Peixiang Zhao | Peixiang Zhao Associate Professor Office: 262 Love Building Telephone: (850) 645-0346 E-Mail: zhao [ at cs dot fsu dot edu ] Visit Personal Page", "document_id": 287783}]}, {"paragraphs": [{"qas": [], "context": "Zhenghao Zhang | Zhenghao Zhang Professor Office: 164 Love Building Telephone: (850) 644-1685 E-Mail: zzhang [ at cs dot fsu dot edu ] Visit Personal Page Research Dr. Zhang\u2019s main research interests are in the broad area of Computer Networks, including network security systems, computer scheduling algorithms, performance analysis, wireless access networks, cross-layer design, optical networks, and wireless sensor networks.", "document_id": 287785}]}, {"paragraphs": [{"qas": [{"question": "What is the course number for Introduction to Computer Networks?", "id": 158345, "answers": [{"answer_id": 222989, "document_id": 287599, "question_id": 158345, "text": "CNT 4504 ", "answer_start": 1806, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}, {"question": "What is the course number for Data and Computer Communications?", "id": 158346, "answers": [{"answer_id": 222990, "document_id": 287599, "question_id": 158346, "text": "CNT 5505 ", "answer_start": 1849, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "Certificate | Certificate CNSS has discontinued the certificate program NSTISSI 4011 and CNSS4014 as of January 1, 2015. In April 2000, the NSA\u2019s Information Assurance Directorate designated Florida State University as having met the training standards of the Information Assurance Courseware Evaluation . This process involved assessing the quality of FSU\u2019s curriculum by a formal, rigorous training standard. FSU has, for the third time, renewed its certification to train specialists under the Committee of National Security Systems (CNSS) standards NSTISSI standard 4011 \u201cInformation Security Professionals\u201d. As of August 2008, the university is also certified to offer the additional professional standard of CNSS 4014 for \u201cInformation Security Officers\u201d. By achieving these designations, FSU students that complete the courses specified in the program are recognized as having been trained to serve as Information Systems Security Professionals or Information Systems Security Officers and receive a certificate that says the student \u201chas satisfactorily completed an educational program certified by CNSS as compliant with NSTISSI No. 4011 or CNSS 4014 . \u201d This certificate is only available to degree-seeking undergraduate and graduate students at FSU that complete the core courses and their prerequisites. The certificate must be requested by the student in the same term of graduation as the student\u2019s degree program. The requirements to meet the standards for the CNSSI-4014 (Security Officer) certificate are as follows: Undergraduate Level Graduate Level COP 4710 Theory and Structures of Databases COP 5725 Database Systems CIS 4360 Introduction to Computer Security CIS 5370 Computer Security CNT 4406 Network Security and Cryptography CNT 5412 Network Security, Active and Passive Defenses CNT 4504 Introduction to Computer Networks CNT 5505 Data and Computer Communications CNT 4603 Computer and Network System Administration CNT 5605 Computer and Network Administration COP 4610 Operating Systems and Concurrent Programming COP 5611 Advanced Operating Systems In order to obtain the additional certificate for completion of the NSTISSI-4011 (Security Professional) requirements, students must also take the following core courses: CDA 3101 Computer Organization COP 3330 Object-Oriented Programming 1. Details about the renewal of NSTISSI #4011 and CNSSI #4014 FSU-Recert.doc 2. Details about SAIT and the program FSU.doc For questions about the certificate program, please contact Michael Burmester . For questions about information security research at FSU, see our research pages .", "document_id": 287599}]}, {"paragraphs": [{"qas": [{"question": "Who is Randolph Langley?", "id": 157148, "answers": [{"answer_id": 221299, "document_id": 164054, "question_id": 157148, "text": "Senior Computer Scientist", "answer_start": 512, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "Faculty | Computer Science\n\nFaculty\nMain Campus\nSudhir Aggarwal\nProfessor\nMike Burmester\nProfessor\nShayok Chakraborty\nAssistant Professor\nZhenhai Duan\nAssociate Professor\nGrigory Fedyukovich\nAssistant Professor\nXifeng Gao\nAssistant Professor\nMichael Gubanov\nAssistant Professor\nSonia Haiduc\nAssociate Professor\nLois Wright Hawkes\nProfessor and Senior Associate Dean\nViet Tung Hoang\nAssistant Professor\nSharanya Jayaraman\nTeaching Faculty I\nAlan Kuhnle\nAssistant Professor\nPiyush Kumar\nProfessor\nRandolph Langley\nSenior Computer Scientist\nXiuwen Liu\nProfessor and Chair\nXian F. Mallory\nAssistant Professor\nMichael Mascagni\nProfessor\nChris Mills\nTeaching Faculty I\nBob Myers\nTeaching Faculty III\nMelina Myers (Vastola)\nTeaching Faculty II\nDaniel Schwartz\nAssociate Professor\nAnn Tyson\nTeaching Faculty III\nGary Tyson\nProfessor\nAn-I Andy Wang\nProfessor\nJames Wang\nResearch Specialist\nZhi Wang\nAssociate Professor\nDavid Whalley\nProfessor\nJie Yang\nAssociate Professor\nWeikuan Yu\nProfessor\nXin Yuan\nProfessor\nJiawei Zhang\nAssistant Professor\nXiaonan Zhang\nAssistant Professor\nZhenghao Zhang\nProfessor\nPeixiang Zhao\nAssociate Professor\nPanama City Campus\nKatie Brodhead\nTeaching Faculty I\nDavid Gaitros\nTeaching Faculty III\nGang-Ryung Uh\nTeaching Faculty I\nKaren Works\nTeaching Faculty I\nEmeritus Faculty\nTheodore P. Baker\nEmeritus Professor\nR. Christopher Lacher\nEmeritus Professor & Teaching Faculty III\nStephen Leach\nTeaching Faculty III\nHilbert Levitz\nEmeritus Professor\nAdjunct Faculty\nJeff Bauer\nAdjunct Faculty\nRichard Hurst\nAdjunct Faculty\nMatt Ruddell\nAdjunct Faculty\nAffiliated Faculty\nDavid Gilbert\nAffiliated Faculty\nNeena Imam\nAffiliated Faculty\nKathryn Mohror\nAffiliated Faculty\nH. Sarp Oral\nAffiliated Faculty\nAshok Srinivasan\nAffiliated Faculty\nManjunath Gorentla Venkata\nAffiliated Faculty\n", "document_id": 164054}]}, {"paragraphs": [{"qas": [{"question": "What is Amy Sanderson's email?", "id": 154711, "answers": [{"answer_id": 218518, "document_id": 144166, "question_id": 154711, "text": "Email: aesanderson [ at fsu dot edu ]", "answer_start": 792, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}, {"question": "What is Lauren Higbee's phone number?", "id": 154712, "answers": [{"answer_id": 218519, "document_id": 144166, "question_id": 154712, "text": "Phone: (850) 644-8700", "answer_start": 925, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}, {"question": "What is Daniel Clawson's email?", "id": 154717, "answers": [{"answer_id": 218524, "document_id": 144166, "question_id": 154717, "text": "Email: clawson [ at cs dot fsu dot edu ]", "answer_start": 1172, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "Advising | Computer Science\n\nAdvising\nUndergraduate Advising\nCurrently, undergraduate advising for Computer Science is conducted remotely over Zoom for current FSU students.\nSummer 2021 Sessions A/B Drop/Add week (May 10-13):\nAdvising is available on a drop-in basis only. Please log in to Campus Connect to check in on the virtual kiosk in order to be seen by an advisor.\nHow to make an appointment: \nAfter Drop/Add, summer advising will be by appointment only.\nCurrent FSU students may make an appointment via Campus Connect. Log in to my.fsu.edu and click the \u201cCC\u201d icon at the top left, then \u201cSchedule Advising.\u201d Zoom links and meeting IDs are listed in advisor availability in CC.\nAmy Sanderson \nAdvising First Academic Advisor\nAcademic Advisor for Computer Science\nPhone: (850) 644-3768\nEmail: aesanderson [ at fsu dot edu ]\nLauren Higbee \nAcademic Program Specialist\nJunior/Senior Academic Advisor for Computer Science\nPhone: (850) 644-8700\nEmail: lhigbee [ at fsu dot edu ]\nUndergraduate Advising FAQ \nAll FSU Students\nStudents with Majors in the CS Department\nGraduate Advising\nDaniel Clawson\nAcademic Program Specialist\nGraduate Coordinator\nPhone: (850) 644-4975\nEmail: clawson [ at cs dot fsu dot edu ]\n", "document_id": 144166}]}, {"paragraphs": [{"qas": [], "context": "Course Number Changes | Computer Science\n\nCourse Number Changes\nThere have been recent course number changes to a number of courses in the Computer Science department. Please refer below:\nCurrent Course Number\nNew Course Number\nCourse Title\nCOP 3344\nCOP 3353\nINTRODUCTION TO UNIX\nCOP 3331\nCEN 4020\nSOFTWARE ENGINEERING I (content changed as well)\nCEN 4010\nCEN 4021\nSOFTWARE ENGINEERING II (content changed as well)\nCDA 4503\nCNT 4504\nINTRODUCTION TO COMPUTER NETWORKS\nCEN 5515\nCNT 5505\nDATA AND COMPUTER COMMUNICATIONS\nCIS 4362\nCNT 4406\nNETWORK SECURITY AND CRYPTOGRAPHY\nCIS 4407\nCNT 4603\nCOMPUTER AND NETWORK SYSTEM ADMINISTRATION\nCIS 5357\nCNT 5412\nNETWORK SECURITY, ACTIVE AND PASSIVE DEFENSES\nCIS 5406\nCNT 5605\nCOMPUTER AND NETWORK ADMINISTRATION\nCOP 5622\nCOP 6622\nADVANCED TOPICS IN COMPILATION\nCOP 5570\nCOP 5570\nCONCURRENT, PARALLEL, AND DISTRIBUTED PROGRAMMING (renamed from Advanced Unix Programming \u2013 content largely unchanged)\n", "document_id": 144171}]}, {"paragraphs": [{"qas": [], "context": "Undergraduate Advising FAQ | Computer Science\n\nUndergraduate Advising FAQ\nUniversity Resources: \n\u00b7\tMajors/Minors/Certificates: http://www.academic-guide.fsu.edu \n\u00b7\tCS Major Information & Flowcharts: https://www.cs.fsu.edu/academics/undergraduate-programs/ \n\u00b7\tLiberal Studies Courses/Requirements: http://liberalstudies.fsu.edu/index.html \n\u00b7\tComputer Science minor: http://www.cs.fsu.edu/academics/undergraduate-programs/minor-in-computer-science/ \n\u00b7\tHow to view your Academic Requirements Report: https://sc.my.fsu.edu/students/how/access-your-academic-requirements-report \nFAQ for all FSU students:\n1.\tI am trying to enroll in MAD 2104 but received an error message. Can an advisor enroll me?\nA.\tNon-CS majors cannot enroll in that course. If you are a non-CS major and would like to request enrollment, contact Melissa Tillery in the Math department at mltillery@fsu.edu. \n2.\tI am trying to enroll in a course that is not offered on my campus. What can I do? \nA.\tOn the Class Search or Schedule Assistant, adjust your filters to include only your campus. Search again. Students may not take courses outside of the Tallahassee campus as a Tallahassee-campus student.\nB.\tFor assistance in using Schedule Assistant: https://undergrad.fsu.edu/academic-information/schedule-planner/schedule-assistant \n3.\tI am trying to enroll in a course and it is telling me the seats are reserved and I do not meet the reserve capacity requirements. How can I take it?\nA.\tUsually, you can click on the course and read the course notes or description and it will tell you who the course is reserved for (usually, this is certain majors). If it is still unclear, contact the department offering the course for more information. \n4.\tI need __ form, where can I get it?\nA.\tMost forms can be found on the Registrar\u2019s website: http://registrar.fsu.edu/forms/\n", "document_id": 144168}]}, {"paragraphs": [{"qas": [], "context": "Certificate | Computer Science\n\nCertificate\nCNSS has discontinued the certificate program NSTISSI 4011 and CNSS4014 as of January 1, 2015.\nIn April 2000, the  NSA\u2019s Information Assurance Directorate designated Florida State University as having met the training standards of the  Information Assurance Courseware Evaluation. This process involved assessing the quality of FSU\u2019s curriculum by a formal, rigorous training standard. FSU has, for the third time, renewed its certification to train specialists under the Committee of National Security Systems  (CNSS) standards NSTISSI standard 4011 \u201cInformation Security Professionals\u201d. As of August 2008, the university is also certified to offer the additional professional standard of CNSS 4014 for \u201cInformation Security Officers\u201d.\nBy achieving these designations, FSU students that complete the courses specified in the program are recognized as having been trained to serve as Information Systems Security Professionals or Information Systems Security Officers and receive a certificate that says the student \u201chas satisfactorily completed an educational program certified by CNSS as compliant with NSTISSI No. 4011 or CNSS 4014.\u201d\nThis certificate is only available to degree-seeking undergraduate and graduate students at FSU that complete the core courses and their prerequisites. The certificate must be requested by the student in the same term of graduation as the student\u2019s degree program.\nThe requirements to meet the standards for the CNSSI-4014 (Security Officer) certificate are as follows:\nUndergraduate Level\nGraduate Level\nCOP 4710  Theory and Structures of Databases\nCOP 5725  Database Systems\nCIS 4360  Introduction to Computer Security\nCIS 5370  Computer Security\nCNT 4406 Network Security and Cryptography\nCNT 5412 Network Security, Active and Passive Defenses\nCNT 4504 Introduction to Computer Networks\nCNT 5505 Data and Computer Communications\nCNT 4603 Computer and Network System Administration\nCNT 5605 Computer and Network Administration\nCOP 4610  Operating Systems and Concurrent Programming\nCOP 5611  Advanced Operating Systems\nIn order to obtain the additional certificate for completion of the NSTISSI-4011 (Security Professional) requirements, students must also take the following core courses:\nCDA 3101  Computer Organization\nCOP 3330 Object-Oriented Programming\n1. Details about the renewal of NSTISSI #4011 and CNSSI #4014 FSU-Recert.doc\n2. Details about SAIT and the program FSU.doc\nFor questions about the certificate program, please contact Michael Burmester.\nFor questions about information security research at FSU, see our research pages.\n", "document_id": 144169}]}, {"paragraphs": [{"qas": [{"question": "What kind of jobs can you get with a Computational Biology degree?", "id": 89077, "answers": [{"answer_id": 99217, "document_id": 144153, "question_id": 89077, "text": "Representative Job Titles Related to this Major: Computational Biologist, Bioinformatics Specialist, Biotechnologist, Pharmaceutical/Medical Researcher, Forensic Scientist, Molecular Medicine Specialist, Comparative Genomics Scientist, Genetic Engineer, Human Geneticist, and Genome Analyst, Programmer, Systems Analyst, Software Engineer, Data Processing System Manager, Network Administrator.", "answer_start": 7525, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}, {"question": "How many credits must be completed in residence for computational biology?", "id": 154631, "answers": [{"answer_id": 218438, "document_id": 144153, "question_id": 154631, "text": "Half of the major course semester hours must be completed in residence at this University.", "answer_start": 7110, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}, {"question": "Who should I email if I have questions about the program?", "id": 154634, "answers": [{"answer_id": 218441, "document_id": 144153, "question_id": 154634, "text": "Prospective transfer students should contact as-admissions@fsu.edu (Arts and Sciences Admissions) with specific questions about admissions and mapping requirements.  ", "answer_start": 838, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "FSU | Academic Program Guide\nSkip to main content\nFlorida State University\n This is your Donation message.\nLog In\nThis Site\nFSU\nSubmit\nAcademics\nAdmissions\nResearch\nFaculty\nStudents\nAlumni and Friends\nVeterans\nGiving\nAcademic Program Guide\nToggle navigation\nSite Menu\nHome\nMinors\nMajor Comparisons\nCertificates/Specialized Studies\nBachelors/Masters Programs(current)\nLiberal Studies\n  A-Z List\nComputational Biology (Computer Science)  College: Arts and Sciences Degree: BS Limited Access: No  Contact: Lauren Higbee Address: 203C Love Bldg.; Tallahassee, FL 32306-4530 Phone: (850) 644-8700 Email: advisor@cs.fsu.edu Description of Major                                                                                                                                                                 Note to prospective transfer students: Prospective transfer students should contact as-admissions@fsu.edu (Arts and Sciences Admissions) with specific questions about admissions and mapping requirements.    \nComputational biology is a new and promising field of study. The purpose of this interdisciplinary major is to provide a top-notch educational program for students interested in the areas of computational biology and bioinformatics. \nThe program seeks to achieve two goals: \n1) to develop an understanding of the issues associated with developing biologically meaningful computational models, and \n2) to give students the broad-based education that is needed to create a set of models directed towards solving a practical biomedical problem. \nThis major is offered through both the Biological Science and Computer Science departments. Students in the program should be sure to consult with the advisors in their home department to make sure they are taking the correct courses in the correct sequence. Prerequisite Coursework                                                                                                                                                                 BSC X010 (3,) General Biology I or equivalent\nBSC X011 (3) General Biology II or equivalent\nCHM X045, X045L (3, 1) General Chemistry I & Lab or equivalent\nCHM X046, X046L (3, 1) General Chemistry II & Lab \nPHYX053, PHYX053L (3, 1) or PHYX048, X048L (3, 1) College or General Physics A with lab\nPHYX054, PHYX054L (3, 1) or PHYX049, X049L (3, 1) College or General Physics B with lab\nMAC X311 (4) Calculus I \nMAC X312 (4) Calculus II\nInterested students are encouraged to contact the participating departments regarding completion of these courses.\nStrongly recommended: Students interested in this major are encouraged to complete an introductory programming course in C++ or equivalent during their freshman/sophomore years. \nNote: State-wide common prerequisites are always under review. For the most current information and for acceptable alternative courses, visit the \u201cCommon Prerequisites Manual.\u201d This is available from the \u201cStudent Services\u201d section of http://www.flvc.org .\n Requirements  Requirements for graduation in the College of Arts and Sciences include:\nThe College of Arts and Science requires proficiency in a foreign language through the intermediate (2220 or equivalent) level or sign language through the advanced (ASL2160C or equivalent) level.\nRequirements for Progression to the Upper-Division Major:\nStudents must complete at least 52 semester hours of credit with a minimum grade point average of 3.00, at least half the required General Education hours including two English and two mathematics, or an A.A. Degree.\nMajor Program of Studies at FSU: 45-46 hours\nAll courses applicable to the major must be completed with a grade of C minus or better.\nRequired Biological Science Courses (9 hours)\nBSC 2010 (3) Biological Science I \nBSC 2011 (3) Biological Science II \nPCB 3063 (3) Genetics\nRequired Computer Science Courses (12-13 hours)\n COP 3363 (3) Introduction to C++ for majors OR both COP 3014 (3) Programming I and COP 3353 (1) Introduction to UNIX \nCOP 3330 (3) Data Structures, Algorithms, and Genetic Programming I\nCDA 3100 (3) Computer Organization I\nCOP 4530 (3) Data Structures, Algorithms, and Genetic Programming II\nAdditional Elective Courses: (24 hours) \nTwenty-four (24) additional hours chosen from Biology, Computer Science, Mathematics or Statistics selected from: MAC 2312, MAC 2313, MAP 4481, STA 4102, STA 4103, STA 4202, STA 4203, STA 4502, STA 4702, COP 4710, COP 4420, CIS 4900R, BSC 3402L, BOT 4394, BSC 2010L, BSC 2011L, BSC 4613, BSC 4900r, BSC 4933, MCB 4403, MCB 4403L, PCB 3134, PCB 3743, PCB 4024, PCB 4233, PCB 4253, PCB 4674, PCB 4843 \nCollateral Courses: (30-32 hours)\nAll collateral courses must be completed with a grade of C minus or better.\nMathematics/Statistics (14 hours)\nMAC 2311 (4) Calculus with Analytical Geometry I\nMAC 2312 (4) Calculus with Analytical Geometry II\nMAD 2104 (3) Discrete Mathematics\nSTA 2171 (3) Statistics for Biology\nPhysics, one of the following series (8 or 10 hours)\nPHY2053C (4) College Physics A with Lab and PHY2054C (4) College Physics B with Lab\nOR\nPHY 2048c (5) General Physics A with Lab and PHY 2049C (5) General Physics B with Lab\nChemistry (8 hours)\nCHM 1045 and 1045L (3,1) General Chemistry I and Lab\nCHM 1046 and 1046L (3,1) General Chemistry II and Lab\nMinor Requirements:\nA minor is not required for this program.\nComputer Skills Competency: 0 hours beyond major. \nCOP 3363 (3) Introduction to Programming in C++ or COP 3014 (3) Programming I \nOral Communication Competency: 0-3 hours\nStudents must demonstrate the ability to orally transmit ideas and information clearly. This requirement is met through a college-level approved course, such as SPC 1017 or SPC 2608 (3). Students taking CIS 3250 or any GE Ethics course may take CIS 3250L (1) Ethics & CS lab to satisfy this requirement.\nMinimum Program Requirements - Summary\nTotal Hrs. Required 120\nGeneral Education 36*\nPrerequisite Coursework 0 beyond other requirements\nMajor Coursework 45-46\nCollateral Coursework 30-32\nMinor Coursework 0 beyond collateral courses\nForeign Language 0-12 (depending on placement)\nComputer Skills 0 beyond major\nOral Communication Competency 0-3\nElectives to bring total hours to 120\n*Some coursework completed for this major may also apply toward General Education in the areas of Mathematics and Science.\n Mapping                                                                                                                                                                 Mapping is FSU\u2019s academic advising and monitoring system. Academic progress is monitored each Fall and Spring semester to ensure that students are on course to earn their degree in a timely fashion. Transfer students must meet mapping guidelines to be accepted into their majors. View the map for this major at www.academic-guide.fsu.edu/.                 Remarks                                                                                                                                                                                 1. A minimum of 45 hours at the 3000 level or above, 30 of which must be taken at this University.\n2. Half of the major course semester hours must be completed in residence at this University.\n3. The final 30 hours must be completed in residence at this University.\n Employment Information  Salary Information: For more information go to: National Association of Colleges and Employers (www.naceweb.org) or the Occupational Outlook Handbook (www.bls.gov/ooh/home.htm) provided by the U.S. Bureau of Labor Statistics.\nRepresentative Job Titles Related to this Major: Computational Biologist, Bioinformatics Specialist, Biotechnologist, Pharmaceutical/Medical Researcher, Forensic Scientist, Molecular Medicine Specialist, Comparative Genomics Scientist, Genetic Engineer, Human Geneticist, and Genome Analyst, Programmer, Systems Analyst, Software Engineer, Data Processing System Manager, Network Administrator.\nRepresentative Employers: Pharmaceutical Companies, Healthcare Providers, Medical Laboratories, Biotechnology Companies, Law Enforcement Agencies, Colleges and Universities, State and Federal Government, Software Development Companies.\nView Computational Biology (Computer Science) Academic Map\n\u00a9 2015 Florida State University\n\t\t\t600 W. College Avenue\n\t\t\tTallahassee, FL 32306\nQuestions or Comments\nPrivacy Policy\nCopyright\nFSU Directory Assistance:\n\t\t\t850-644-2525\n", "document_id": 144153}]}, {"paragraphs": [{"qas": [{"question": "What do Graduate Faculty do?", "id": 89184, "answers": [{"answer_id": 99324, "document_id": 144174, "question_id": 89184, "text": "Membership in the Graduate faculty of the Department of Computer Science authorizes faculty to teach all graduate-level courses, to sit on all graduate-level committees, to chair all graduate student dissertation committees, and to participate fully in all components of graduate education, research, and service. ", "answer_start": 172, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "Graduate Faculty Status | Computer Science\n\nGraduate Faculty Status\nGraduate Faculty Status for the Computer Science Department\nFlorida State University\nDefinition of GFS:\u00a0Membership in the Graduate faculty of the Department of Computer Science authorizes faculty to teach all graduate-level courses, to sit on all graduate-level committees, to chair all graduate student dissertation committees, and to participate fully in all components of graduate education, research, and service. Limitation or removal of any of these authorizations from individual GFS-faculty is delegated to the unit level authority where such assignments are made.\nGFS Nomination Criteria:The Faculty member under consideration for nomination to Graduate Faculty Status must, subject to consideration of special circumstances, have (1) completed the doctorate in Computer Science (or its equivalent) and (2) proven expertise in the teaching area.\nGFS Limitations/Restrictions:\u00a0Faculty holding GFS are expected to actively engage in graduate education through teaching, mentoring and research supervision. They should show evidence of research-based scholarship and/or creative work resulting in peer reviewed publications or equivalent work. A Computer Science faculty member may be restricted from any GFS responsibilities (e.g. the right to serve as the chair for a dissertation committee) if two-thirds of the faculty in the department who hold that responsibility vote to restrict that faculty member\u2019s specific responsibilities.\nFaculty not in the FSU Computer Science Department have the right to co-direct dissertations, theses, or projects provided that they have GFS in another FSU department or hold a courtesy faculty appointment in the FSU Computer Science Department with co-directive status. Such a faculty member may lose the right to co-direct Computer Science graduate students if two-thirds of the FSU Computer Science faculty with GFS vote to restrict it.\nSpecialized members of the Computer Science faculty and courtesy appointees may be nominated for Graduate Teaching Status (GTS) within the Computer Science Department. GTS allows a specialized faculty member or courtesy appointee to teach graduate courses. Persons in similar status may be nominated for Co-MDS and to be able to co-direct MS students on theses and projects. Non-tenure track faculty and courtesy appointees in the Computer Science Department are eligible for nomination to graduate teaching status (GTS) provided that they have received a PhD (or its equivalent), hold expertise in the teaching discipline, and have received a two-thirds majority vote in favor of appointment by the Computer Science faculty who currently have GFS or GTS within the department. Under exceptional circumstances specialized faculty members and courtesy appointees whose terminal academic degree is an MS, may be nominated for GTS to teach graduate courses within a specific area, on the basis of significant experience in that area and two-thirds of the Computer Science faculty with GFS or GTS vote to approve it. A Computer Science faculty member or courtesy appointee may lose individual GTS responsibilities (e.g. the right to teach graduate courses) if two-thirds of the faculty in the department who hold that responsibility vote to revoke it. All nominations must be approved by the Academic Dean and Dean of The Graduate School in accordance with university policy.\nSpecialized faculty members in the Computer Science Department are eligible for nomination to obtain masters directive status (MDS) to direct MS students on theses or projects provided that they have received a PhD (or its equivalent) and have received a two-thirds majority vote in favor of MDS by the Computer Science faculty who currently have GFS or MDS. Courtesy appointees in the Computer Science Department are eligible for nomination to obtain co-masters directive status (MDS) to direct MS students on theses or projects provided that they have received a PhD (or its equivalent) and have received a two-thirds majority vote in favor of CMDS by the Computer Science faculty who currently have GFS or MDS.\nApproved and adopted by two-thirds majority vote of the faculty holding GFS in June 2009.\nRevision of GTS policy approved by two-thirds majority vote of the faculty holding GFS/GTS in November 2012.\nRevision of GTS policy approved by two-thirds majority vote of the faculty holding GFS in April 2015.\n", "document_id": 144174}]}, {"paragraphs": [{"qas": [{"question": "How many semester hours of CIS 5915 can be counted towards an MS degree?", "id": 156886, "answers": [{"answer_id": 221020, "document_id": 144178, "question_id": 156886, "text": "At most six (6) hours of CIS 5915 can be counted toward the required 30 hours for the MS degree.", "answer_start": 1924, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "Thesis, Project and Course-based MS Degrees | Computer Science\n\nThesis, Project and Course-based MS Degrees\nThe number of hours for the graduate degree as described in this web page will be effective in Summer 2018.\nIn the CS and CNSA MS degree programs (but not CC), a student must select one of the three options of thesis, project, or course-based to complete the degree. Each option has a specific number of required courses as well as other requirements, as described below.\nThesis Option\nA student under the thesis option must take seven (7) courses (21 semester hours) at or above the 5000 level, plus at least nine (9) hours of CIS 5970r, Thesis. At most nine (9) hours of CIS 5970r can be counted toward the required 30 hours for the MS degree. The seven courses must include at least one course from each area as described above. Approved offerings of CIS 5930/6930 Special Topics are counted towards the 7 courses, but supervised teaching, supervised research, seminars, DIS and CIS 5915 (project hours) cannot be included. The thesis is defended by registering for CIS 8976 Master\u2019s Thesis Defense (0).\nThe student in the thesis option is required to propose and create an individual thesis topic of appropriate focus, size and complexity and to write a document discussing it. The thesis proposal must be approved by the supervisory committee. The thesis is to be written in accordance with the University standards. Upon completion, a thesis must be successfully defended to the department in an open forum, and be unanimously approved by the major professor and supervisory committee. An electronic version of the thesis must be submitted to the university as well as the CS webmaster, and CS graduate coordinator.\nProject Option\nA student under the project option must take eight (8) courses (24 semester hours) at or above the 5000 level, plus at least six (6) hours of CIS 5915r Graduate Software Project. At most six (6) hours of CIS 5915 can be counted toward the required 30 hours for the MS degree. The eight courses must include at least one from each of the areas described above. Approved offerings of CIS 5930/6930 Special Topics are counted towards the 8 courses, but supervised teaching, supervised research, seminars, DIS, and CIS 5970 (thesis hours) cannot be included. The student must also register for CIS 8974(0) to defend the project.\nThe student in the project option is required to propose and create an individual project of appropriate focus, size, and complexity and to write a document discussing it. The project proposal must be approved by the major professor and supervisory committee. The project document should be written with direction from the major professor and supervisory committee and in accordance with the description given at Master\u2019s Project. Upon completion, both the project and the document must be successfully defended to the department in an open forum with unanimous approval from the major professor and supervisory committee. An electronic version of the project must be submitted to the CS webmaster, and CS graduate coordinator.\nCourse-based Option\nA student under the course-based option must take ten (10) courses (30 semester hours) at or above the 5000 level, including at least one course from each of the three core areas described above. Approved CIS 5930/6930 Special Topics are counted towards the 10 courses, but supervised teaching, supervised research, seminars, DIS, CIS 5970 and CIS 5915 cannot be included. A student must earn a grade of B+ or higher for at least 6 of the 10 courses in order to graduate in the course-based option. The student must also register for CIS 8966, Master\u2019s Comprehensive Exam (0) the semester of graduation (effective Spring 2005).\nSupervisory Committee\nFor the thesis and project options, it is the student\u2019s responsibility to form a supervisory committee regardless of his or her selected major. No later than the start of work on the thesis or project, the student will secure the consent of an eligible computer science faculty member to serve as the major professor. In consultation with the major professor, the student will secure the consent of at least two additional graduate faculty members to serve as the supervisory committee, chaired by the major professor.\n", "document_id": 144178}]}, {"paragraphs": [{"qas": [{"question": "How many semester hours do international students need to be enrolled in?", "id": 156893, "answers": [{"answer_id": 221027, "document_id": 144179, "question_id": 156893, "text": "nine (9) semester hours per term for international students,", "answer_start": 419, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}, {"question": "Do master's students have to check  in with their advisor and their professor?", "id": 156898, "answers": [{"answer_id": 221032, "document_id": 144179, "question_id": 156898, "text": "For those master\u2019s students in the course-based option, the advisor initially assigned continues in the advisement role. ", "answer_start": 1428, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "General Graduate Degree Requirements | Computer Science\n\nGeneral Graduate Degree Requirements\nPlease review all college-wide degree requirements summarized in the \u201cCollege of Arts and Sciences\u201d section of the  FSU Graduate Bulletin. \nUnless specifically admitted into the part-time graduate program, all students are required to maintain full-time enrollment (at least nine (9) semester hours per term for TAs and RAs, nine (9) semester hours per term for international students, and twelve (12) hours otherwise, excluding Summer) in courses related to their program of studies throughout the entire program of study (except term of graduation). The student must receive a grade of \u201cB-\u201d or better on all graduate courses taken to satisfy the minimum requirements of either graduate degree. Once these minimum requirements are met, however, it is permissible to take any subsequent courses on an S/U basis.\nUpon joining the department, each graduate student is assigned an advisor by the director of graduate studies. At least once each semester the student is required to meet with the advisor and complete the departmental advising forms. Completion of these forms becomes part of the graduation check. For those students completing a thesis, project or dissertation, a major professor will be selected by the student once a topic for such is chosen. At this point the major professor takes over the advising responsibilities. For those master\u2019s students in the course-based option, the advisor initially assigned continues in the advisement role. Advising forms stay with the advisor (major professor) until the graduation check.\nAll candidates for doctoral degrees in the department are required to participate in teaching activities at some time during their graduate careers unless waived by the department chair. All students participate in an exit interview with the chair or associate chair or director of graduate studies during the term of graduation.\n", "document_id": 144179}]}, {"paragraphs": [{"qas": [{"question": "What score do you need on the GRE for an MS in Cyber Criminology?", "id": 89206, "answers": [{"answer_id": 99346, "document_id": 144183, "question_id": 89206, "text": "The general degree requirements will include 3 graduate criminology courses, 6 graduate computer science (CS) courses related to information assurance and computer security and 1 additional criminology or CS course for a total of 30 hours.", "answer_start": 613, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "Masters in Cyber Criminology | Computer Science\n\nMasters in Cyber Criminology\nThe number of hours for the graduate degree as described in this web page will be effective in Summer 2018.\nAdmissions Requirements\nStudents pursuing the MS in Cyber Criminology (MS CC) degree will be admitted to and graduate from the Computer Science Department. Thus, the minimal admissions requirements are (1) an undergraduate GPA of no less than 3.0 and (2) a score of 1000 or greater on the combined verbal and quantitative portions of the GRE.\nDegree Requirements\nThe initial track for the MS CC degree will be coursework only. The general degree requirements will include 3 graduate criminology courses, 6 graduate computer science (CS) courses related to information assurance and computer security and 1 additional criminology or CS course for a total of 30 hours.\nIn addition, MS CC students will have to complete certain undergraduate prerequisites, shown below, before graduating, and will likely have to complete a subset of these courses before being admitted to the MS CC degree program. Note that CIS 4385 is required for the FSU BS in Cyber Criminology and the other four courses are required for the FSU BS in Computer Science and BA in Computer Science degrees.\nUndergraduate Prerequisites for the MS CC Degree Program:\nCDA 3101 Computer Organization II (3)\nCIS 4385 Cybercrime Detection and Forensics (3)\nCOP 4530 Data Structures, Algorithms, and Generic Programming (3)\nCOP 4610 Operating Systems and Concurrent Programming (3)\nCOP 4710 Theory and Structure of Databases (3)\nThe graduation requirements include completing all of the undergraduate prerequisites, completing 3 graduate criminology courses, and completing 6 graduate computer science courses. The graduate courses for the MS CC degree are listed below:\nCriminology Courses from Which MS CC Students Are Required to Take at Least Three:\nCCJ 5016 Crimes of the Powerful (3)\nCCJ 5285 Survey of Criminal Justice Theory and Research (3)\nCCJ 5606 Survey of Criminological Theories (3)\nCCJ 5607 History of Criminological Thought (3)\nCCJ 5636 Comparative Criminology and Criminal Justice (3)\nUp to date course descriptions for the above criminology courses can be found at: http://www.criminology.fsu.edu/p/academic-syllabi.php.\nComputer Science Courses Required for MS CC Students:\nCIS 5370 Computer Security (3)\nCNT 5412 Network Security, Active and Passive Defenses (3)\nCNT 5505 Data and Computer Communications (3)\nCNT 5605 Computer and Network Administration (3)\nCOP 5611 Advanced Operating Systems (3)\nCOP 5725 Database Systems (3)\nThe one additional criminology or CS course will be a graduate elective. The criminology courses can be taken in any order as none of these courses are prerequisites for any of the other courses. However, the 6 required graduate computer science courses each have undergraduate prerequisites that must be completed before the student will be allowed to take these courses.\n", "document_id": 144183}]}, {"paragraphs": [{"qas": [{"question": "How many courses are required for the MS project-option?", "id": 156975, "answers": [{"answer_id": 221109, "document_id": 144186, "question_id": 156975, "text": "at least 8 courses (24 hours) at or above the 5000 level excluding supervised teaching, supervised research, seminars, DIS, CIS 5970 ", "answer_start": 236, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "MS (project-option) Graduation Checklist | Computer Science\n\nMS (project-option) Graduation Checklist\nBelow is a brief checklist of items an MS (project option) student should complete before graduation:\n Degree Requirements Checklist \nat least 8 courses (24 hours) at or above the 5000 level excluding supervised teaching, supervised research, seminars, DIS, CIS 5970 \nof the 8 courses, there must be at least one course from each of the core areas: Software, Systems, Theory\nat least 6 hours of CIS 5915, Software Project, where at most 6 hours count toward the required 30 hours for the degree\nregister, at most once, for CIS 8974, MS Project Defense (withdraw from all but one instance of this if you have registered more than once)\nregister for graduation at the Registrar\u2019s Office during the first two weeks of the semester in which you wish to graduate\n Defense & Graduation Checklist \nsubmit the project to your committee at least 10 days in advance\nschedule defense (at least  2 weeks  in advance):\nreserve room (typically 151 Love) with the Kenyetta Neale\nreserve PC cart (if needed) by signing up on calendar on the door in the copy room in 260 Love\ninform Eleanor McNealy of title, room, and time of defense so she can send out the notification.\nobtain the CS Defense Result Form (\u201cgreen form\u201d) from 203 Love and bring this form to your defense to record the outcome of the defense\nupon successful defense, have the CS Defense Result Form signed by your committee and return it to the Graduate Coordinator, Daniel Clawson in 203D Love\nsubmit an electronic version (pdf) of the project to the CS webmaster (webmaster [at cs dot fsu dot edu]) and the Graduate Coordinator (clawson [at cs dot fsu dot edu])\ncomplete the departmental EXIT survey which will be sent electronically towards the ent of the semester\nif your employment plans are uncertain when completing the EXIT survey, inform the CS Director of Graduate Studies via email when those plans are complete\n", "document_id": 144186}]}, {"paragraphs": [{"qas": [{"question": "What courses do I need to take for the MS thesis-option?", "id": 89216, "answers": [{"answer_id": 99356, "document_id": 144187, "question_id": 89216, "text": "Of the 7 courses, there must be at least one course from each of the core areas: Software, Systems, Theory", "answer_start": 365, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}, {"question": "Who should the Graduate Defense Result form be returned to?", "id": 156991, "answers": [{"answer_id": 221125, "document_id": 144187, "question_id": 156991, "text": "Return the CS Defense Result Form to the CS Graduate Coordinator, Daniel Clawson.", "answer_start": 1959, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "MS (thesis-option) Graduation Checklist | Computer Science\n\nMS (thesis-option) Graduation Checklist\nBelow is a brief checklist of items an MS (thesis option) student should complete before graduation:\n Degree Requirements Checklist\nAt least 7 courses (21 hours) at or above the 5000 level excluding supervised teaching, supervised research, seminars, DIS, CIS 5915\nOf the 7 courses, there must be at least one course from each of the core areas: Software, Systems, Theory\nAt least 9 hours of CIS 5970, Thesis, where at most 9 hours count toward the required 30 hours for the degree\nIn the final term in which the degree is granted, students must be enrolled in a minimum of two hours of Thesis\nRegister, at most once, for CIS 8976, Thesis Defense (withdraw from all but one instance of this if you have registered more than once)\nRegister for graduation via the Registrar\u2019s website during the first two weeks of the semester in which you wish to graduate\n Defense & Graduation Checklist\nDetermine the manuscript approval deadline, the manuscript submission deadline, and the defense deadline. These change each semester & are available on the Registrar\u2019s web site under the FSU Academic Calendar as well as here\nPlease see the Thesis, Treatise, and Dissertation for all deadlines, required forms, format guides, and other information and resources\nSchedule defense (at least  2 weeks  in advance):\nReserve room (typically 151 Love) \nReserve PC cart (if needed) by signing up on calendar on the door in the copy room in 260 Love\nComplete the Defense Announcement Form (due no later than 2 weeks before the defense date)\nInform  title, room, and time of defense so that notification can be sent out\nObtain the CS Defense Result Form (\u201cgreen form\u201d) from outside office 203A. Take this form with you to the defense to record the outcome of the defense.\nHave all the Graduate School required forms with you at the defense for signatures. These are all found here.\nReturn the CS Defense Result Form to the CS Graduate Coordinator, Daniel Clawson.\nBring all the Graduate School required forms (Final Degree Clearance Form, Manuscript Signature Form, etc.) to Daniel Clawson. Make sure they have ALL required signatures from your committee chair, committee, and department chair. He will forward the forms on to the dean\u2019s office and/or graduate clearance advisor.\nMake sure your manuscript is submitted to the Graduate Clearance Advisor over in the Graduate School by the deadline listed here\nSubmit an electronic version (pdf) of the project to the CS webmaster (webmaster [at cs dot fsu dot edu]) and the Graduate Coordinator (clawson [at cs dot fsu dot edu]).\nComplete the departmental EXIT survey (sent electronically towards the end of the semester).\nIf your employment plans are uncertain when completing the EXIT survey, inform the CS Director of Graduate Studies via email when those plans are complete.\n", "document_id": 144187}]}, {"paragraphs": [{"qas": [], "context": "Time Limits for Passing PhD Examinations | Computer Science\n\nTime Limits for Passing PhD Examinations\nThe time limit for a PhD CS student to complete the qualifying exam is (a) 3 years after entering the FSU CS PhD program with an MS or (b) 4 years after entering the PhD program with a BS.\nThe time limit for a PhD CS student to complete the preliminary exam is (a) 5 years after entering the PhD program with an MS or (b) 6 years after entering the PhD program with a BS.\nIf a PhD student has not completed these examinations by the time limits specified above, then the student will be dismissed from the PhD program.\nNote: These time limits became effective in Spring 2017.  The time limits clock for a student who entered the PhD program before Spring 2017 will be reset to start at Spring 2017.\n", "document_id": 144188}]}, {"paragraphs": [{"qas": [], "context": "Undergraduate pre-requisites | Computer Science\n\nUndergraduate pre-requisites\nFor those students who do NOT have an undergraduate BS degree in Computer Science, the following courses or their equivalents at another institution must be completed before the graduate PhD CS or MS CS degree will be awarded. \nEach newly admitted student must meet with the Director of Graduate Studies to complete a form indicating if any of the following must be taken. The form will be maintained in the student\u2019s file and checked during the departmental graduation check.\nNote that if a student has a BS in CS from another institution (not FSU) there may be one or more courses that we require that were not required at the student\u2019s institution. These courses must be taken prior to graduation.\nAn undergraduate pre-requisite is considered fulfilled when a grade of B- or better is received in the undergraduate course or when an S is received in the co-listed CGS 5xxx graduate course.\nUndergraduate pre-requisites for MS in CS general Computer Science major, MS in CS Cybersecurity major, and PhD in CS:\nSee the recommended sequence for completing the prerequisite requirements for admission\n COP 4530  Data Structures, Algorithms and Generic Programming (3)\n CDA 3100  Computer Organization I (3)\n COP 4610  Operating Systems (3)\n COT 4420  Theory of Computation (3)\nUndergraduate pre-requisites for MS in CS CNSA major:\nSee the recommended sequence for completing the prerequisite requirements for admission\n COP 4530  Data Structures, Algorithms and Generic Programming (3)\n CDA 3100  Computer Organization I (3)\n COP 4610  Operating Systems (3)\nUndergraduate pre-requisites for MS in Cyber Criminology:\nSee the recommended sequence for completing the prerequisite requirements for admission\n COP 4530  Data Structures, Algorithms and Generic Programming (3)\n CDA 3100  Computer Organization I (3)\n COP 4610  Operating Systems (3)\n COP 4710 Theory and Structure of Databases (3)\n CIS 4385  Cybercrime Detection and Forensics (3)\nCopyright \u00a9 1999 \u2013 2015\n Florida State University\nDepartment of Computer Science \n", "document_id": 144194}]}, {"paragraphs": [{"qas": [], "context": "WHY MAJOR IN CYBER CRIMINOLOGY | Computer Science\n\nWHY MAJOR IN CYBER CRIMINOLOGY\nAbout the Program\nAn interdisciplinary undergraduate degree program in Cyber Criminology was offered by FSU starting in Fall 2007. This new degree program was developed jointly by the Department of Computer Science and the College of Criminology and Criminal Justice.\nComputer crime can be broadly defined as any criminal activity that involves the use of information technology. These crimes include illegally accessing information, intercepting data, damaging or deleting data, interfering with the functioning of a computer system, identity theft, etc. Information-related crime and computer/network security issues are already major concerns. These issues affect all levels of business, government, and academia and have grown in importance as most organizations link their networked computer environments to the Internet. A Cyber Criminology student will learn both how to use computers to facilitate the study of crime and will study how crimes are accomplished through the use of computers.\nEmployment and Research Opportunities\nWe anticipate there will be a significant demand for graduates of the Cyber Criminology program. It is well known that there is a shortage of information technology experts. Similarly, there is a pressing need for information technology specialists to handle issues related to information crime, cyberforensics, and computer/network security. However, there is also a need for computer skills for the prevention, detection, and study of all types of crime, whether or not they involve the use of information technology. Graduates of the program will be prepared to work either for law enforcement agencies as information crime specialists, within companies or organizations as network security specialists, or within academia and government to study the causes of crime and the best methods for its prevention.\n", "document_id": 144211}]}, {"paragraphs": [{"qas": [{"question": "What GRE score do you need for the FSU CS grad program?", "id": 89271, "answers": [{"answer_id": 99411, "document_id": 144220, "question_id": 89271, "text": "The minimum GRE scores required for admission are a 145 on the verbal section and a 150 on the quantitative section.", "answer_start": 1201, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "Applying to FSU Computer Science Department Graduate Programs: Instructions for US Citizens and Permanent Residents | Computer Science\n\nApplying to FSU Computer Science Department Graduate Programs: Instructions for US Citizens and Permanent Residents\nPlease see the Admissions page for deadlines and minimum admission requirements for different degree programs.\nApplication instructions:\n1. Submit the Florida State University Online Application: https://admissions.fsu.edu/gradapp/ with the required attachments (See 2-4 below).\n2. Statement of Purpose \u2013 Must be uploaded in the Online Application.\n3. Resume or Curriculum Vitae \u2013 Must be uploaded in the Online Application.\n4. Three Letters of Recommendation \u2013 Within the Online Application, there is a section where applicants will input the names and contact information of those who will be writing the letters. Recommenders will receive e-mails asking them to upload their letters directly to the application.\n5. Application Processing Fee of $30.00. You will receive an e-mail from the Office of Graduate Admissions requesting the fee within two business days after submitting your application.\n6. Official Graduate Records Exam (GRE) scores. The minimum GRE scores required for admission are a 145 on the verbal section and a 150 on the quantitative section. For the old scoring system, the minimum GRE score required for admission is a 1100 (Verbal and Quantitative combined) with a minimum of 650 on the Quantitative. Please request ETS to send your official test scores to the university. Our institution code is 5219.\n7. One official copy of Transcripts of academic record. Official transcripts must be sent from every College or University that you have attended. If you happen to be a FSU undergraduate and all of your transcripts from the previous institution(s) are on file, then you will not need to request transcripts. Transcripts should be mailed directly to the University Admissions Office at the following address:\nOffice of Graduate Admissions\nFlorida State University\n314 Westcott Bldg.\nTallahassee, FL. 32306-1410\nUSAPhone: (850) 644-3501\nFSU Graduate Admissions e-mail: graduateadmissions@admin.fsu.edu\nURL: http://admissions.fsu.edu/\nAll supporting documents MUST be submitted via the Online Application, with the exception of official transcripts (mailed to the Office of Admissions) and test scores (sent from ETS to the Office of Admissions). An application must be complete before it can be considered for admission which includes the receipt of all official supporting documentation. Unofficial transcripts and scores uploaded through the FSU application are not considered a suitable place holder.\n", "document_id": 144220}]}, {"paragraphs": [{"qas": [], "context": "Graduate Student Financial Support Policy and Statistics | Computer Science\n\nGraduate Student Financial Support Policy and Statistics\nThe department recognizes and values the teaching and research contribution from our graduate students. We offer financial support to new and existing PhD and MS students in the form of teaching assistantship (TA), research assistantship (RA), and fellowship. Each semester, a number of (typically 25-35 in the Fall and 5-10 in the Spring) best qualifying new students, identified by the admissions and financial aids committee, are offered financial support with admission. \nThe department gives priority to students who were admitted with full financial support (20-hour TA/RA appointment or fellowship) and PhD students who were admitted without support, but have passed the PhD Preliminary exam. The general departmental policy is to continuously support such students in the Fall and Spring semesters (the department has very few TA positions in the summer) until they graduate, provided that sufficient funds are available. Typical duration of continuous support for Fall and Spring semesters is as follows.\n6 years for PhD students who entered the program without an MS degree in CS\n5 years for PhD students who entered the program with a CS MS degree\n2 years for MS students\nRequirements for continuous TA funding support for PhD students\nFor continuous TA support, PhD students have three levels of priorities: Tier 1, Tier 2, and Tier 3, with Tier 1 being the highest priority. As of Spring 2018, all students in all of the three levels of priorities are funded by the department (but this may change in the future). All students in any priority group for TA support must meet the following requirements: \nMaking minimum satisfactory progress toward the degree as specified in this document.\nSatisfying all university requirements for being a teaching assistant, including passing the English speaking test for foreign students.\nPerforming assigned duties (e.g TA/RA duties) satisfactorily and reliably.\nInforming the department in sufficient advance the desire to be supported and the commitment to the duties assigned by the department.\nA PhD Student who (1) was admitted with full financial support (20-hour TA/RA appointment or fellowship), or (2) was admitted without financial support, but has passed the PhD Preliminary exam, is in the Tier 3 priority group if the student meets the above requirements. \nA PhD student who meets the above requirements is in the Tier 2 priority group if the student is identified by a tenure-track faculty as a Tier 2 TA.\nA PhD student who meets the above requirements is in the Tier 1 priority group if the student is identified by a tenure-track faculty as a Tier 1 TA. \nThe department maintains the tier-3 list. Tenure-track faculty must identify their tier-1 and tier-2 TAs by July 1 for the Fall semester and October 15 for the Spring semester.\nRequirements for continuous TA funding support for MS students\nMS students admitted with financial support are defaulted to the Tier 1 priority group for the same level of support when admitted. As of Spring 2018, all students in the priority group are funded by the department. To remain in the top priority group, an MS student must\nMake minimum satisfactory progress toward the degree: maintaining a 3.0 GPA and completing the degree within 2 years.\nSatisfy all university requirements for being a teaching assistant, including passing the English speaking test for foreign students.\nPerform assigned duties (e.g TA/RA duties) satisfactorily and reliably.\nInform the department in sufficient advance the desire to be supported and the commitment to the duties assigned by the department.\nStatistics of Recent Graduate Student Financial Support\nFiscal Year\n Spring 2017 \n Spring 2018 \nNo. of MS Students\n 97 \n 98 \nNo. of PhD Students\n 65 \n 74 \nNo. of Students with Assistantships\n 114 \n 132 \n", "document_id": 144216}]}, {"paragraphs": [{"qas": [{"question": "What is the final deadline for graduate applications for the fall semester?", "id": 157102, "answers": [{"answer_id": 221253, "document_id": 144221, "question_id": 157102, "text": "June 1st", "answer_start": 1477, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}, {"question": "Are graduate application requirements different for U.S. and international students?", "id": 157105, "answers": [{"answer_id": 221256, "document_id": 144221, "question_id": 157105, "text": "Please be sure that you refer to the section that applies to you, depending upon whether you are a US Applicant or an International Applicant.", "answer_start": 246, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "FSU Computer Science Department Graduate Study Application Information | Computer Science\n\nFSU Computer Science Department Graduate Study Application Information\nThank you for your interest in the Computer Science department\u2019s graduate programs. Please be sure that you refer to the section that applies to you, depending upon whether you are a US Applicant or an International Applicant.  If you have any questions, please contact\nDaniel Clawson:\nComputer Science Graduate Coordinator\nEmail:admissions@cs.fsu.edu\nPhone: 850-645-4975\nYou may also use this inquiry tool: Connect With Us!\nApplication Instructions for Domestic Students (U.S. Citizens and Permanent Residents)\nApplication Instructions for International Students \nFinancial Aid Information\nMinimum Admission requirements for Graduate Degree Programs. Satisfying these minimum criteria does not guarantee admission; not meeting these requirements will not be accepted.\nComputer Science (CS) MS and PhD Programs Admissions requirements\nComputer Network and System Administration (CNSA) MS Program Admissions Requirements\nCyber Criminology (CC) MS Program Admissions Requirements\nCybersecurity MS Program Admissions Requirements\nAdditional Requirements for Students Seeking Admission to the Computer Science Department from Other FSU Departments\nApplication Deadlines\nStarting Term\nAll students seeking Assistantships\nand International students\nDomestic students not\nseeking Assistantships\nFall Semester\nJanuary 15th\nJune 1st\nSpring Semester\nSeptember 1st\nNovember 1st\nAll students interested in support from the department should complete their applications before the deadline for assistantship consideration. Incomplete applications or applications completed after the department deadlines may be denied. There is no deferring of admission or assistantship offers.\n", "document_id": 144221}]}, {"paragraphs": [{"qas": [], "context": "Minimum Admissions Requirements for Cybersecurity MS Program | Computer Science\n\nMinimum Admissions Requirements for Cybersecurity MS Program\nThe Cybersecurity graduate program has different core-course and admissions requirements and is thus a separate program. Below are the minimum admissions requirements for the Cybersecurity MS degree program:\nRequired Degrees: To be admitted to the Department of Computer Science as a CS graduate student you should have an undergraduate or graduate degree in Computer Science or related field from an accredited university. Students without an undergraduate degree in CS will be required to complete undergraduate prerequisites not on their undergraduate transcript before graduating with a graduate degree in CS. Students without a prior undergraduate or graduate degree in computer science should have completed COP4530 (Data Structures) or an equivalent class to be considered competitive for admissions. Here is the list of Undergraduate Prerequisites for the Cybersecurity MS Degree Program.\nGRE Scores:The minimum GRE scores required for admission are a 145 on the verbal section and a 150 on the quantitative section. For the old scoring system, the minimum GRE score required for admission is 1100 (Verbal and Quantitative combined) with a minimum of 650 on the Quantitative.\nTOEFL Scores: The minimum required score on the IBTOEFL for admission consideration is 80 (213 computer-based, 550 paper-based). However, the Computer Science Department considers a score of 100-105 competitive, especially when students are seeking assistantships. The ability to lecture in English will be a major consideration in the selection of students for Teaching Assistantships.\nGrade Point Average: Students should have at least a B (3.0 on a 4.0 scale) average to be considered competitive. Students with a GPA of less than 3.0 in their undergraduate degree fall below both the department and university standards.\n", "document_id": 144225}]}, {"paragraphs": [{"qas": [{"question": "Does FSU offer cyber criminology courses?", "id": 157130, "answers": [{"answer_id": 221281, "document_id": 164051, "question_id": 157130, "text": " The department offers cyber security and information assurance courses", "answer_start": 1365, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}, {"question": "How many Fullbright Scholars came from the FSU CS department?", "id": 157131, "answers": [{"answer_id": 221282, "document_id": 164051, "question_id": 157131, "text": "three Fulbright Scholar Award winners", "answer_start": 1791, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}, {"question": "Is the CS undergraduate program accredited?", "id": 157134, "answers": [{"answer_id": 221285, "document_id": 164051, "question_id": 157134, "text": "Our BS in CS degree program is accredited by the national ABET Computing Accreditation Commission\u00a0(CAC). ", "answer_start": 1036, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "Chair\u2019s Greeting | Computer Science\n\nThe Chair\u2019s Greeting\nWelcome to the Department of Computer Science at the Florida State University. Our mission is:\nTo strive for excellence in advancing, applying, and imparting knowledge in computer science through comprehensive educational programs, research in collaboration with industry and government, and dissemination through scholarly products;\nTo produce outstanding computer science professionals who have the fundamental knowledge, problem-solving skills, and life-long learning capability to advance their careers.\nTo disseminate computer science knowledge to students and professionals in other disciplines, and\nTo provide service to the university community, professional societies, local communities, the state, and the nation.\nThe department offers Bachelor programs in Computer Science, three Master of Science tracks, and Doctoral degrees in Computer Science. Currently we have over 600 majors in the BS/BA programs and about 160 graduate students working towards their degrees. Our BS in CS degree program is accredited by the national ABET Computing Accreditation Commission\u00a0(CAC). In addition, we offer interdisciplinary bachelor\u2019s degrees in\u00a0Cyber Criminology and in Computational Biology, in collaboration with the College of Criminology and Criminal Justice and the department of Biology, respectively. The department offers cyber security and information assurance courses and was the first department in the state to receive the designation \u201cNSA/DHS Center of Academic Excellence in Information Assurance education\u00a0(CAEIAE) and Research\u00a0(CAR-R)\u201d for FSU.\nWe are proud to be home to five NSF CAREER Award winners, a US Dept.\u00a0of Energy Early Career Principal Investigator Award winner, an AFOSR Young Investigator Award winner, three Fulbright Scholar Award winners, an IEEE Fellow, ACM Distinguished Scientists, and a FSU Distinguished Research Professor. Our faculty are among the world\u2019s leaders in Algorithms, Architecture, Databases, Distributed Systems, High-Performance Computing, Networking, Programming Languages and Compilers, Scientific Computing, Security, Software Engineering, and Vision.\nI encourage you to visit and explore our department to see our cutting edge research and educational programs.\nXiuwen Liu\u00a0Professor and ChairDepartment of Computer ScienceFlorida State University\n", "document_id": 164051}]}, {"paragraphs": [{"qas": [], "context": "Minimum Admissions Requirements for Computer Science MS and PhD Programs | Computer Science\n\nMinimum Admissions Requirements for Computer Science MS and PhD Programs\nThe Computer Science program offers an M.S. degree in Computer Science, Information Security, and Software Engineering, as well as a Ph.D. degree in Computer Science. The following are the minimum admissions requirements for such degrees:\nRequired Degrees: To be admitted to the Department of Computer Science as a CS graduate student you should have an undergraduate or graduate degree in Computer Science or related field from an accredited university. Students without an undergraduate degree in CS will be required to complete undergraduate prerequisites not on their undergraduate transcript before graduating with a graduate degree in CS. Students without a prior undergraduate or graduate degree in computer science should have at least completed COP4530 (Data Structures) or an equivalent class to be considered competitive for admissions. Here is the list of Undergraduate Prerequisites for the MS & PhD CS Degreee Program.\nGRE Scores: The minimum GRE scores required for admission are a 145 on the verbal section and a 150 on the quantitative section. For the old scoring system, the minimum GRE score required for admission is 1100 (Verbal and Quantitative combined) with a minimum of 650 on the Quantitative.\nTOEFL Scores:  The minimum required score on the IBTOEFL for admission consideration is 80 (213 computer-based, 550 paper-based). However, the Computer Science Department considers a score of 100-105 competitive, especially when students are seeking assistantships. The ability to lecture in English will be a major consideration in the selection of students for Teaching Assistantships.\nGrade Point Average: Students should have at least a B (3.0 on a 4.0 scale) average to be considered competitive. Students with a GPA of less than 3.0 in their undergraduate degree fall below both the department and university standards.\n", "document_id": 144222}]}, {"paragraphs": [{"qas": [], "context": "Undergraduate Admissions Procedures and Standards | Computer Science\n\nUndergraduate Admissions Procedures and Standards\nApplying for Admission\nUndergraduate Admissions is not handled by the Computer Science Department. Students interested in applying to the program should apply online through the Office of Admissions webpage and submit any supporting documents directly to their office.\nMinimum Admission Criteria\nStudents still in high school who are considering Computer Science are advised to study higher level math courses and, if possible, complete AP, IB, or CLEP tests and potentially earn college credit. Students working on their AA are advised to review the Common Course Prerequisites for their potential major in the Academic Guide.\nNote to prospective transfer students: Prospective transfer students should contact as-admissions@fsu.edu (Arts & Sciences Admissions) with specific questions about admission and mapping requirements.\nA student who has accumulated more than five grades below \u201cC-\u201c (including grades of \u201cU\u201d) in mathematics, statistics, science, or computer science courses taken for college credit at The Florida State University or elsewhere, whether repeated or not, will not be permitted to continue as a major in the department.\n", "document_id": 144226}]}, {"paragraphs": [{"qas": [], "context": "Contact | Computer Science\n\nZoom Contact Information: \nUse Zoom to talk to your advisors\nUse Zoom to talk to CS Administrative Staff\nDepartment Address\n253 Love BuildingFlorida State UniversityTallahassee, FL 32306-4530Phone: (850) 644-4029Fax: (850) 644-0058\nFaculty and Staff Listing\nDepartment Faculty\nDepartment Staff\nProspective or Current Undergraduate Students\nDr. David WhalleyDirector of Undergraduate Studieswhalley [ at cs dot fsu dot edu ]\nProspective or Current Graduate Students\nDaniel ClawsonGraduate CoordinatorOffice: LOV203Dclawson [ at cs dot fsu dot edu ]Phone: (850) 645-4975\nJie YangDirector of Graduate Admissionsjieyang [ at cs dot fsu dot edu ]\nAndy WangDirector of Graduate Studiesawang [ at cs dot fsu dot edu ]\nOther Departmental Information\nJaden AustinDepartmental Administrative Assistantjaustin [ at cs dot fsu dot edu ]Phone: (850) 644-2644\nDepartmental Administration\nDepartment Chair (Xiuwen Liu): (850) 644-0050\nBusiness Manager (Alisabet Valdes): (850) 644-5450\nGrants Specialist (Lori McFadden): (850) 644-8598\nWebmaster (Webmaster): (850) 644-4019\nOPS appointment papers, graduate assistant payroll (Edwina Hall): (850) 644-0672\nCourse Scheduling, graduate student records (Barbara Twyman): (850) 644-2360\nTravel: Please use the on-line form.(Questions to Main Office (850) 644-4029.)\nScheduling of the conference room in 151 Love (Jaden Austin): (850) 644-2644\nComputer Labs\nMajors Lab: Phone (850) 644-6097.\nCS Systems Group\nCS Dept. Computer and Network Help: Please use the on-line form.\nView the Systems group web page to find New User info, to submit a ticket to the help-desk, self-help tutorials, our services, and the status of the servers.\nRoom MCH 208 (Carothers)M-F, 8am-5pmPhone: (850) 644-4019\n", "document_id": 164052}]}, {"paragraphs": [{"qas": [{"question": "Is COP 4530 required to be admitted to the CS MS degree program?", "id": 157108, "answers": [{"answer_id": 221259, "document_id": 144223, "question_id": 157108, "text": "Students without a prior undergraduate or graduate degree in computer science should have completed COP4530 (Data Structures) or an equivalent class to be considered competitive for admissions. ", "answer_start": 1032, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}, {"question": "What is the minimum TOEFL score for assistanships?", "id": 157112, "answers": [{"answer_id": 221263, "document_id": 144223, "question_id": 157112, "text": "However, the Computer Science Department considers a score of 100-105 competitive, especially when students are seeking assistantships. ", "answer_start": 1723, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "Minimum Admissions Requirements for the Computer Network and System Administration (CNSA) MS Program | Computer Science\n\nMinimum Admissions Requirements for the Computer Network and System Administration (CNSA) MS Program\nThe Computer Network and System Administration graduate program has different core-course and admissions requirements and is thus a separate program. Below are the minimum admissions requirements for the CNSA MS degree program:\nRequired Degrees: To be admitted to the Department of Computer Science as a CNSA graduate student, you should have an undergraduate or graduate degree in Computer Science or related field from an accredited university. If you are a current FSU student, the CNSA major is the option that was set up for BA in Computer Science and BS in Cyber Criminology undergraduates to matriculate towards. Students without an undergraduate degree in CS will be required to complete undergraduate prerequisites not on their undergraduate transcript before graduating with a graduate degree in CS. Students without a prior undergraduate or graduate degree in computer science should have completed COP4530 (Data Structures) or an equivalent class to be considered competitive for admissions. Here is the list of Undergraduate Prerequisites for the MS CNSA Degree Program.\nGRE Scores: The minimum GRE scores required for admission are a 145 on the verbal section and a 150 on the quantitative section. For the old scoring system, the minimum GRE score required for admission is 1100 (Verbal and Quantitative combined) with a minimum of 650 on the Quantitative.\nTOEFL Scores: The minimum required score on the IBTOEFL for admission consideration is 80 (213 computer-based, 550 paper-based). However, the Computer Science Department considers a score of 100-105 competitive, especially when students are seeking assistantships. The ability to lecture in English will be a major consideration in the selection of students for Teaching Assistantships.\nGrade Point Average:  Students should have at least a B (3.0 on a 4.0 scale) average to be considered competitive. Students with a GPA of less than 3.0 in their undergraduate degree fall below both the department and university standards.\n", "document_id": 144223}]}, {"paragraphs": [{"qas": [{"question": "What is the CC MS Program?", "id": 89279, "answers": [{"answer_id": 99419, "document_id": 144224, "question_id": 89279, "text": "Cyber Criminology (CC) MS Program", "answer_start": 40, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}, {"question": "Will FSU accept students with less than a 3.0 for the graduate program?", "id": 89281, "answers": [{"answer_id": 99421, "document_id": 144224, "question_id": 89281, "text": "Students with a GPA of less than 3.0 in their undergraduate degree fall below both the department and university standards.\n", "answer_start": 2029, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "Minimum Admissions Requirements for the Cyber Criminology (CC) MS Program | Computer Science\n\nMinimum Admissions Requirements for the Cyber Criminology (CC) MS Program\nThe Cyber Criminology graduate program has different core-course and admissions requirements and is thus a separate program. Below are the minimum admissions requirements for the CC MS degree program:\nRequired Degrees: To be admitted to the Department of Computer Science as a Cyber Criminology graduate student you should have an undergraduate BS or BA degree in Computer Science or BS degree in Cyber Criminology. The program is designed primarily for our BA Computer Science and BS Cyber Criminology undergraduate students who wish to continue on in the pursuit of their MS degree in this field.  Students who do not meet these undergraduate degree guidelines will be required to complete certain undergraduate prerequisites before graduation with a graduate degree in Cyber Criminology. Students without a prior undergraduate or graduate degree in computer science should have at least completed COP4530 (Data Structures) or an equivalent class to be considered competitive for admissions. Here is the list of Undergraduate Prerequisites for the MS CC Degree Program.\nGRE Scores: The minimum GRE scores required for admission are a 145 on the verbal section and a 150 on the quantitative section. For the old scoring system, the minimum GRE score required for admission is 1100 (Verbal and Quantitative combined) with a minimum of 650 on the Quantitative.\nTOEFL Scores: The minimum required score on the IBTOEFL for admission consideration is 80 (213 computer-based, 550 paper-based). However, the Computer Science Department considers a score of 100-105 competitive, especially when students are seeking assistantships. The ability to lecture in English will be a major consideration in the selection of students for Teaching Assistantships.\nGrade Point Average: Students should have at least a B (3.0 on a 4.0 scale) average to be considered competitive. Students with a GPA of less than 3.0 in their undergraduate degree fall below both the department and university standards.\n", "document_id": 144224}]}, {"paragraphs": [{"qas": [], "context": "Ann Tyson | Computer Science\n\nAnn Tyson\nTeaching Faculty III\nOffice:\n101B MCH\nTelephone:\n850-644-3416\nE-Mail:\n aford [ at fsu dot edu ]\n Visit Personal Page\n", "document_id": 164056}]}, {"paragraphs": [{"qas": [], "context": "Xiuwen Liu | Computer Science\n\nXiuwen Liu\nProfessor and Chair\nOffice:\n259 Love Building\nTelephone:\n(850) 644-0050\nE-Mail:\nliux [ at cs dot fsu dot edu ]\n Visit Personal Page\nResearch\nDr. Lui\u2019s current areas of research are in the broad areas of computer vision and pattern recognition with emphasis on developing effective statistical models and algorithms for computer vision applications, including image understanding, automated target recognition, content-based image retrieval, object detection and segmentation, and real-time vision systems. The activities of the FSU Vision Group focus on research in computer vision that are motivated by psychophysical data and neurophysiological findings. We emphasize that visual modeling is a fundamental problem in computer vision in that visual perception is nonlinear, which makes many of the tools critical for linear systems not applicable. We focus on models which may have great potentials for real-world problems. Research activities at Florida State Vision group are centered around visual information processing from human visual perception modeling, computational models and algorithms for perception problems, to real world applications. Visual information processing is a very complex phenomenon that is involved with prior knowledge stored in memory, modeling of the visual environment, and computation at a given moment of deriving a solution for the purpose of survival and decision making.\n", "document_id": 164074}]}, {"paragraphs": [{"qas": [], "context": "An-I Andy Wang | Computer Science\n\nAn-I Andy Wang\nProfessor\nOffice:\n269 Love Building\nTelephone:\nE-Mail:\nawang [ at cs dot fsu dot edu ]\n Visit Personal Page\nResearch\nDr. Wang\u2019s research interest is constructing simple and coherent system solutions that attain multiple conflicting goals. Because the systems field constantly sprouts new research domains with independent evolutions, it is crucial to develop solutions that resolve incompatible assumptions and requirements among multiple domains. His recent work, the Conquest file system, illustrates how performance improvement does not preclude system simplicity. His continuing work, Conquest-2, aims to conserve energy while improving performance at the same time. Andy is also the inventor of electric-field-based multipath routing for mobile ad hoc networks, which demonstrates how large-scale distributed coordination can be achieved without communication and maintaining states. Previously, Wang was involved in analyzing the performance of optimistic peer replication through his parallel simulation framework.\n", "document_id": 164058}]}, {"paragraphs": [{"qas": [{"question": "What is Dr. Mallory's office number?", "id": 157675, "answers": [{"answer_id": 222083, "document_id": 164075, "question_id": 157675, "text": "171", "answer_start": 80, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}, {"question": "What is Xian F. Mallory's email?", "id": 157676, "answers": [{"answer_id": 222084, "document_id": 164075, "question_id": 157676, "text": "fan [ at cs dot fsu dot edu ]", "answer_start": 117, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "Xian F. Mallory | Computer Science\n\nXian F. Mallory\nAssistant Professor\nOffice:\n171 Love Building\nTelephone:\nE-Mail:\nfan [ at cs dot fsu dot edu ]\n Visit Personal Page\nResearch\nDr. Mallory is interested in developing novel computational techniques for analyzing large data sets in order to understand biological phenomena and processes, with particular emphasis on cancer. Dr. Mallory\u2019s work draws upon methodologies from combinatorial optimization, statistical inference, and machine learning.\n", "document_id": 164075}]}, {"paragraphs": [{"qas": [{"question": "What is Dr. Baker's email?", "id": 98545, "answers": [{"answer_id": 113021, "document_id": 164059, "question_id": 98545, "text": "baker [ at cs dot fsu dot edu ]", "answer_start": 96, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "Theodore Baker | Computer Science\n\nTheodore Baker\nEmeritus Professor\nOffice:\nTelephone:\nE-Mail:\nbaker [ at cs dot fsu dot edu ]\n Visit Personal Page\nResearch\nDr. Baker\u2019s research interests have included the P=?NP question and polynomial-time relative computability, pattern matching and parsing algorithms, compilation techniques, and real-time programming languages, scheduling and operating systems. He believes in the importance of formal and experimental methods, and in the transition of computer science research to engineering standards. He served as domain expert for real-time and systems programming in the ANSI/ISO Ada 95 language standard revision project, and directed the FSU team that developed the real-time multitasking runtime system for the Gnu Ada 95 compiler (GNAT). His current research focus is on real-time multiprocessor scheduling, including the both analytical study of schedulability and the empirical study of performance of working real-time multiprocessor kernels.\n", "document_id": 164059}]}, {"paragraphs": [{"qas": [{"question": "What is Dr. Mascagni's telephone?", "id": 98590, "answers": [{"answer_id": 113074, "document_id": 164076, "question_id": 98590, "text": "(732) 601-4470", "answer_start": 64, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}, {"question": "Where is Michael Mascagni's office?", "id": 157680, "answers": [{"answer_id": 222088, "document_id": 164076, "question_id": 157680, "text": "207 Love Building", "answer_start": 87, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "Michael Mascagni | Computer Science\n\nMichael Mascagni\nProfessor\n(732) 601-4470\nOffice:\n207 Love Building\nTelephone:\n(850) 644-3290\nE-Mail:\nmascagni [ at cs dot fsu dot edu ]\n Visit Personal Page\nResearch\nMy research group focuses on all aspects of stochastic computing. We are interested in the development of Monte Carlo and Quasi-Monte Carlo algorithms; the applications of these algorithms in materials science, biochemistry, and physics; and the creation of computational infrastructure to support effective stochastic computing. We view Monte Carlo algorithms as any algorithms that use random number to compute quantities of interest. As such, we have developed extremely efficient Monte Carlo for problems ranging from the computation of permeabilities of packed beds to the electrostatic field elicited on large biomolecules in ionic solution. In addition, we study basic computational kernels, such as those involved in numerical linear algebra, to find effective Monte Carlo alternatives to existing, deterministic, algorithms. Finally, we have been involved in the development of computational infrastructure for stochastic computing. We developed the Scalable Parallel Random Number Generators (SPRNG) library that is very widely used in highly demanding Monte Carlo applications. SPRNG was an outgrowth of our own research in pseudo- and quasirandom number generation which continues in concert with SPRNG development. Also, building on SPRNG, we have developed extensive infrastructure for stochastic computing on the computational grid. In all these activities we have had undergraduate and graduate students, as well as postdoctoral scholars, visitors, and international collaborators working with me in our research group.\n", "document_id": 164076}]}, {"paragraphs": [{"qas": [{"question": "Who is Dr. Kumar?", "id": 157701, "answers": [{"answer_id": 222109, "document_id": 164081, "question_id": 157701, "text": "Professor", "answer_start": 46, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "Piyush Kumar | Computer Science\n\nPiyush Kumar\nProfessor\nOffice:\n161 Love Building\nTelephone:\n(850) 645-2355\nE-Mail:\npiyush [ at cs dot fsu dot edu ]\n Visit Personal Page\nResearch\nDr. Kumar primarily conducts research on the boundary of algorithms and the \u201creal world\u201d. His main research interests lie in applying the rich theory of algorithms to the domains of computational geometry, computer graphics, pattern recognition, and machine learning. The general theme that threads his research interests in algorithms is narrowing the gap between theory and practice. Theoretical computer science relies on making assumptions that do not generally hold in the real world. For instance, the performance of algorithms on real data vs worst case analysis, the assumption that all memory operations are unit cost, noise in the input, degeneracies, importance of exact solution to optimization problems are issues that seem to need attention but are mostly ignored by the theory community. Addressing some of these issues has been the focus of his research. His work on core sets illustrates why column generation methods perform well in optimization, both theoretically and experimentally. His work on surface and curve reconstruction gave very simple algorithms that were provably fast and could handle noise in the data. His research on cache oblivious algorithms showed why certain ways to analyze algorithms compared to the RAM model of analysis were better for practical purposes. He also worked on the design of a classifier for biometric and other applications. This classifier has also been used for palm identification using outlines of the human hand. The classifier was based upon ideas that came out from his research in optimization.\n", "document_id": 164081}]}, {"paragraphs": [{"qas": [{"question": "Who is Shayok Chakraborty?", "id": 157724, "answers": [{"answer_id": 222132, "document_id": 164085, "question_id": 157724, "text": "Assistant Professor", "answer_start": 58, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "Shayok Chakraborty | Computer Science\n\nShayok Chakraborty\nAssistant Professor\nOffice:\n264 Love Building\nTelephone:\nE-Mail:\nshayok [ at cs dot fsu dot edu ]\n Visit Personal Page\nResearch\nDr. Chakraborty\u2019s research interests include computer vision and machine learning. He is interested in developing intelligent learning algorithms under weak human supervision. His research has been validated on a variety of applications including face and facial expression recognition, object recognition and assistive technology.\n", "document_id": 164085}]}, {"paragraphs": [{"qas": [], "context": "Sudhir Aggarwal | Computer Science\n\nSudhir Aggarwal\nProfessor\nOffice:\n263 Love Building\nTelephone:\n(850) 644 0164\nE-Mail:\nsudhir [ at cs dot fsu dot edu ]\n Visit Personal Page\nResearch\nSudhir Aggarwal\u2019s current research interests are computer and communication networks where he is investigating support infrastructures for network games and building efficient overlay networks. He is also interested in building software tools in support of cybersecurity and law enforcement. His research interests have included problems in distributed and real-time system; design, analysis and verification of communication protocols; search engines; and modeling and simulation.\n", "document_id": 164086}]}, {"paragraphs": [{"qas": [], "context": "Weikuan Yu | Computer Science\n\nWeikuan Yu\nProfessor\nOffice:\n206 Love Building\nTelephone:\n850-644-5442\nE-Mail:\nyuw [ at cs dot fsu dot edu ]\n Visit Personal Page\nResearch\nYu has broad research interests spanning structured and unstructured database systems, data mining and analytics of big data and social networks, parallel computer systems and architecture, high speed interconnects, cloud computing, computational biology and climate modeling, storage and I/O systems.Dr. Yu has graduated many doctoral and master students who upon graduation joined prestigious organizations such as Oak Ridge National Laboratory, Yahoo, Intel, Boeing, IBM T.J. Watson Research Center, Amazan, and other industry positions. He is currently working with the PASL group of two postdoctoral researchers, 8 Ph.D. students and 3 master students. His group\u2019s research has been supported in part by NASA, DOE (ORNL and LLNL), NSF, Alabama Department of Commerce, Mellanox, Intel, NVIDIA, and Scitor, along with equipment donations from Mellanox, NVIDIA, and Solarflare. Yu\u2019s research won the 2012 Alabama Innovation Award and the First Prize of the 2012 ACM Student Research Competition Grand Finals. Yu is a senior member of IEEE and member of ACM and USENIX.\n", "document_id": 164092}]}, {"paragraphs": [{"qas": [], "context": "Daniel Schwartz | Computer Science\n\nDaniel Schwartz\nAssociate Professor\nOffice:\n266 Love Building\nTelephone:\n(850) 644-5875\nE-Mail:\nschwartz [ at cs dot fsu dot edu ]\n Visit Personal Page\nResearch\nDr. Schwartz\u2019s research has spanned mathematical logic, fuzzy logic, formal methods in artificial intelligence, and their applications. He currently is engaged in project for the US Army involving case-based reasoning and data mining for computer network intrusion detection. This has led to an interest generally in information security. Dr. Schwartz also has interests in the area of digital libraries, which in turn entails concern with databases, software engineering, and Internet applications. His recent teaching includes courses on formal logic, artificial intelligence, databases, Java, and enterprise systems programming.\n", "document_id": 164082}]}, {"paragraphs": [{"qas": [], "context": "Gary Tyson | Computer Science\n\nGary Tyson\nProfessor\nOffice:\n163 Love Building\nTelephone:\n(850) 644-3088\nE-Mail:\ntyson [ at cs dot fsu dot edu ]\n Visit Personal Page\nResearch\nDr. Tyson\u2019s research areas span all aspects of computer architecture and compiler optimization. His most recent efforts have concentrated on the design of high-performance single-chip processors with a focus on how the compiler can organize microarchitectural resources to provide the highest performance. Gary and his students have published numerous papers on cache organization and have designed several decoupled architectures. His research is funded by the National Science Foundation, Intel Corporation, IBM, and (of course) taxpayers throughout the country.\n", "document_id": 164088}]}, {"paragraphs": [{"qas": [{"question": "What number can Dr. Zhang be reached at?", "id": 98650, "answers": [{"answer_id": 113143, "document_id": 164096, "question_id": 98650, "text": "164 Love Building", "answer_start": 68, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "Zhenghao Zhang | Computer Science\n\nZhenghao Zhang\nProfessor\nOffice:\n164 Love Building\nTelephone:\n(850) 644-1685\nE-Mail:\nzzhang [ at cs dot fsu dot edu ]\n Visit Personal Page\nResearch\nDr. Zhang\u2019s main research interests are in the broad area of Computer Networks, including network security systems, computer scheduling algorithms, performance analysis, wireless access networks, cross-layer design, optical networks, and wireless sensor networks.\n", "document_id": 164096}]}, {"paragraphs": [{"qas": [{"question": "Who is Shayanra Jayaraman?", "id": 157718, "answers": [{"answer_id": 222126, "document_id": 164084, "question_id": 157718, "text": "Teaching Faculty", "answer_start": 58, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "Sharanya Jayaraman | Computer Science\n\nSharanya Jayaraman\nTeaching Faculty\nOffice:\n205A Love Building\nTelephone:\nE-Mail:\njayarama [ at cs dot fsu dot edu ]\n Visit Personal Page\n", "document_id": 164084}]}, {"paragraphs": [{"qas": [{"question": "What are the duties of the Recruiting Chair?", "id": 98652, "answers": [{"answer_id": 113145, "document_id": 164103, "question_id": 98652, "text": "Setup an initial schedule on the visitor page for the candidate when the dates are known.\u00a0 Include flight arrival and departure and hotel information.", "answer_start": 160, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "Recruiting Chair and Host Duties and Responsibilities | Computer Science\n\nRecruiting Chair and Host Duties and Responsibilities\nDuties of the Recruitment Chair\nSetup an initial schedule on the visitor page for the candidate when the dates are known.\u00a0 Include flight arrival and departure and hotel information.\nMake sure the Dean or Associate Dean gets a slot to meet with the candidate.\nGet the chair to sign up for a slot.\nGet the candidate in contact with the department secretary (Ms. Kenyetta Neale in 2015) to setup paperwork and make travel arrangements\nDesignate a host for the candidate.\nDuties of the Candidate Host\nCheck with the department secretary (Ms. Kenyetta Neale in 2015) to see if the paperwork has been initiated.\nSettle on a place for each meal.\u00a0 Put the location for each meal on the visitor page. As host you can pay for the candidate\u2019s meal and your own for lunch. For dinner you can pay for other faculty as long as the cost is reasonable (e.g. about $60 is okay).\u00a0 Save the receipt, give it to Alisabet Valdes, and you will get reimbursed later.\nMake sure enough faculty sign up to fill up all of the slots.\u00a0 Send e-mail to faculty who have not signed up to ask them to do so.\nMake sure a few faculty attend each meal.\nDetermine if there are any special equipment needs for the talk.\u00a0 Work with the Systems Group and/or Department of Scientific Computing to make sure there are no problems.\nMake sure the candidate has transportation. Indicate on the schedule who will provide the transportation each day.\nFrom the airport to the hotel\nFrom the hotel to the Department\nFrom the Department to the hotel\nTo and from dinner\nTo the airport\nMake sure that when the candidate has an appointment in another building (dean\u2019s office, etc.) that someone will take the candidate there and pick the candidate up.\nSend e-mail to the candidate before he/she comes to establish contact and ask if there is anything he/she needs (meet with a realtor, etc.).\nIf the candidate wishes to meet with graduate students, then setup a\nmeeting with 5-10 graduate students in the candidate\u2019s area of research. Be sure to not only reserve a slot on the schedule, but to also reserve a meeting room (151 Love or 208 Love). Remind the students to attend the meeting.\nIf there is an available slot, then have the candidate meet with the Systems Group Head to get a tour of the Department.\nMake sure the candidate meets briefly with the department secretary during their visit so they can get a copy of receipts (e.g. airline tickets) to facilitate the candidate getting reimbursed.\n", "document_id": 164103}]}, {"paragraphs": [{"qas": [], "context": "Summer Teaching Policy | Computer Science\n\nSummer Teaching Policy\nWho is Paid to Teach in the Summer?\nThe department typically is allocated a very small budget for summer faculty salaries. This allows the department to hire a few 9-month faculty members to teach courses during the summer. The amount allocated to the department is typically enough to cover about three courses. Faculty paid from this budget only for instruction, not for research.\nAccording to the Collective Bargaining Agreement, the total amount paid for a faculty member to teach a given course in the summer must be the same as the amount paid for teaching the same course during the academic year. This means that a course that would normally be a 25% duty assignment in the academic year is a 37.5% duty assignment if for the A term, and a 76.2% duty assignment if for the B or C term.\nThe policy of the department is that before the schedule of classes is made for a given summer the Department Chair polls the faculty (by paper memo or e-mail) to find out:\nWho would like to teach a regular course for the summer, and what courses they are willing to teach?The department is normally interested only funding 9-month faculty to teach graduate courses. Non-tenure-track faculty, who are on 12-month appointments and so required to teach summers, generally cover the undergraduate courses, along with teaching assistants and adjuncts. Only graduate faculty members may teach graduate courses, and most graduate faculty are 9-month faculty.\nThe Department Chair chooses from those responding to this question a few (generally two or three, depending on budget) faculty members to teach graduate courses for the summer. If the budget is insufficient to satisfy all requests for summer teaching, priority is given to those who have not been paid to teach a regular summer course recently, based on a round-robin list. Whenever a person teaches a regular summer course that\nperson is placed at the tail of the list, so those who have not taught recently are ahead in the line for summer teaching of those who have been paid to teach a regular summer course recently.\nSince anyone can remember, the number of requests has always been less than or equal to the number that could be funded, so no such prioritization has been necessary.\nWho plans to supervise graduate students on DIS, supervised research, thesis, or dissertation during the summer, and who are the students they plan to supervise?The Department Chair funds as many of these faculty members as possible, each for a small FTE, to allow them to be instructor of record for individual instruction courses for the summer without violating the policy of the Dean of the Faculties described further below. The amount of the appointment is symbolic, and varies according to the number of faculty interested and the amount of funds available. It is typically just a few percent.\nAs with all instructional appointments, faculty on such appointments are expected to be mostly in town during the period they are appointed, so that they are available to supervise the students in their individual instruction courses.\nWho is Allowed to Sign as Instructor of Record for\nIndividual Instruction Courses?\nThere is a policy (due to the Dean of the Faculties) that only individuals who have an instructional appointment (i.e., are on the payroll for the summer with a non-zero percentage of instructional assignment) may be listed as instructor of record for a course.\nThe occasion when some faculty members run afoul of this policy is when they have students who are working on a thesis or dissertation during the summer, and what to sign up for thesis or dissertation hours, but the faculty member cannot be instructor or record because the faculty member is not on the department\u2019s teaching payroll for the summer. The department\u2019s summer teaching allocation policy (see above) is intended to solve this problem primarily by giving a small percent FTE summer appointment to each faculty member who expects to have individual study students enrolled for the summer.\nThe one exception to the policy is that a faculty member who is on FSU\u2019s payroll to do sponsored research may sign as instructor of record for (only) DIS, supervised research, thesis, or dissertation if the student is getting credit for doing work on the sponsored research project (whether or not the student is paid for the work).\nWhether on a grant or an instructional appointment, the appointment period of the instructor of record for a course must cover the full term during which the student is registered.\nWhere a student needs to register for thesis or dissertation and the regular thesis or dissertation advisor is not eligible to be instructor of record, it is recommended that the instructor of record be another member of the student\u2019s supervisory committee, or the department chair.\nNote that there is a clear principle behind this policy, which every faculty member would support, i.e. that we do not teach for free. This principle is one that is important to maintain, lest some day we be required to teach in the summers without any additional compensation.\nCopyright \u00a9 2015\nFlorida State University Computer Science Department\n", "document_id": 164104}]}, {"paragraphs": [{"qas": [{"question": "What is Alisabet Valde's phone number?", "id": 98657, "answers": [{"answer_id": 113150, "document_id": 164108, "question_id": 98657, "text": "Business Manager", "answer_start": 72, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}, {"question": "What does Amy Sanderson do?", "id": 157832, "answers": [{"answer_id": 222237, "document_id": 164108, "question_id": 157832, "text": "Undergraduate advising for freshmen/sophomore Computer Science majors, CS minor, non-major information.", "answer_start": 1502, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}, {"question": "Where is Lauren Higbee's office?", "id": 157838, "answers": [{"answer_id": 222243, "document_id": 164108, "question_id": 157838, "text": "203C Love", "answer_start": 2447, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}, {"question": "What is Lori McFadden's email address?", "id": 157841, "answers": [{"answer_id": 222246, "document_id": 164108, "question_id": 157841, "text": "mcfadden [ at cs dot fsu dot edu ]", "answer_start": 3191, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "Department Staff | Computer Science\n\nDepartment Staff\nAlisabet Valdes \u2013 Business Manager\nMajor areas of responsibility: accountant for the E&G and Foundation funds within the department, faculty and staff appointments, Department security coordinator\nEmail: valdes [ at cs dot fsu dot edu ], afvaldes [ at fsu dot edu ]\nOffice: 253A Love\nPhone: 644-5450\nWork Hours: 8:00AM-5:00PM\nJaden Austin \u2013 Departmental Administrative Assistant\nMajor areas of responsibility \u2013 Assist department chair, assist professors with promotion and tenure binders, input Assignments of Responsibilities in OMNI, make arrangements for special events, maintain office supply inventory, timesheet management, key disbursement, manage travel and other reimbursements.\nEmail: jaustin [ at cs dot fsu dot edu ]\nOffice: 253 Love\nPhone: 644-2644\nDaniel Clawson \u2013 Graduate Coordinator\nMajor areas of responsibility: Processing applications for graduate admission and financial aid, sending acceptance and rejection letters to graduate student applicants, tracking status of current graduate students, and general assistance to the chair\nEmail: clawson [ at cs dot fsu dot edu ]\nOffice: 203D Love\nPhone: 645-4975\nEdwina Hall \u2013 Administrative Associate\nMajor areas of responsibility: E&G \u201cOPS\u201d payroll certifications, OPS appointments, purchase orders through Spearmart\nEmail: ehall [ at cs dot fsu dot edu ]\nOffice: 253C Love\nPhone: 644-0672\nWork Hours: 8:00AM \u2013 5:00PM\nAmy Sanderson \u2013 Academic Advisor\nMajor areas of responsibility: Undergraduate advising for freshmen/sophomore Computer Science majors, CS minor, non-major information.\nEmail: aesanderson [at fsu dot edu]\nOffice: 203B Love\nPhone: TBA\nHow to Schedule an Appointment:  Log in to my.fsu.edu and click the \u201cCC\u201d icon at top left. Click \u201cSchedule Advising.\u201d Choose your service and advisor.\nAppointments for Non-Majors: Log in to my.fsu.edu and click the \u201cCC\u201d icon at top left. Click \u201cSchedule Advising.\u201d Click \u201clearn about another major,\u201d then \u201cComputer Science Advising.\u201d\nNote: Summer 2021 academic advising is conducted virtually through Zoom. Current FSU students may make appointments via Campus Connect. Zoom link and meeting ID are listed in availability in CC.\nLauren Higbee \u2013 Academic Program Specialist\nMajor areas of responsibility: Undergraduate advising for junior/senior Computer Science majors, progress checks, graduation clearances, major certification, etc.\nEmail: lhigbee [at fsu dot edu]\nOffice: 203C Love\nPhone: 850-644-8700\nHow to Schedule an Appointment:  Log in to my.fsu.edu and click the \u201cCC\u201d icon at top left. Click \u201cSchedule Advising.\u201d Choose your service and advisor.\nAppointments for Non-Majors: Log in to my.fsu.edu and click the \u201cCC\u201d icon at top left. Click \u201cSchedule Advising.\u201d Click \u201clearn about another major,\u201d then \u201cComputer Science Advising.\u201d\nNote: Summer 2021 academic advising is conducted virtually through Zoom. Current FSU students may make appointments via Campus Connect. Zoom link and meeting ID are listed in my availability in CC.\nLori McFadden \u2013 Grants Compliance Analyst\nMajor areas of responsibility: Accountant for the grant funds within the department, pre and post award, C& G payroll certifications\nEmail: mcfadden [ at cs dot fsu dot edu ]\nOffice: 253B Love\nPhone: 850-644-8598\nWork Hours: 8:00AM \u2013 5:00PM\nBarbara Twyman \u2013 Administrative Associate\nMajor areas of responsibility: Course creation and scheduling, academic space scheduling, assisting undergraduate and graduate advisors, submitting course book orders and course evaluation forms, serves as back-up key manager\nEmail: twyman [ at cs dot fsu dot edu ], btwyman [ at fsu dot edu ]\nOffice: 203A Love\nPhone: 850-644-236\nBobby Roy \u2013 System Administrator\nMajor areas of responsibility: Assist in the management of computing and network resources\nEmail: roy [ at cs dot fsu dot edu ]\nOffice: 208E MCH (Carothers)\nPhone: 644-0516\nWork Hours: 7:30am \u2013 4:30pm\n", "document_id": 164108}]}, {"paragraphs": [{"qas": [{"question": "Can I apply if my TOEFL scores are below the standard?", "id": 157856, "answers": [{"answer_id": 222261, "document_id": 164112, "question_id": 157856, "text": "All complete applications are submitted to the Admissions Committee for review. If you do not meet the department standard, it is less likely that you will be recommended for admission", "answer_start": 876, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "Graduate FAQ | Computer Science\n\nGraduate FAQ\nAPPLICATION QUESTIONS\n1. Are paper recommendation letters accepted?\nNo. All recommendation letters must be submitted online through the application system. Information on completing the online recommendation forms will be sent directly to those listed by the applicant.\n2. Are photocopies or faxes of transcripts accepted?\nNo. An official transcript from each institution attended by the applicant must be sent directly to the Florida State University Admissions Office. That address is:\nOffice of Graduate Admissions\nFlorida State University\n314 Westcott Bldg.\nTallahassee, FL. 32306-1410\nUSAPhone: (850) 644-3501\nFSU Graduate Admissions e-mail:graduateadmissions@admin.fsu.edu\nURL: http://admissions.fsu.edu/\n3. My TOEFL and/or GRE score(s) is/are below the department standards. Will I be automatically denied? Should I apply?\nAll complete applications are submitted to the Admissions Committee for review. If you do not meet the department standard, it is less likely that you will be recommended for admission, particularly if you fall below the university requirement of an overall score of 80 (IB-TOEFL) and 145 Verbal & 150 Quantitative on the GRE.\n4. I took the GRE more than once. Which score do you accept: the highest or the most recent score?\nFSU will take the highest combined scores from all attempts of the GRE which we call the \u201cSuper Score\u201d. For example if you got 142 verbal and 160 quantitative on your first\u00a0 attempt and 146 verbal and 157 quantitative on your second attempt, the Super Score would be 146 verbal and 160 quantitative.\n5. How long should my statement of purpose be?\nStatements of purpose are usually between one and three pages in length.\n6. What should I include in my statement of purpose?\nA statement of purpose should provide details that cannot be obtained from the transcript or r\u00e9sum\u00e9.\u00a0 You should state the interests and reason(s) for wanting to attend Florida State\u00a0 University.\u00a0 You should also provide an idea of possible research areas that you may want to pursue while in our graduate program and what experience you\u2019ve had in these areas so far.\nResume/Curriculum Vitae\n1. What should this document contain?\nList any academic honor\nList any computer related course work and/or experience and all the programming languages that you know.\nList any teaching experience\nFor international students, please describe your training and experience with English\nGRE QUESTIONS\n1. Is the GRE required for admission to the University? Can it be waived?\nThe University requires test scores from a nationally standardized graduate admission test. The Department requires the General GRE test. This requirement cannot be waived.\n2. Can I send you a certified copy of my GRE score so you can make a decision and I will follow up with an \u201cOfficial\u201d score later?\nWe can only accept official test scores for the purpose of evaluating your application. A GRE score is considered official when it is sent directly from the testing center to the university Office of Admissions. No other method is acceptable. This requirement cannot be waived.\n3. Do you count the Analytical portion of the test?\nSome of our faculties do look at all the scores but the total GRE score is based only upon the Verbal and Quantitative portion. The minimum scores are 145 verbal and 150 quantitative.\n4. If I score less than the posted minimums, can I be accepted?\nA minimum score does not assure a candidate of acceptance. Most of our admitted students are well above the posted minimums, but applications are reviewed for a sense of overall preparedness to potentially be successful in our graduate programs.\u00a0 GRE scores are not the only factor that play into determining whether a student will be admitted, but they are a useful tool to help provide a basis of comparison between students that are coming from a variety of different colleges and university from many cultures and countries around the world.\n5. Do you require the Computer Science Specific GRE test?\nNo.\n6. I have not taken the GRE test yet. Can I still go ahead and apply?\nYes you can. However, your application will not be reviewed until complete.\n7. The undergraduate GPA requirement for the graduate school is 3.0. If I score very good on the GRE would that offset a poor GPA?\nNot really. Your entire folder is evaluated by our Admission and Financial Aid Committee. A strong showing in one area does not necessarily offset a weak showing in another.\nTOEFL (Test Of English as a Foreign Language) QUESTIONS\n1. I did not score high on the TOEFL test, can I still be admitted?\nThe minimum score required by the University on the TOEFL test is 550 for the paper-based and 80 for internet-based. Falling below the minimums is an automatic denial without exception. The Department standards are significantly higher than the University requirements.\n2. What is the average TOEFL test score?\nThe average test is over 610 for the paper based and over 95 for the internet-based version. We have found that students who score below 600 paper-based or 95 internet-based on the TOEFL test do not typically do well in our courses because of the lack of communication ability.\n3. My English is very good and I have lived in the United States since I was young. Do I need the TOEFL?\nIf you are permanent resident, no. However, if you require a visa in order to stay in the country and you have not obtained a bachelor\u2019s degree from the United States or another English speaking country, you need the TOEFL.\nGRADUATE ASSISTANTSHIP QUESTIONS\n1. I\u2019m interested in an assistantship through the department. What additional forms do I need to fill out?\nAll Computer Science graduate applicants will be considered for an assistantship through the department, unless otherwise sponsored by a third party (e.g. Military, Government of Origin). For international students required to take the TOEFL exam, a score of 620 (Paper-Based) or 100 (Internet-Based) or 250 (Computer-Based) is necessary to be considered for an assistantship through the department.\n2. What is the criteria for getting a Teaching Assistantship?\nThis is a very difficult question. The Department uses Teaching Assistantships in various ways. (1) To attract highly qualified PhD students to our Department. They are given teaching assistantships in the assumption that they will eventually become research assistants. (2) To attract masters students with exceptional teaching ability to support the large number of lower level classes in computer science and computer literacy.\nBasically we look at all of the following criteria:\nQuality and ranking of the schools attended\nGPA\nGRE Scores\nTOEFL Scores (if applicable)\nTeaching experience\nPrevious degree program\nQuality of research or research potential\nQuality of letters of recommendation\nAn overall assessment of whether the student is serious about the degree program\n3. I understand that if you apply to the PhD program, you stand a better chance of getting an assistantship. Is this true?\nNo. Students should apply for the degree program that they intend to complete. TAs must have exceptional public speaking abilities and a solid academic background. Many of these students are MS degree-seeking students.\n", "document_id": 164112}]}, {"paragraphs": [{"qas": [{"question": "Who decides which students are hired for research assitantships?", "id": 157874, "answers": [{"answer_id": 222279, "document_id": 164113, "question_id": 157874, "text": "The hiring decisions are made by the individual faculty members who are the principal investigators of the various contracts and grants. ", "answer_start": 900, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}, {"question": "Does FSU offer in-state tuition?", "id": 157877, "answers": [{"answer_id": 222282, "document_id": 164113, "question_id": 157877, "text": "Students who are US residents from states other than Florida should apply for Florida residency as soon as possible, in order to qualify for in-state tuition.", "answer_start": 2231, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "Graduate Financial Aid | Computer Science\n\nGraduate Financial Aid\nPlease make sure to check out the general scholarships website that also has information on scholarships and fellowships available for students at: the general financial page. Graduate students in the Department of Computer Science are generally supported by the following means:\nTeaching Assistantships: The department employs a large number of teaching assistants. Recipients are selected by a faculty committee from the general application pool. In addition to academic qualifications, the committee considers attributes that are likely to affect an individual\u2019s ability to teach, including spoken English fluency. Prior teaching experience is valuable but is not a requirement.\nResearch Assistantships: Faculty members within the department have a number of research grants and contracts that support graduate student assistants. The hiring decisions are made by the individual faculty members who are the principal investigators of the various contracts and grants. Interested students might look at the Department of Computer Science web page listing current research grants, and contact individual faculty members directly.\nDepartment Sponsored Federal Scholarships: Many domestic students are supported by the FSU CS Cybersecurity Scholarship for Services Program\nFellowships: Some students are supported by Department or University Scholarships and Fellowships\nOther Jobs: Students also find jobs outside the department, on or off campus.\nHow to Apply for Financial Aid\nTo apply for a fellowship or assistantship, a student only needs to complete the Application for Admission. All Computer Science graduate applicants will be considered for an assistantship through the department, unless otherwise sponsored by a third party (e.g. Military, Government of Origin). For those international students required to take the TOEFL exam, a score of 620 (Paper Based) or 105 (Internet Based) or 250 (Computer Based) is necessary to be considered for an assistantship through the department.\nTuition & Fee Waivers\nStudents on fellowships or graduate assistantships generally receive a partial waiver of tuition (excluding fees), in addition to a generous stipend.\nStudents who are US residents from states other than Florida should apply for Florida residency as soon as possible, in order to qualify for in-state tuition. Please follow  the instructions to become a Florida resident.\n", "document_id": 164113}]}, {"paragraphs": [{"qas": [{"question": "Where can I go to apply for scholarships?", "id": 157878, "answers": [{"answer_id": 222283, "document_id": 164116, "question_id": 157878, "text": "To apply for the following scholarships, please use the scholarship portal.", "answer_start": 94, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}, {"question": "How many Harris scholarships are awarded each year?", "id": 157884, "answers": [{"answer_id": 222289, "document_id": 164116, "question_id": 157884, "text": "Three awards of $4,000 each are given annually", "answer_start": 947, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "CS Department Endowment Scholarships | Computer Science\n\nCS Department Endowment Scholarships\nTo apply for the following scholarships, please use the scholarship portal. Follow the instructions to create an account.  \n1 Hall Undergraduate Scholarship = $1000. Offered to computer science undergraduate students with academic talent and financial need. Application starts in January for the following academic year.\nThe application deadline is February 14 each year. \n3 Harris Undergraduate Scholarships \u2013 $4000 each. Offered to computer science undergraduate students who have excelled in their academic studies. Application turn in starts in January to apply for the following academic year. The application deadline is February 14 each year.The Harris Corporation, headquartered in Melbourne, Florida established an endowment in 2001 to provide scholarships for highly qualified Florida State University computer science undergraduate students. Three awards of $4,000 each are given annually to students that are eligible to receive a US security clearance. Summer internships at Harris Corporation are available and encouraged for awardees. Interested students should submit an application, unofficial transcripts, and a resum\u00e9 to the undergraduate advisor in 203C\u00a0Love by the 14th of February prior to the desired award year. Awardees will be announced at the Annual Computer Science Awards Ceremony, held in April.\n2 or 3 Owenby Undergraduate Scholarships \u2013 $2000 each. Offered to computer science undergraduate students; preference is given to students with financial need. Application starts in Spring for the following academic year.\nThe application deadline is February 14 each year.\n2 Harris Graduate Scholarship \u2013 $8,500 offered to computer science graduate students who have excelled in their academic studies. Tuition will be included. Application starts in January for the following academic year. The application deadline is March 4.\n2 Southern Fidelity/Capitol Preferred Graduate Student Scholarships in Computer Science \u2013 $1,000 offered in the Fall and in Spring to Computer Science graduate students who have excelled in their academic studies and work at least 15 hours per week.\nThe application deadline for Fall is April 1, the deadline for Spring is September 1.\n", "document_id": 164116}]}, {"paragraphs": [{"qas": [], "context": "CS Department NSF S-STEM Scholarship | Computer Science\n\nCS Department NSF S-STEM Scholarship\nThrough the generous funding of the National Science Foundation, the Department of Computer Science will offer S-STEM scholarships to academically talented students with financial need, to address the shortage of labor, women, and underrepresented groups in computing. Each S-STEM scholar will be supported for four years, up to $10,000 per year. The scholarship is intended to reduce or replace student loans so that students can better focus on their academic endeavors.\nTo be eligible to apply, you must (1) be a first-year undergraduate for 2015/2016, with an interest in taking early course sequences in computer science, (2) be a U.S. citizen/permanent resident, U.S. national, or otherwise qualified alien, and (3) have financial need as determined by the Free Application for Federal Student Aid (FAFSA). Women and underrepresented groups are strongly encouraged to apply.\nTo apply for the S-STEM scholarship, please (1) complete and submit the FAFSA application to the FSU Financial Aid Office if you have not done so, and (2) download, complete, sign, date, and submit the S-STEM application form to the following address:\nLauren Higbee\n253 Love Building\nDepartment of Computer Science\nFlorida State University\nTallahassee, FL 32306-4530\nFAX: (850) 644-0058\nApplication processing will begin on June 1 each year. For questions and assistance on completing FAFSA or S-STEM applications, please contact Lauren Higbee at higbee [at]cs.fsu.edu, (850) 644-8700.\n", "document_id": 164117}]}, {"paragraphs": [{"qas": [{"question": "What fellowships are available for graduate students?", "id": 157904, "answers": [{"answer_id": 222309, "document_id": 164120, "question_id": 157904, "text": "University Fellowship\nPresidential Fellowship\nMcKnight Doctoral Fellowship\nOther National Fellowships & Scholarships", "answer_start": 1314, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "Scholarship and Fellowship Opportunities | Computer Science\n\nScholarship and Fellowship Opportunities\nBelow you will find scholarship opportunities for both graduate and undergraduate students, from sources around the nation. If you have any questions that are not answered by the information and links provided here, please feel free to ask your academic advisor. Most applications and forms are due to the academic advisor.\nFurthermore, information on financial aid for undergraduate students is available from the FSU Office of Financial Aid.\nCS Department Cybersecurity Scholarship for Services Programs for Graduate Students\nCS Department Endowment Scholarships\nHall Undergraduate Scholarship, $1000, application deadline February 14.\nHarris Undergraduate Scholarship, $4000, application deadline February 14.\nOwenby Undergraduate Scholarship, $2000, application deadline February 14.\nHarris Graduate Scholarship, Two $8,500 scholarships, applications due March 19.\nSouthern Fidelity/Capitol Preferred Graduate Student Scholarship in Computer Science, $1,000, application deadlines April 1 and September 1.\nCollege and University Fellowships for Graduate Students, please check with Graduate School Funding and Awards site for up-to-date information. Following are some sample fellowships that are available.\nUniversity Fellowship\nPresidential Fellowship\nMcKnight Doctoral Fellowship\nOther National Fellowships & Scholarships\n", "document_id": 164120}]}, {"paragraphs": [{"qas": [], "context": "CS awarded a significant amount of technology fee to upgrade its instructional technology infrastructure | CS awarded a significant amount of technology fee to upgrade its instructional technology infrastructure The Computer Science Department has been awarded over $85K Technology Fee to upgrade its instructional technology infrastructure in four projects: (1) to upgrade Grads Lab computers, (2) to build CS private cloud services, (3) to upgrade the data center server switch, (4) to upgrade audio\u2013visual technology in classrooms. The Systems Group manager, Yu Wang, and Systems Group member, Bobby Roy, developed the proposals for the four projects. The proposals were selected by the Student Technology Fee Advisory Committee, and approved by the IT Governance Council. The awards will significantly enhance the department\u2019s instructional technology resources for students and faculty.", "document_id": 287591}]}, {"paragraphs": [{"qas": [], "context": "FAQ for Majors in the Computer Science Department | FAQ for Majors in the Computer Science Department Holds: 1.\tI have a hold on my account. How can I remove it? A.\tAcademic advisors can lift map term off track and D/F holds. i.\tMap Term Off Track & D/F Warning Holds: Please schedule an appointment or attend drop-in advising. ii.\tD/F Dismissal holds: Please change your major before emailing advisor@cs.fsu.edu to lift this hold. B.\tFor all other holds, click on the hold and read the details for instructions and contact information. For any questions, contact the department listed on the hold. 2.\tI have a graduation progress check hold but am not graduating. Can an advisor lift it? A.\tAdvisors cannot lift these holds. Graduation Progress Check holds are just that\u2014a check to see where you are in terms of graduating and to see what you have left to graduate. It does not mean you are graduating right now. B.\tClick on the hold and follow the directions to remove it. Note that both the Registrar and College of Arts and Sciences put holds on student accounts for Graduation Progress Checks, so make sure to complete both to remove the holds. Enrolling/Schedule Planning: 1.\tCan I take this class pass/fail (S/U)? A.\tGenerally, CS majors will only take their foreign language courses as S/U. No major, minor, or Liberal Studies requirement courses may be taken S/U. B.\tSubmit the request online in Student Central by the 7th-week deadline. See instructions here: https://registrar.fsu.edu/training/su_grade_request . 2.\tI am trying to enroll in an online CS course but received an error message. Can an advisor enroll me? A.\tCS Majors may not take CS Distance Learning courses. These courses are reserved for the Distance Learning program. Fall 2020 CS courses will have the \u201clocation\u201d listed as \u201cremote.\u201d CS major courses with a \u201clocation\u201d of \u201conline\u201d are reserved for Distance Learning. 3.\tMy registration opened. Can an advisor tell me what to take? A.\tYour academic advisor will be happy to advise you on course options if you attend drop-in advising or schedule an appointment. B.\tTo get started, however, students can also check these resources: i. My Academic Requirements ii. CS Major Flowcharts iii. Academic Program Guide 4.\t(Upper-division students) I want to graduate soon. Can my advisor tell me what I have left to take? A.\tSure! First, refer to your College of Arts and Sciences Progress Check (pick it up from 010 Longmire or email as-progresscheck@fsu.edu ) and your major\u2019s flowchart. Then, see an advisor. 5.\tCan you tell me what CS electives are offered and when? A.\tCS electives change every semester, so we email out the list to the majors listserv after the schedule posts each semester (February and October). Check your email or contact advisor@cs.fsu.edu. 6.\tHow can I drop a course from this semester? A.\tCourses can be dropped without grade liability until the 7th-week deadline. Courses can be (\u201clate\u201d) dropped with a W until the 12th-week deadline. Upper-division students are allowed ONE (1) late drop at FSU. Deadlines are posted on the Registrar\u2019s Academic Calendar each semester. First, double-check with FSU Financial Aid. Then, watch this video for instructions. 7.\tHow can I sign up for the Foreign Language placement test? A.\tSign up here: https://www.registerblast.com/fsu/Exam/List B.\tMore information on Foreign Language Exemption & Placement: https://www.modlang.fsu.edu/students/undergraduate-advising/exemption-placement Graduation 1.\tI didn\u2019t apply for graduation but am supposed to graduate this semester! How can I do that? A.\tSee the upper division advisor for a Graduation Clearance form, then contact the College of Arts & Sciences at as-advising@fsu.edu to ask to be late-added to the graduation list. 2.\tI applied for graduation. What am I supposed to do now? A.\tGo through the Graduation Checklist on the Registrar\u2019s page: http://registrar.fsu.edu/graduation/checklist/ . Complete your Financial Aid exit interview and CS department exit surveys (part 1 and part 2) and you should be good to go. Complete your classes with a C- or better.", "document_id": 287597}]}, {"paragraphs": [{"qas": [{"question": "When do graduate students need to register for thesis credits?", "id": 158356, "answers": [{"answer_id": 223000, "document_id": 287603, "question_id": 158356, "text": "each term in which a substantial amount of work is being done on the the thesis/dissertation,", "answer_start": 355, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "University, College & Department Rules | University, College & Department Rules University & College Rules Please see the FSU Graduate Bulletin (hard copy or on-line) for more details. The following are rules that apply from the college &/or university: Students in the thesis master\u2019s program or PhD program must register for thesis/dissertation credits each term in which a substantial amount of work is being done on the the thesis/dissertation, even if the minimum of six (6) semester hours of thesis, or 24 semester hours of dissertation, has already been met. Students who have completed the required course work and who continue to use campus facilities and/or receive faculty supervision but who have not made a final thesis/dissertation submission shall include in the required full-time load two (2) hours of thesis/dissertation. Students who have left the campus must register for at least two (2) semester hours of thesis or dissertation credit per term as long as they are receiving faculty supervision. Students must register for at least one (2) semester hours of thesis or dissertation credit in the final term in which a degree is granted even if ALL the requirements for the degree have been completed in previous semesters. This is to cover the costs of manuscript clearance and final degree clearance. Any work with the major professor, committee members or use of university facilities would require registration for two (2) hours of thesis or dissertation. Twelve (12) semester hours per semester constitutes a full-time load for graduate students and fellowship holders in the university. However, nine (9) semester hours is considered a full-time load in the Computer Science department for international students and students with an assistantship. International students must obtain the corresponding form from International Studies to be signed to verify this. The maximum number of hours which a graduate student may carry without special permission is fifteen (15). A heavier load requires approval by the dean. Students who have been out of school (i.e. not registered for) two or more consecutive semesters (including summer) must submit an application for readmission to the readmissions section of the Office of the University Registrar. This application must be submitted at least 60 days prior to the beginning of the term for which readmission is desired. International students are required to be full-time students fall and spring semesters but not during summer unless summer is the first semester for which they are on campus. The major professor of a doctoral student in candidacy must submit a PhD progress report each year. This can be done via the department by completing this on-line document and submitting it to the CS Director of Graduate Studies. This is completed in January of each year. Once admitted to candidacy, a \u201cDoctoral Supervisory Committee\u201d form and a \u201cAdmission to Candidacy\u201d form must be completed and filed with the department Graduate Coordinator. Such forms are available from the Graduate Coordinator or Director of Graduate Studies. A doctoral student must be admitted to candidacy at least six (6) months prior to the granting of the degree. The Office of Graduate Studies requires notification of thesis/dissertation defense two weeks prior to the defense. It further requires that a doctoral student submit a completed copy of the dissertation to the doctoral committee at least four (4) weeks prior to the defense. See GradSpace on Canvas for deadlines. An electronic version of a completed thesis or dissertation must be submitted to the university. During the first two weeks of the term in which a candidate expects to receive a degree, application should be made for a diploma at the office of the University Registrar. If a candidate previously filed for a diploma but did not receive the degree, the application must be repeated. Additional Department Rules The department extends the University policy about thesis/dissertation hours to include students who are working on a master\u2019s project. Thus, a student who is using University resources or receiving faculty supervision is required to register for at least two (2) hours of project even if the course requirements are complete. Each graduate student is required to meet with his or her advisor at least once per semester. The department advising form is to be completed at each such meeting and should be returned to the Graduate Coordinator in 203 Love. The forms will remain in the student\u2019s file until graduation and will be used as part of the graduation check. Advisors and students are advised to keep copies for their records. A graduate student is automatically dropped from the graduate program after three or more U\u2019s in any graduate course. The department has a guideline that a student will only receive a S\u00a0(satisfactory) for a CGS5xxx course for an undergraduate prerequisite when the student achieves a B- or better in the equivalent undergraduate course. Many fellowships have load requirements that are higher than our departmental requirements. In such cases, the fellowship rules supersede those of the department. It is the responsibility of the major professor of the student doing a project, thesis, or dissertation to submit to the director of graduate studies the names of the major professor and committee members as soon as such committee has been formed. This is necessary before signing up for project, thesis, or dissertation hours. Masters students doing the thesis or project option are usually restricted from taking Directed Independent Study courses CIS 5900 and CIS 6900. Rather, such students should take thesis or project hours, respectively. A student defending a project, thesis, dissertation or area paper is required to inform the graduate coordinator of the title and date, time and location of the defense at least two (2) weeks prior to the defense. It is not required by the department that the chair of Computer Science sign the signature page of the thesis or dissertation. Upon completion of a thesis, project or dissertation, a student must submit an electronic copy of such to the CS department webmaster. Additionally, theses and dissertations must be electronically submitted to the university. Graduate studies should be engaged as a full-time endeavor. Students who are supported on a qualifying assistantship are expected to be fully engaged with their studies. Additional employment or activity, especially outside the Program is discouraged to ensure timely completion of one\u2019s degree. Requests for additional or outside, employment or activity will be evaluated for conflicts of interest in accordance with the CBA. A PhD CS student cannot be admitted to the MS degree program if they already have a MS in Computer Science or MS in Computer Engineering from another institution. Note that a student must be admitted to the MS program before they can obtain an MS degree. Priority for continued departmental support will be given to students who are in good academic standing and are making timely progress towards completion of their degree. A graduate student who has completed all of the requirements for the degree can take additional courses, but will not be eligible for departmental support. Lower priority for support may be given to: (1) MS students who have been in the MS program for 2 full years; (2) PhD students with an MS from another institution who have (a) not passed the qualifying exam after 2 years, (b) not passed the qualifying and preliminary exams after 3 years, and (c) not completed the degree after 5 years; (3) PhD students starting with the BS or completed the MS at FSU who have (a) not passed the qualifying exam after 3 years, (b) not passed the qualifying and preliminary exams after 4 years, and (c) not completed the degree after 6 years. ALL graduate students must complete an Exit Survey before graduation. The minimum satisfactory progress of a CS PhD student is given at the following link: PhD Progress Milestones", "document_id": 287603}]}, {"paragraphs": [{"qas": [{"question": "Who is the graduate Academic Advisor?", "id": 158309, "answers": [{"answer_id": 222953, "document_id": 287596, "question_id": 158309, "text": "Daniel Clawson ", "answer_start": 1064, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "Advising | Advising Undergraduate Advising Currently, undergraduate advising for Computer Science is conducted remotely over Zoom for current FSU students. Summer 2021 Sessions A/B Drop/Add week (May 10-13): Advising is available on a drop-in basis only. Please log in to Campus Connect to check in on the virtual kiosk in order to be seen by an advisor. How to make an appointment: After Drop/Add, summer advising will be by appointment only. Current FSU students may make an appointment via Campus Connect. Log in to my.fsu.edu and click the \u201cCC\u201d icon at the top left, then \u201cSchedule Advising.\u201d Zoom links and meeting IDs are listed in advisor availability in CC. Amy Sanderson Advising First Academic Advisor Academic Advisor for Computer Science Phone: (850) 644-3768 Email: aesanderson [ at fsu dot edu ] Lauren Higbee Academic Program Specialist Junior/Senior Academic Advisor for Computer Science Phone: (850) 644-8700 Email: lhigbee [ at fsu dot edu ] Undergraduate Advising FAQ All FSU Students Students with Majors in the CS Department Graduate Advising Daniel Clawson Academic Program Specialist Graduate Coordinator Phone: (850) 644-4975 Email: clawson [ at cs dot fsu dot edu ]", "document_id": 287596}]}, {"paragraphs": [{"qas": [], "context": "Graduate Curriculum Committee Charter | Graduate Curriculum Committee Charter Graduate Curriculum Committee Organization and Charter Approved by GCC Vote October 7, 2009. Charter: The purpose of the Graduate Curriculum Committee is to act as the executive body of the department in matters relating to the\u00a0graduate curriculum, its degree programs and courses. The committee will proactively evaluate the\u00a0graduate curriculum, implement necessary changes and minor improvements, propose significant improvements for faculty decision, and respond to faculty, administration, staff and student issues on matters within its scope. The authority and decision making ability of this committee is derived from the Chair of the department. The committee is responsible for oversight of the\u00a0graduate curriculum, including approval of new course proposals, modifications to existing courses and textbook choices for all\u00a0graduate courses. The committee is also responsible for proposing changes to degree program requirements and for new\u00a0graduate degree and certificate programs to be approved by the faculty. Organization: The committee will be comprised of members of the faculty and staff of the Department of Computer Science. The Chair of the Department will appoint members to the committee and assign a Chair. Committee members will solicit and gather issues for discussion from faculty, staff and students and call meetings on an \u201cas-needed\u201d basis. Minutes will be kept and recommendations made to the Chair of the Department in writing. All proposed curriculum changes, other than those that are truly minor, shall be published to the Computer Science Faculty for consideration, discussion, and voting at a CS faculty meeting. Minority reports may be attached to committee proposals by any member of the committee. Member Responsibilities: Committee Chair: The Department Chair will appoint The Chair of the Committee. The Committee chair shall call meetings, assign individuals to sub-committees, and establish procedures and guidelines for the assessment of individual topics assigned to the subcommittees. Committee Members: Each person assigned as a member of the committee shall participate in meetings called by the Chair of the Committee. It is the responsibility of each member to make recommendations to the committee on potential curriculum modifications and to keep abreast of current computer science and university curricula. Each committee member shall have voting rights on items of debate during committee meetings. Each committee member shall be afforded an equal opportunity to discuss matters during regular committee meetings. A majority vote of all members of the committee is required on all actions recommended for adoption by the department, except that 2/3 supermajority of all members of the committee is required to modify this Organization and Charter document. Policy Generation: In order to foster respect for the proposals generated by this committee, the following procedural guidelines will be followed: The committee will maintain a well publicized method via which members of the department may make requests and recommendations regarding curriculum changes. Specifically, a textbook change request form will be provided on the department web site. Faculty may send email to the chair of the committee with suggestions for curriculum changes. Committee meeting times and locations will be announced to the faculty and advising staff via email well in advance of such meetings and attendance is open to all. Prior to the formal submission of proposed significant changes to the Chair and faculty for consideration, the committee will publish to the faculty and advising staff, in a regular and well publicized manner, a draft proposal or proposals. The committee shall then allow a minimum of 10 working days for consideration and comment. Thereafter, a further meeting shall be held to discuss the concerns of the Computer Science community and, if possible, a final vote taken. Coincident with the submission (in writing) of formal proposals (and any minority reports) to the Chair and faculty for consideration, the formal proposal shall be published to the advising staff and student ACM representative for consideration and comment. Other Committee Duties and Responsibilities: Apart from addressing ongoing concerns brought up by the Department Chair and faculty regarding the\u00a0graduate curriculum, the committee shall also have routine responsibilities as described below: Yearly Review: Each year, the committee will meet within the first 30 days of the fall term and review the current state of the\u00a0graduate curriculum, with a a focus on currency of the program within the context of the ever-changing field of computer science. Discussion of any proposed curriculum changes by the committee itself and of faculty suggestions of which committee members are aware will also be brought forward at this time.", "document_id": 287604}]}, {"paragraphs": [{"qas": [], "context": "Load Requirements for Graduate Students | Load Requirements for Graduate Students Rules of the College and University Certain rules are imposed on the department from higher authorities. Students in the thesis master\u2019s program or a Ph.D. program must register for thesis/dissertations credits each term in which a substantial amount of work is being done on the thesis/dissertation, even if the minimum of six (6) semesters hours of thesis has already been met. Students who have left the campus must register for at least two (2) semester hours of thesis or dissertation credit per term \u201cso long as they are receiving faculty supervision.\u201d [page 72 of the Graduate Bulletin] \u201cReturning students who \u2026 have been out of school for two or more consecutive terms (including the summer term) must submit an application for readmission to the readmissions section of the Office of the University Registrar. This application must be submitted at least 60 days prior to the beginning of the term for which readmission is desired.\u201d [ Graduate Bulletin ] Any international student on a visa who still claims to be a student is required by the US Immigration and Naturalization Service to be a full time student except on their last semester, and they can only have one last semester. \u201cTwelve (12) semester hours per semester constitutes a full-time load for graduate students and fellowship holders. A student who wishes to register for fewer than twelve (12) semester hours must have written approval from the academic dean prior to registration.\u201d [ Graduate Bulletin ] \u201cNine (9) semester hours is defined as a full-time load for graduate assistantship holders on a quarter-time appointment or larger. Academic deans may grant exceptions to this policy for teaching assistants in those departments which conform to national course load policies in their disciplines. To satisfy the residence requirement, however, a doctoral student must be enrolled for twenty-four (24) semester hours during any period of 12 consecutive months.\u201d [ Graduate Bulletin ] \u201cThe [maximum] number of hours which a graduate student may carry without special permission is fifteen (15). A heavier load may be permitted by the academic dean.\u201d [ Graduate Bulletin ] \u201cStudents must register for at least one (1) semester hour of thesis or dissertation credit in the final term in which a degree is granted. Nonthesis-type master\u2019s program students who have not previously registered for the comprehensive examination must do so the final term.\u201d [ Graduate Bulletin ] \u201cTo be eligible for Matriculation and Out of State waivers this summer, TAs and RAs must carry the following minimum course loads during the terms indicated: 13-week Session A 9 hours 6-week Sessions B or C (must be appointed for .50 FTE) 5 hours Combination of A & B or A & C terms 9 hours \u201d [Memo from the Dean of Arts & Sciences, 8 March 2002] Additional Departmental Rules The Department of Computer Science imposes the following additional student course load requirements. Since Summer 1997, the department checks registrations of graduate students, and cancels them if they do not meet the department\u2019s requirements. The department extends the University policy about thesis/dissertation hours to include students who are working on a master\u2019s project. That is, a student who is using University resources or taking up the time of a faculty member is required to register for at least 2 hours of thesis, dissertation, project, or DIS. The department formally recognizes only three categories of registration: Full Time, Part Time, and FEOTABD (means \u201cFully Employed, Out of Town, and All But Document\u201d, see definitions below). In short, only full-time students are entitled to any of the following departmental resources: Space allocation of any kind Telephone service Workstation (dedicated or shared) Printing service Copy service Access to departmental expense funds, for example to support travel Partial relaxation of this policy (items 1, 2, 3 on an as-available basis and items 4, 5 only for research-related material) may occur in summer, as long as the resources are otherwise unused, and for FEOTABD PhD students returning to finish a dissertation. The three categories, the required loads of students, and the privileges of students in each category are explained in more detail below. The Categories Full Time This category consists of all graduate students who are not in either of the other two categories. All TAs and RAs are in this category. Part Time This category consists of graduate students who have been formally admitted to part time status. The admitting paperwork must reside in the student\u2019s advising folder. To be admitted to part time status, the student must submit a memorandum to the department chair, in writing or email, containing the following items : A request to be admitted to Part Time status A statement that the applicant is employed full time as a computer professional The name of the employing entity and location The employment supervisor\u2019s name, address and phone number FEOTABD This category, \u201cFully Employed, Out of Town, and All But Document\u201d, consists of graduate students who meet ALL of the following criteria: All requirements for the degree have been completed, except for the defense of the document (Dissertation, Thesis, or Project) No on-campus services will be used, except for interaction with university personnel on the day (or two) of the defense Computing facilities may be accessed remotely, but no on-campus services such as printing, library, major professor office or other space use, etc, are expected to be used. The Requirements Full Time students must register for nine (9) hours of graduate computer science credits each Fall and Spring semester and five (5) hours each summer semester in which they are using FSU facilities. Part Time students must register for three (3) hours of graduate computer science credits each semester in which they are using FSU facilities. FEOTABD students must register for one (1) hour of Dissertation, Thesis, or Project every semester. One Exception In the last semester, a student may register for as little as two hours. Note, however, that a student may have only one last semester . In the event that the student invokes this exception one semester and does not complete that semester, it cannot be repeated the following semester. Fellows Many fellowships have load requirements that are higher than our departmental requirements. In such cases, the fellowship rules supersede those of the department. Special Rules for Summer Only If you are not on assistantship/fellowship, then If you are not using ANY university resources (including access to faculty), then you are not required to register at all. Most people who are in the middle of a thesis, project, or dissertation are not likely to be in this category since you will be continuing your contact with your major professor. If you are using some type of resources, then you need to register for something. If working on a thesis or dissertation, you should register for at least 2 hrs of thesis/diss. If working on a project, you should register for at least one hour of project. If not doing any of the above, you should register for something (e.g., a class or maybe a DIS). This could be as little as 1 hr. In particular, this means it is OK if you want to just sign up for one course this summer (if not on waivers). Remember that if it\u2019s your last term, it is OK to register for as little as 1 hr (1 hr of thesis, diss, or project) \u2026 plus only whatever else you need to graduate. If you have any questions about this, please contact the Director of Graduate Studies.", "document_id": 287606}]}, {"paragraphs": [{"qas": [{"question": "What are the prerequisites for Artificial Intelligence?", "id": 161782, "answers": [{"answer_id": 226276, "document_id": 287608, "question_id": 161782, "text": "Prerequisite : COP 4530", "answer_start": 1150, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}, {"question": "Are there any prerequisites for CGS 5268?", "id": 161841, "answers": [{"answer_id": 226335, "document_id": 287608, "question_id": 161841, "text": "Prequisite: CDA 3100 ", "answer_start": 6361, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}, {"question": "What is the course prefix for Computer Programming?", "id": 161769, "answers": [{"answer_id": 226252, "document_id": 287608, "question_id": 161769, "text": "COP ", "answer_start": 269, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}, {"question": "What does CDA 5125?", "id": 161797, "answers": [{"answer_id": 226291, "document_id": 287608, "question_id": 161797, "text": "This course covers systems issues in parallel and distributed systems. Topics include parallel computer architectures, parallel system models, parallel programming paradigms, performance monitoring and optimization techniques, compilation techniques for parallel architectures, communication library implementations, and software/hardware fault tolerance techniques. ", "answer_start": 2341, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}, {"question": "What is CIS?", "id": 161774, "answers": [{"answer_id": 226268, "document_id": 287608, "question_id": 161774, "text": "Computer and Information Systems", "answer_start": 195, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}, {"question": "What is the course title for CGS 5425?", "id": 161849, "answers": [{"answer_id": 226343, "document_id": 287608, "question_id": 161849, "text": "Object-Oriented Programming with Data Structures", "answer_start": 7312, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}, {"question": "What does CEN 5000 cover?", "id": 161807, "answers": [{"answer_id": 226301, "document_id": 287608, "question_id": 161807, "text": " A survey of techniques and tools representing the transition from database management to knowledge management; database architecture and models; fuzzy databases; construction of knowledge bases. ", "answer_start": 3390, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}, {"question": "What is CEN 5035?", "id": 161808, "answers": [{"answer_id": 226302, "document_id": 287608, "question_id": 161808, "text": "Software Engineering ", "answer_start": 3596, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "Graduate Courses | Graduate Courses Definition of Prefixes CAP \u2013 Computer Applications CDA \u2013 Computer Design/Architecture CEN \u2013 Computer Engineering Software CGS \u2013 Computer General Studies CIS \u2013 Computer and Information Systems (special topics) CNT \u2013 Computer Networks COP \u2013 Computer Programming (languages, data structures, software systems, operating systems, compiling) COT \u2013 Computer Theory Special Course Offerings There are various special courses offered every term. Special topics courses may evolve into regularly offered courses if they are successful, but they may also be once-only offerings. The latter is especially true if the enrollment of the first offering is low. 5000 Level Courses CAP 5415 Principles and Algorithms of Computer Vision (3). Prerequisites: COP 4530 This course covers the basic computational principles and algorithms to extract information from images and image sequences. Topics include imaging models, linear and non-linear filtering, edge detection, stereopsis and motion estimation, texture modelling, segmentation and grouping, and deformable matching for recognition. CAP 5605. Artificial Intelligence (3). Prerequisite : COP 4530 . Introduction, representing knowledge, controlling attention, exploiting constraints, basic LISP programming, basic graph searching methods, game-playing and dealing with adversaries, understanding vision, theorem proving by computer, computer programs utilizing artificial intelligence techniques. CAP 5638. Pattern Recognition (3). Prerequisite : Knowledge of probability and at least one programming language . Application of mathematical tools, in particular, probabilistic, algebraic, and linguistic tools, to problems in pattern recognition and classification. Feature selection procedures, syntactic pattern recognition. Applications of fuzzy set theory to pattern recognition and classification. CAP 5726. Introduction to Computer Graphics (3) . Prerequisite : COP 4530 . This course covers fundamental principles and algorithms underlying computer graphics, and also provides a brief introduction to openGL. The course is intended for computer-science graduate students who are interested in computer-graphics related careers or in learning and applying computer-graphics techniques. CDA 5125. Parallel and Distributed Systems (3). Prerequisite: COP 4610 . This course covers systems issues in parallel and distributed systems. Topics include parallel computer architectures, parallel system models, parallel programming paradigms, performance monitoring and optimization techniques, compilation techniques for parallel architectures, communication library implementations, and software/hardware fault tolerance techniques. CDA 5140. Fault Tolerance and Reliability (3). Prerequisite: CDA 5155 . Basic definitions; self-checking circuits; error detection measures; interconnection networks; test generation and testability; distributed fault tolerance systems; software fault tolerance; fault tolerance and VLSI; error recovery. CDA 5155. Computer Architecture (3). Prerequisite: CDA 3100 . Computer system components; microprocessor and minicomputer architecture; stack computers; parallel computers; overlap and pipeline processing; networks and protocols; performance evaluation; architecture studies of selected systems. CEN 5000. Knowledge Management and Data Engineering (3). Prerequisite: COP 5710 . A survey of techniques and tools representing the transition from database management to knowledge management; database architecture and models; fuzzy databases; construction of knowledge bases. CEN 5035. Software Engineering (3). Prerequisites: COP 4020, COP 4530, CEN 4021 . Survey of software engineering and detailed study of topics from requirement analysis and specification, programming methodology, software testing and validation, performance and design evaluation, software project management, and programming tools and standards. CEN 5055. Project Development (3). Prerequisites: CEN 5035. This course deals with the planning, design, validation and implementation of a large scale project using IEEE deliverables, state-of-the-art software engineering techniques, analysis and design project reviews and evaluations prior to implementation in the Graduate Software Project. CEN 5064. Advanced Software Design (3). Prerequisite: CEN 5035. This course concentrates on the design of software systems after requirements engineering has been completed. The course offers education in techniques such as architectural design, pattern integration, and re-factorings. CEN 5066. Software Engineering in Graphics (3). Prerequisite: CAP 4730 . Software engineering techniques as applied to graphical concepts based on ISO 7942, the Graphical Kernel Systems (GKS). Particular topics include binding times, concept coupling, segments, transformations, passive/active graphics, clipping. A class project is required. CEN 5526. Wireless & Mobile Computing (3). Prerequisites: None. This course introduces students to the design, implementation, and analysis of mobile systems and applications in various domains, including urban sensing, mobile healthcare monitoring, security and privacy, location-aware services, and vehicular computing. Integral to the course will be the course projects in which students develop mobile applications on mobile devices. Through the course projects, students gain hands-on experience on building mobile applications and validate their research ideas in practice. CEN 5720. Computer-Human Interaction (3). Prerequisite: COP 4530 . Systematic analysis of user needs and activities from the point of view of the actual user. Design and implementation of effective, user-friendly software. Methods of analysis. Performance and interface of programs. User anxiety and convenience. CGS 5267. Principles of Computer Organization (3). Corequisites: COP 3330 and MAD 2104. For graduate non-majors and graduate majors needing foundational work in computer science; credit may not be applied towards a graduate degree in computer science. Basic computer structure and design, register transfer and micro operations, central processor organization, micro programming, arithmetic processor design, input-output, memory organization, virtual memory, microprocessors and microcomputer architecture. CGS 5268. Principles of Computer Organization II (3). Prequisite: CDA 3100 . For graduate non-majors and graduate majors needing foundational work in computer science; credit may not be applied towards a graduate degree in computer science. Fundamental concepts in processor design, including datapath and control, pipelining, memory hierarchies, and I/O. CGS 5409. Object-oriented Programming in C++ for Non-majors (3). Prerequisite: COP 3014 -or a compatible course in C or C++ programming. Pre/co-requisite: COP 3353 For graduate non-majors and graduate majors needing foundational work in computer science; credit may not be applied towards a graduate degree in computer science. Topics include basics of C++ language, objects and classes, programming with classes, constructors and destructors, dynamic memory allocation, function and operator overloading, master classes, the class iostream, base and derived classes, and templates. May not be applied toward a degree in computer science. CGS 5425. Object-Oriented Programming with Data Structures (3). Prerequisites: COP 3330 , and MAD 2104. Pre/co-requisite: CDA 3100 . For graduate non-majors and graduate majors needing foundational work in computer science; credit may not be applied towards a graduate degree in computer science. Structured and object-oriented programming; invariant relations, stepwise refinement; text processing, internal sorting methods, linear tables, pointers and linked data structures, recursive programming and recursion elimination, sequential file processing; trees and graphs; program verification and running time analysis; application of concepts through programming projects. CGS 5426. Programming Language Concepts (3). Corequisite: COP 4530 . For graduate non-majors and graduate majors needing foundational work in computer science; credit may not be applied towards a graduate degree in computer science. A survey of programming languages and language features and an introduction to compilers. Languages to be discussed include FORTRAN, Pascal, Ada, PL/1, APL, and LISP. An oral presentation is required. CGS 5427. Algorithm Design and Analysis (3). Prerequisites: COP 4530 , MAD 3105-or-3107. Corequisites: STA4442 , STA4321 , or STA 3032 . For graduate non-majors and graduate majors needing foundational work in computer science; credit may not be applied towards a graduate degree in computer science. Techniques for the analysis of computer algorithms; examples of well-designed algorithms and associated data structures; principles of algorithm design and application to programming projects. CGS 5428. Relational Database Theory (3). Prerequisites: COP 3330 and MAD 2104 . For graduate non-majors and graduate majors needing foundational work in computer science; credit may not be applied towards a graduate degree in computer science. Basic file organization methods, indexed files, multi-key processing; architecture of database management systems; relational, hierarchical network, and semantic database models; normalization; distributed databases and file systems; practical use of a DBMS and the building of a database application. CGS 5429. Introduction to Computer Theory (3). Prerequisites: MAD 3105 . For graduate non-majors and graduate majors needing foundational work in computer science; credit may not be applied towards a graduate degree in computer science. Regular expressions; regular, context-free, context-sensitive, and unrestricted grammars; foundations of language theory; finite automata and linear grammars; pushdown automata; turing machines and non-solvability. CGS 5466. Programming for Non-Majors (3). Prerequisites: MAC 1140 . For graduate non-majors and graduate majors needing foundational work in computer science; credit may not be applied towards a graduate degree in computer science. Fundamental concepts and skills of programming in a high-level language. Flow of control: sequence, selection, iteration, subprograms. Data structures: arrays, strings, structs, ADT lists and tables. Algorithms using selection and iteration (decision making, finding maxima and minima, basic searching and sorting, simulation, etc.). Good program design using a procedural paradigm, structure and style are emphasized. Interactive and file IO. Testing and debugging techniques. CGS 5765. Principles of Operating Systems (3). Prerequisites: CDA 3100, COP 4530 . For graduate non-majors and graduate majors needing foundational work in computer science; credit may not be applied towards a graduate degree in computer science. Design principles of batch and multi-programming and time-sharing operating systems. Linking, loading, input-output systems, interacting processes, storage management, process and resource control, file systems. CGS 5935. Special Topics in Computer Science for Non-Majors (1-3). This course will offer special topics in Computer Science that are designed for non-Computer Science graduate students. ISC 5228. Monte Carlo Methods (3). This course provides an introduction to probabilistic modeling and Monte Carlo methods (MCMs) suitable for graduate students in science, technology and engineering. It provides an introduction to discrete event simulation, MCMs and their probabilistic foundations, and the application of MCMs to various fields. In particular, Markov chain MCMs are introduced as are the application of MCMs to problems in linear algebra and the solution of partial differential equations. CIS 5370. Computer Security (3). Prerequisites: COP 4610 or consent of instructor. Covers threats and attacks (such as computer viruses and Trojan horses), access control, entity authentication, covert channels, inference and database security, secure operating systems, network security, legal and ethics aspects, administering security, physical security, and TEMPEST. CIS 5371 Cryptography (3). Prerequisites: MAD 3105 . This course addresses issues of modern cryptography covering theory and practice. Algorithms such as the RSA, EIGamal and the digital Signature Standard are covered in depth. CIS 5900r. Directed Individual Study (1-9). (S/U grade only) May be repeated to a maximum of twelve (12) semester hours. CIS 5910r. Supervised Research (1-5). (S/U grade only.) Cannot be applied to the master\u2019s degree. May be repeated to a maximum of five (5) semester hours. CIS 5915r. Graduate Software Project(1-12). (S/U grade only.) A minimum of six (6) semester hours of credit is required. CIS 5920r. Colloquium (1). (S/U grade only.) Series of lectures given by faculty and visiting computer scientists. May be repeated up to a maximum of ten (10) semester hours. CIS 5930r. Selected Topics in Computer Science (1-3). May be repeated to a maximum of twelve (12) semester hours. CIS 5940r. Supervised Teaching (1-5). (S/U grade only.) May be repeated to a maximum of five (5) semester hours. CIS 5970r. Master\u2019s Thesis (1-12). (S/U grade only.) A minimum of nine (9) semester hours of credit is required. CIS 5949r. Internship in Computer Science (0\u20139). (S/U grade only.) Prerequisite: COP 4610 . This internship is a field placement in an approved industry or government entity having a significant information technology or computer science component. May be taken for variable credit and repeated with departmental approval. Credits do not count towards graduation. Successful completion requires satisfactory job evaluation and demonstration of educational value of placement via a paper. May be repeated to a maximum of thirty-six semester hours. CNT 5412. Network Security, Active and Passive Defenses (3). Prerequisites: COP 4530 , and MAD 2104 , or consent of instructor. Course covers defense of computer networks, investigation of threats to computer networks, network vulnerabilities, techniques for strengthening passive defenses, tools for establishing an active network defense, and policies for enhancing forensic analysis of crimes and attacks on computer networks. CNT 5415. Applied Computer and Network Security (3). In this course, students familiarize themselves with current and emerging threats to the security of computer systems and networks, including viruses, worms, and network intrusion; and with techniques for the prevention, detection, and recovery from such attacks, such as firewalls, intrusion detection systems, secure coding practices, and others. Attack and defense mechanisms are studied in a systematic way to develop students\u2019 practical and analytical skills to identify and correct or mitigate threats to computer systems and networks. CNT 5505. Data and Computer Communications (3). Prerequisite: CDA 3100 and COP 4610 . Overview of networks; data communications principles; data link layer; routing in packet switched networks; flow and congestion control; multiple access communication protocols; local area network protocols and standards; network interconnection; transport protocols; integrated services digital networks (narrowband and broadband); switching techniques and fast packet switching. CNT 5605. Computer and Network Administration (3). Prerequisite: COP 4610 . UNIX user commands and shell programming. Problem solving and diagnostic methods, system startup and shutdown, device files and installing devices, disk drives and file systems, NFS, NIS, DNS, send mail. Managing a WWW site, managing UNIX software applications, system security, performance tuning. Legal and professional issues, ethics and policies. CNT 5529. Wireless Networking (3). This course is intended to cover a wide spectrum of topics on wireless networks, including the physical layer, the medium access control layer, and the network layer. The focus is on understanding, implementing, and experimenting with various wireless networking technologies in different layers with software. COP 5385. HSM and Reactive Systems (3). Prerequisites: COP 4530, COP 4610 . Hierarchical state machines (HSM) are finite state machines with a behavioral inheritance hierarchy. HSM provide a theoretical model for event-driven (reactive) systems. The course studies this HSM model and introduces a framework for implementing reactive systems based on HSM models of systems. The use of HSM as an organizing principle for applications software, from desktop to real time, is studied. A range of applications is discussed and a student project is required. COP 5517. Generic Programming (3). Prerequisite: COP 4530. Generic Programming Principles and Techniques, including most of the following topics: Generic Containers; Function and Predicate Objects; Generic Algorithms; Mediation between containers and algorithms with iterators; Containers and Algorithms in the C++ STL Vectors, Lists, and Deques; Stacks, Queues, Priority Queues, Ordered Sets and Maps, Hashed Sets and Maps, Iterators and Iterator Adaptors, General algorithms, Set algorithms, Heap algorithms, Search algorithms, and Sort algorithms; Extending the STL; Graphs, Digraphs, and Graph Algorithms; Policy Based Design; Partial template specialization; Traits; Typelists; Design Pattern Implementations: Singletons; Smart Pointers; Abstract Factory; and related special topics. COP 5570. Concurrent, Parallel, and Distributed Programming (3). Prerequisite: COP 4610 . UNIX and C standards, file I/O, file access and attributes, directories, the standard I/O library, systems administration files, the process environment, process control, process relationships, signals, terminal I/O, daemon processes, interprocess communication, and pseudo terminals. COP 5611. Advanced Operating Systems (3). Prerequisites: CDA 3100, COP 4610, and introductory probability or statistics . Design principles of batch, multiprogramming, and time-sharing systems; distributed systems; problems of concurrency. COP 5621. Compiler Construction (3). Prerequisites: CDA 3100, COP 4020, COT 4420 . Introduction to compiling, elements of language theory, syntax-directed translation, lexical analysis, symbol tables, backtrack parsing, precedence parsing, LR(k) parsing, LL(k) parsing, intermediate code generation, code optimization, code generation, error detection and recovery. COP 5641. Kernel and Device Driver Programming (3). Prerequisite: COP 4610 , COP 5570 , or permission of instructor. Internals of the Linux operating system kernel, including virtual and physical memory management, scheduling, and device drivers. Kernel modules, hardware interfaces, char and block devices, kernel debugging, interrupt handling, memory mapping. Laboratory exercises modifying example modules, project developing a new device driver. COP 5642. RealTime Systems Theory and Practice (3). Prerequisite: COP4610 or COP 5570 . Theoretical foundations and practical techniques for the design and implementation of real time computer systems. Topics include applicable scheduling theory, the use of computers for controlling real time processes, the use of a real-time operating system. Laboratory work includes writing software to control a physical device with hard timing constraints, and analysis of scheduling performance by simulation. A term project is required. COP5659. Mobile Programming (3). Prerequisite: COP 4530 . This course teaches students how to program mobile devices. Students use event-based models to write and deploy an intent based application using a mobile computing software framework. May be repeated to a maximum of nine semester hours. COP 5725. Database Systems (3). Prerequisites: COP 4710, COP 4610 . Use of a generalized database management system; characteristics of database systems; hierarchical, network, and relational models; file organizations. COP 5818. Distributed Applications Development (3). Prerequisite: COP 3252 . Programming of distributed web applications using Java database connectivity, servlets, Java server pages, remote method invocation, and enterprise Java beans; use of the Sun Microsystems Java 2 Enterprise Edition development platform either directly or through an integrated development environment such as IBM\u2019s websphere. COP 6622. Advanced Topics in Compilation (3). Prerequisite: COP 5621 . The course covers attribute grammars and attribute grammar processors, formal methods of semantic analysis, generalized tree transformers, code selection, analysis and optimization, as well as error analysis and recovery. COT 5310. Theory of Automata and Formal Languages (3). Prerequisites: COP 4020 , COT 4420 . Formal models of computation; automata; formal languages, their relationships, decidable and undecidable problems. COT 5315. Programming Language Foundations (3). Prerequisites: COP 4020 , and MAD 3105 . Conceptual subtleties in programming languages; formal specification of syntax and semantics; issues in the design and implementation of programming languages. COT 5405. Advanced Algorithms (3). Prerequisites: COP 4530. Algorithms, formal proofs of correctness, and time complexity analysis for: network flow problems, approximation of NP hard combinatorial optimization problems, parallel algorithms, cache-aware algorithms, randomized algorithms, computational geometry, string algorithms, and other topics requiring advanced techniques for proof of correctness or time/space complexity analysis. COT 5410. Complexity of Algorithms (3). Prerequisites: COP 4530 , and COT 4420 . Formal methods for the analysis of algorithm complexity, application to specific algorithms, lower bounds, asymptotically optimal algorithms, Reducibilities, NP completeness, and other classifications of \u201chard\u201d problems. COT 5507. Analytical Methods in Computer Science (3). Prerequisite: COP 4530 . This course teaches computer science students the fundamental discrete mathematics required for serious graduate work in Algorithms and Theoretical Computer Science. It specifically covers topics in recurrent problems, sums, integer functions, elementary number theory, binomial coefficients, special numbers, and generating functions . COT 5540. Logic for Computer Science (3). Prerequisite: COT 4420 . Syntax, semantics, and proof theory of propositional logic and first order languages; prenex normal form; Gentzen systems; resolution for propositional logic; elements of PROLOG and program verification. COT 5715. Random Number Generation (3). Prerequisite: COT 4531 . This course provides a graduate level examination of all aspects of random number generation as used in simulation. Specifically, the course concentrates on pseudorandom number generation and quasirandom number generation theory and practice. ISC 5318. High Performance Computing (3). Prerequisites: COP 4020 . This course introduces high-performance computing, the use of parallel supercomputers, computer clusters, as well as software and hardware in order to speed up computations. Students learn to write faster code that is highly optimized for modern multi-core processors and clusters, using modern software-development tools and performance analyzers, specialized algorithms, parallelization strategies, and advanced parallel programming constructs. ISC 5228. Monte Carlo Methods (3). Prerequisites: ISC 5305 , MAC 2311 , and MAC 2312 . This course provides an introduction to probabilistic modeling and Monte Carlo methods (MCMs) suitable for graduate students in science, technology, and engineering. It provides an introduction to discrete event simulation, MCMs and their probabilistic foundations, and the application of MCMs to various fields. In particular, Markov chain MCMs are introduced, as are the application of MCMs to problems in linear algebra and the solution of partial differential equations. 6000 Level Courses CAP 6417. Theorectical Foundations of Computer Vision (3). Prerequisite: CAP 5415 . This course covers theoretical foundations of computer vision. By formulating vision as an inference process, approaches to vision are presented and analyzed systematically. Topics include Marr\u2019s computational vision paradigm, regularization theory, Bayesian inference framework, pattern theory, and visual learning theories. CIS 6900r. Directed Individual Study (1-12). (S/U grade only.) May be repeated to a maximum of twenty-four (24) semester hours. CIS 6930r. Advanced Topics in Computer Science (1-3). May be repeated to a maximum of twelve (12) semester hours. CIS 6935r. Advanced Seminar in Computer Science (S/U grade only) (1). May be repeated to a maximum of eight (12) semester hours. CIS 6980r. Dissertation (1-12). (S/U grade only.) COP 6622. Advanced Topics in Compilation (3). Prerequisite: COP 5621 . In-depth study of the following topics: attribute grammars and attribute grammar processors, formal methods of semantic analysis, generalized tree transformers, code selection, analysis and optimization, and error analysis and recovery. 8000 Level Courses CIS 8962r. Doctoral Qualifying Examination (0). (P/F grade only) CIS 8964r. Doctoral Preliminary Examination (0). (P/F grade only.) CIS 8966r. Master\u2019s Comprehensive Examination (0). (P/F grade only.) CIS 8974. Master\u2019s Project Defense (0). (P/F grade only.) CIS 8976r. Master\u2019s Thesis Defense (0). (P/F grade only.) CIS 8985r. Defense of Dissertation (0). (P/F grade only.)", "document_id": 287608}]}, {"paragraphs": [{"qas": [{"question": "Who can a master's student get help from for their project?", "id": 161906, "answers": [{"answer_id": 226399, "document_id": 287613, "question_id": 161906, "text": " The student is allowed and encouraged to solicit review and comment, including editorial suggestions, especially from the major professor and supervisory committee members. ", "answer_start": 2469, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "Master\u2019s Project | Master\u2019s Project The master\u2019s project typically has the following parts: creation of an original software artifact, adequate to demonstrate the mastery of software development; writing of an original paper, adequate to demonstrate mastery of technical writing; presentation of an oral report of the project, adequate to demonstrate mastery of public speaking. In judging whether these three deliverables demonstrate adequate mastery, the supervisory committee shall consider whether the depth of technical knowledge and level of skill demonstrated by the student are consistent with the expectations for professional employment. The scope and difficulty of the project should be greater than that of a term paper for a course. The technical depth should be appropriate for the capstone of a graduate degree. In particular, it should require study of one or more areas of computer science beyond what is covered by the required graduate and undergraduate courses. The software may be an end product or be incidental to a piece of experimental research (e.g. a simulator, or implementation of an algorithm for performance testing). The originality need not be fundamental. Creativity at a fundamental level, such as in the design of algorithms and data structures, or in the concept of the application, is desirable but not required. It is acceptable to produce \u201cyet another\u201d implementation of a type of software that has been done before. However, in the latter case it is essential that the student first do a study of prior work and document that study with references and analysis, showing how the new implementation incorporates lessons learned from prior practice. The project document shall always include a description of the project adequate to inform the committee members of the motivation, objectives, scope, methods, and results. It shall ordinarily cover the full software development cycle, including requirements analysis, software design, test design, validation testing, and performance analysis. This project description shall have the form of a technical report. If the software is an end product, the project document shall also include user and maintenance documentation. The latter two shall ordinarily be separate from the project description, though they may be presented as appendices. The work submitted for the master\u2019s project, including both the code and the document, is required to be the individual work of the student. The student is allowed and encouraged to solicit review and comment, including editorial suggestions, especially from the major professor and supervisory committee members. However, the student and advisor should keep in mind that by awarding a master\u2019s degree in computer science the department is certifying that the student has mastered technical English writing to a level that is acceptable for a professional. If the master\u2019s project software is part of a larger software development or research project, it may make use of other software components that were not written by the student, but such other components shall be clearly identified and separated from the contributions of the student. Further, if the master\u2019s project is part of a larger project, the organization of the larger project must allow the master\u2019s student a high degree of autonomy and individual responsibility for a well defined and clearly partitioned segment of the project, from the inception to completion of the segment. The application of the above criteria to the project is up to the individual student\u2019s supervisory committee. The committee shall be formed by the start of the project, and registered with the Director of Graduate Studies. All committee members shall be given an early opportunity to review the scope and technical approach of the project, before work has progressed too far to make whatever modifications may be needed to obtain their approval. The project defense is primarily a test of the student\u2019s oral communication skills. When scheduling the defense, the student shall allow at least ten days to two weeks for review of the final paper by the committee after it has been approved by the major professor. It is the responsibility of the student to schedule the defense and reserve the room and the PC cart through the Graduate Coordinator. Once the project has been defended and all modifications suggested by the major professor and committee have been made, an electronic version must be submitted to the webmaster. Appropriate copyright notices and authorizations should be given to allow the department to distribute the document. The first page of the report should have the student author\u2019s name, the title, and the names of the major professor and committee members.", "document_id": 287613}]}, {"paragraphs": [{"qas": [], "context": "MS (Course-Based Option) Graduation Check List | MS (Course-Based Option) Graduation Check List Below is a brief checklist of items an MS (Course-Based Option) student should complete before graduation: Degree Requirements Checklist a total of at least 10 courses (30 hours) at or above the 5000 level excluding supervised teaching, supervised research, seminars, DIS, CIS 5915, CIS 5970 of the 10 courses, there must be at least 6 with a grade of B+ or better of the 10 courses, there must be at least one course from each of the core areas: Software, Systems, Theory register with the Director of Graduate Studies, at most once, for CIS 8966, MS Comprehensive Exam (withdraw from all but one instance of this if you have registered more than once; withdraw from CIS 8974 or CIS 8976 if you have registered for either). register for graduation at the Registrar\u2019s Office during the second and third weeks of the semester in which you wish to graduate. Graduation Checklist Complete the departmental online EXIT survey", "document_id": 287615}]}, {"paragraphs": [{"qas": [], "context": "MS in Computer Science | MS in Computer Science The number of hours for the graduate degree as described in this web page will be effective in Summer 2018. In all majors, a student must complete thirty semester hours in computer science courses numbered 5000 or above, including approved CIS 5930 and CIS 6930. At most, one course outside the department at the 5000 or 6000 levels can also count towards the 30 hours if approved by the department chair after the major professor justifies why the outside course is important for the student\u2019s research. Supervised teaching, supervised research, seminars, directed individual study, internship, and courses with prefix CGS are excluded. For the Computer Science major, at least one course from each of the following three core areas must be taken to satisfy the area requirements: Software COP 5570 Concurrent, Parallel, and Distributed Programming (3) COP 5621 Compiler Construction (3) COP 5725 Database Systems (3) Systems CDA 5155 Computer Architecture (3) CNT 5505 Data and Computer Communications (3) COP 5611 Advanced Operating Systems (3) Theory COT 5310 Theory of Automata and Formal Languages (3) COT 5405 Advanced Algorithms (3) COT 5507 Analytical Methods (3) Computer Science Major MS CS students must complete the undergraduate prerequisites on the following page before graduating, and will likely have to complete a subset of these courses before being admitted to the program. Undergraduate Pre-requisites for MS CS degree . Cybersecurity Major Cybersecurity students must complete the undergraduate prerequisites on the following page before graduating, and will likely have to complete a subset of these courses before being admitted to the MS Cybersecurity major. Undergraduate Pre-requisites for MS Cybersecurity degree . A student in the Cybersecurity major is required to take the following courses: CIS 5370 Computer Security (3) CIS 5371 Cryptography (3) CNT 5412 Network Security, Active and Passive Defenses (3) CNT 5505 Data and Computer Communications (3) CNT 5605 Computer and Network Administration (3) CIS 5627 Offensive Computer Security (3) CAP 5137 Software Reverse Engineering and Malware Analysis (3)) This major also includes the award of the Information Security Specialist Certificate . Students are not required to apply to the general CS MS degree beforehand and are allowed to directly apply to the Cybersecurity Major MS program. Computer Network and System Administration Major CNSA students must complete the undergraduate prerequisites on the following page before graduating, and will likely have to complete a subset of these courses before being admitted to the MS CNSA major. Undergraduate Prerequisites for the MS CNSA Degree Program The following courses are the core requirements for the MS CNSA degree. Required Computer Science Courses for the MS CNSA Degree Program CDA 5155 Computer Architecture (3) CNT 5412 Network Security, Active and Passive Defenses (3) CNT 5505 Data and Computer Communications (3) CNT 5605 Computer and Network Administration (3) COP 5611 Advanced Operating Systems (3) COP 5570 Concurrent, Parallel, and Distributed Programming (3) In addition to the required courses, the CNSA program has an experience requirement, and students are required to complete system administration intern-ship(s) to complete this requirement. The CNSA program works with various departments and colleges on the FSU campus to provide local system administration intern-ships for students. It is possible for the MS CNSA students to obtain an NSA-approved training certificate, which facilitates graduates from the program in getting employment with a federal government agency or a government contractor after they graduate. The MS CNSA student can use two of the available elective courses to take COP 5725, Database Systems, and CIS 5370, Computer Security to fulfill the requirements. However, this certificate is limited to U.S. citizens only. A description of the training certificate is available at http://www.cs.fsu.edu/academics/certificate and in the section of Requirements for NSA Training Certificate below.", "document_id": 287617}]}, {"paragraphs": [{"qas": [{"question": "Who can be part of a graduate student's committee?", "id": 161952, "answers": [{"answer_id": 226444, "document_id": 287616, "question_id": 161952, "text": "graduate faculty members ", "answer_start": 4256, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}, {"question": "Which degree options require an advisory committee?", "id": 161949, "answers": [{"answer_id": 226441, "document_id": 287616, "question_id": 161949, "text": "the thesis and project options", "answer_start": 3837, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "MS degree information. | MS degree information. Graduate Student Handbook \u2013 MS Degrees The department offers MS in Computer Science and MS in Cyber Criminology. MS in Computer Science The MS in Computer Science has three majors: Computer Science Major, Cybersecurity Major, and Computer and Network and System Administration Major. A student must select one of the three options of thesis, project, or course-based to complete the degree. Each option has a specific number of required courses as well as other requirements, as described below. Thesis Option A student under the thesis option must take seven (7) courses (21 semester hours) at or above the 5000 level, plus at least nine (9) hours of CIS 5970r, Thesis. At most nine (9) hours of CIS 5970r can be counted toward the required 30 hours for the MS degree. The seven courses must include at least one course from each area as described above. Approved offerings of CIS 5930/6930 Special Topics are counted towards the 7 courses, but supervised teaching, supervised research, seminars, DIS and CIS 5915 (project hours) cannot be included. The thesis is defended by registering for CIS 8976 Master\u2019s Thesis Defense (0). The student in the thesis option is required to propose and create an individual thesis topic of appropriate focus, size and complexity and to write a document discussing it. The thesis proposal must be approved by the supervisory committee. The thesis is to be written in accordance with the University standards. Upon completion, a thesis must be successfully defended to the department in an open forum, and be unanimously approved by the major professor and supervisory committee. An electronic version of the thesis must be submitted to the university as well as the CS webmaster, and CS graduate coordinator. Project Option A student under the project option must take eight (8) courses (24 semester hours) at or above the 5000 level, plus at least six (6) hours of CIS 5915r Graduate Software Project. At most six (6) hours of CIS 5915 can be counted toward the required 30 hours for the MS degree. The eight courses must include at least one from each of the areas described above. Approved offerings of CIS 5930/6930 Special Topics are counted towards the 8 courses, but supervised teaching, supervised research, seminars, DIS, and CIS 5970 (thesis hours) cannot be included. The student must also register for CIS 8974(0) to defend the project. The student in the project option is required to propose and create an individual project of appropriate focus, size, and complexity and to write a document discussing it. The project proposal must be approved by the major professor and supervisory committee. The project document should be written with direction from the major professor and supervisory committee and in accordance with the description given at Master\u2019s Project . Upon completion, both the project and the document must be successfully defended to the department in an open forum with unanimous approval from the major professor and supervisory committee. An electronic version of the project must be submitted to the CS webmaster, and CS graduate coordinator. Course-based Option A student under the course-based option must take ten (10) courses (30 semester hours) at or above the 5000 level, including at least one course from each of the three core areas described above. Approved CIS 5930/6930 Special Topics are counted towards the 10 courses, but supervised teaching, supervised research, seminars, DIS, CIS 5970 and CIS 5915 cannot be included. A student must earn a grade of B+ or higher for at least 6 of the 10 courses in order to graduate in the course-based option. The student must also register for CIS 8966, Master\u2019s Comprehensive Exam (0) the semester of graduation (effective Spring 2005). Supervisory Committee For the thesis and project options, it is the student\u2019s responsibility to form a supervisory committee regardless of his or her selected major. No later than the start of work on the thesis or project, the student will secure the consent of an eligible computer science faculty member to serve as the major professor. In consultation with the major professor, the student will secure the consent of at least two additional graduate faculty members to serve as the supervisory committee, chaired by the major professor. Major requirements In all majors, a student must complete thirty semester hours in computer science courses numbered 5000 or above, including approved CIS 5930 and CIS 6930. At most, one course outside the department at the 5000 or 6000 level can also count towards the 30 hours if approved by the department chair after the major professor justifies why the outside course is important for the student\u2019s research. Supervised teaching, supervised research, seminars, directed individual study, internship, and courses with prefix CGS are excluded. For the Computer Science and Cybersecurity majors, at least one course from each of the following three core areas must be taken to satisfy the area requirements: Software COP 5570 Concurrent, Parallel, and Distributed Programming (3) COP 5621 Compiler Construction (3) COP 5725 Database Systems (3) Systems CDA 5155 Computer Architecture (3) CNT 5505 Data and Computer Communications (3) COP 5611 Advanced Operating Systems (3) Theory COT 5310 Theory of Automata and Formal Languages (3) COT 5405 Advanced Algorithms (3) COT 5507 Analytical Methods (3) Computer Science Major MS CS students must complete the undergraduate prerequisites in the following page before graduating, and will likely have to complete a subset of these courses before being admitted to the program. Undergraduate Pre-requisites for MS CS degree . Cybersecurity Major Cybersecurity students must complete the undergraduate prerequisites in the following page before graduating, and will likely have to complete a subset of these courses before being admitted to the MS Cybersecurity major. Undergraduate Pre-requisites for MS Cybersecurity degree . A student in the Cybersecurity major is required to take the following courses, some of which (*) also satisfy the area requirements: CIS 5370 Computer Security (3) CIS 5371 Cryptography (3) CNT 5412 Network Security, Active and Passive Defenses (3) CNT 5505 Data and Computer Communications* (3) CNT 5605 Computer and Network Administration (3) plus one of the following courses: COP 5570 Concurrent, Parallel, and Distributed Programming* (3) COP 5611 Operating Systems* (3) COT 5310 Theory of Automata and Formal Languages* (3) COT 5405 Advanced Algorithms* (3) Computer Network and System Administration Major CNSA students must complete the undergraduate prerequisites in the following page before graduating, and will likely have to complete a subset of these courses before being admitted to the MS CNSA major. Undergraduate Prerequisites for the MS CNSA Degree Program The following courses are the core requirements for the MS CNSA degree. Required Computer Science Courses for the MS CNSA Degree Program CDA 5155 Computer Architecture (3) CNT 5412 Network Security, Active and Passive Defenses (3) CNT 5505 Data and Computer Communications (3) CNT 5605 Computer and Network Administration (3) COP 5611 Advanced Operating Systems (3) COP 5570 Concurrent, Parallel, and Distributed Programming (3) In addition to the required courses, the CNSA program has an experience requirement, and students are required to complete system administration intern-ship(s) to complete this requirement. The CNSA program works with various departments and colleges on the FSU campus to provide local system administration intern-ships for students. It is possible for the MS CNSA students to obtain an NSA-approved training certificate, which facilitates graduates from the program in getting employment with a federal government agency or a government contractor after they graduate. The MS CNSA student can use two of the available elective courses to take COP 5725, Database Systems and CIS 5370, Computer Security to fulfil the requirements. However, this certificate is limited to U.S. citizens only. A description of the training certificate is available at http://www.cs.fsu.edu/academics/certificate and in the section of Requirements for NSA Training Certificate\u009d below. Masters in Cyber Criminology Admissions Requirements Students pursuing the MS in Cyber Criminology (MS CC) degree will be admitted to and graduate from the Computer Science Department. Thus, the minimal admissions requirements are (1) an undergraduate GPA of no less than 3.0 and (2) a score of 1000 or greater on the combined verbal and quantitative portions of the GRE. Degree Requirements The initial track for the MS CC degree will be coursework only. The general degree requirements will include 3 graduate criminology courses, 6 graduate computer science (CS) courses related to information assurance and computer security and 1 additional criminology or CS course for a total of 30 hours. In addition, MS CC students will have to complete certain undergraduate prerequisites, shown below, before graduating, and will likely have to complete a subset of these courses before being admitted to the MS CC degree program. Note that CIS 4385 is required for the FSU BS in Cyber Criminology and the other four courses are required for the FSU BS in Computer Science and BA in Computer Science degrees. Undergraduate Prerequisites for the MS CC Degree Program: CDA 3101 Computer Organization II (3) CIS 4385 Cybercrime Detection and Forensics (3) COP 4530 Data Structures, Algorithms, and Generic Programming (3) COP 4610 Operating Systems and Concurrent Programming (3) COP 4710 Theory and Structure of Databases (3) The graduation requirements include completing all of the undergraduate prerequisites, completing 3 graduate criminology courses, and completing 6 graduate computer science courses. The graduate courses for the MS CC degree are listed below: Criminology Courses from Which MS CC Students Are Required to Take at Least Three: CCJ 5016 Crimes of the Powerful (3) CCJ 5285 Survey of Criminal Justice Theory and Research (3) CCJ 5606 Survey of Criminological Theories (3) CCJ 5607 History of Criminological Thought (3) CCJ 5636 Comparative Criminology and Criminal Justice (3) Up to date course descriptions for the above criminology courses can be found at: http://www.criminology.fsu.edu/p/academic-syllabi.php . Computer Science Courses Required for MS CC Students: CIS 5370 Computer Security (3) CNT 5412 Network Security, Active and Passive Defenses (3) CNT 5505 Data and Computer Communications (3) CNT 5605 Computer and Network Administration (3) COP 5611 Advanced Operating Systems (3) COP 5725 Database Systems (3) The one additional criminology or CS course will be a graduate elective. The criminology courses can be taken in any order as none of these courses are prerequisites for any of the other courses. However, the 6 required graduate computer science courses each have undergraduate prerequisites that must be completed before the student will be allowed to take these courses.", "document_id": 287616}]}, {"paragraphs": [{"qas": [{"question": "Who do I give the CS defense result form to?", "id": 161983, "answers": [{"answer_id": 226475, "document_id": 287618, "question_id": 161983, "text": "bring this form to your defense to record the outcome of the defense upon successful defense", "answer_start": 1300, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}, {"question": "Who signs the CS Defense result form?", "id": 161984, "answers": [{"answer_id": 226476, "document_id": 287618, "question_id": 161984, "text": "signed by your committee ", "answer_start": 1426, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "MS (project-option) Graduation Checklist | MS (project-option) Graduation Checklist Below is a brief checklist of items an MS (project option) student should complete before graduation: Degree Requirements Checklist at least 8 courses (24 hours) at or above the 5000 level excluding supervised teaching, supervised research, seminars, DIS, CIS 5970 of the 8 courses, there must be at least one course from each of the core areas: Software, Systems, Theory at least 6 hours of CIS 5915, Software Project, where at most 6 hours count toward the required 30 hours for the degree register, at most once, for CIS 8974, MS Project Defense (withdraw from all but one instance of this if you have registered more than once) register for graduation at the Registrar\u2019s Office during the first two weeks of the semester in which you wish to graduate Defense & Graduation Checklist submit the project to your committee at least 10 days in advance schedule defense (at least 2 weeks in advance): reserve room (typically 151 Love) with the Kenyetta Neale reserve PC cart (if needed) by signing up on calendar on the door in the copy room in 260 Love inform Eleanor McNealy of title, room, and time of defense so she can send out the notification. obtain the CS Defense Result Form (\u201cgreen form\u201d) from 203 Love and bring this form to your defense to record the outcome of the defense upon successful defense, have the CS Defense Result Form signed by your committee and return it to the Graduate Coordinator, Daniel Clawson in 203D Love submit an electronic version (pdf) of the project to the CS webmaster (webmaster [at cs dot fsu dot edu]) and the Graduate Coordinator (clawson [at cs dot fsu dot edu]) complete the departmental EXIT survey which will be sent electronically towards the ent of the semester if your employment plans are uncertain when completing the EXIT survey, inform the CS Director of Graduate Studies via email when those plans are complete", "document_id": 287618}]}, {"paragraphs": [{"qas": [{"question": "How many core courses do I need to complete for a Ph.D.?", "id": 162012, "answers": [{"answer_id": 226504, "document_id": 287622, "question_id": 162012, "text": "four core courses", "answer_start": 1746, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "PhD Degree Information | PhD Degree Information The number of hours for the graduate degree as described in this web page will be effective in Summer 2018. Graduate Student Handbook \u2013 Doctoral Degree The Doctor of Philosophy is regarded as a research degree and is awarded on the basis of accomplishment in a recognized specialty in computer science. Such accomplishment should include scholarly mastery of the field, significant contributions to new knowledge in the field, and written and oral communication skills appropriate for the field. The requirements for the Ph.D. include the following: passing CIS 8962, the qualifying examination (portfolio defense), and CIS 8964, preliminary examination (area exam); satisfaction of the course requirements; successfully defending a dissertation prospectus, and successfully defending a dissertation. All candidates for doctoral degrees in the department are required to participate in teaching activities at some time during their graduate careers unless waived by the department chair. Additionally, each doctoral student must complete at least one oral research presentation which is critiqued by at least one faculty member. This can be at the departmental research conference or any discipline-related conference. Each PhD has a Publication Requirement and as such that student is required to be the primary (e.g., first) author for at least one accepted or published regular paper (six or more pages) in a conference or journal that is ranked B or higher by the Computing Research and Education Association (CORE) [ http://www.core.edu.au ]. Course Requirements The doctoral student must complete the undergraduate pre-requisites before graduating. The doctoral student should have completed four core courses (18 hours), with at least one course in each of the three areas Software, Systems, and Theory (the PhD core course requirement ). These core courses are defined in the FSU Master\u2019s degree requirements . Equivalent courses taken at other institutions must be approved by the Portfolio Evaluation Committee (PEC). Students entering the program after earning a Master\u2019s degree in Computer Science or related area must take at least four additional courses (12 hours) beyond those taken for the MS degree, at the 5000 or 6000 level, as advised by the student\u2019s major professor and supervisory committee. These courses must be taken at FSU and a maximum of 2 courses (6 hours) may come from outside of the department. Core courses can also be used to meet this \u201c4 additional course\u201d requirement, provided they are taken at FSU and were not completed as part of an MS program. Supervised Teaching, Supervised Research, DIS and courses with prefix CGS do not count towards this requirement. Students entering the program after earning a bachelor\u2019s degree in computer science or related area, must take at least nine courses (27 hours) at the 5000 or 6000 level, as advised by the student\u2019s major professor and supervisory committee. Four of these courses (12 hours) must meet the PhD core course requirement. The remaining five courses (15 hours) must be taken at FSU and cannot be part of an MS degree program outside of the FSU Computer Science Department. A maximum of two courses (6 hours) may come from outside of the Computer Science Department. Supervised teaching, supervised research, DIS, and courses with prefix CGS do not count towards this requirement. If a PhD student takes CIS5920 Colloquium three times and gets an S each time, then this may substitute for one 3 hour course. The student\u2019s PhD committee can require the student to take more than the aforementioned number of courses. The student must receive a grade of \u201cB-\u201d or better on all graduate courses taken to satisfy the minimum course requirements of the degree. Once these minimum requirements are met, however, it is permissible to take any subsequent courses on an \u201cS/U\u201d basis. Once a student has completed twenty-seven (27) semester hours of graduate work or has been awarded the Master\u2019s degree, the student must be enrolled on The Florida State University Tallahassee campus for a minimum of twenty-four (24) graduate semester hours credit within a continuous 12-month period to meet the university residency requirement. The doctoral student must also complete at least twenty-four (24) hours of CIS 6980r Dissertation. A student may enroll in CIS 6980r only after being admitted to candidacy. Once admitted to candidacy, Students must be enrolled for a minimum of two Dissertation hours each semester until completion (of degree) and must graduate with the doctoral degree within five years of being admitted to doctoral candidacy. Major Professor and Supervisory Committee As early as is feasible in the student\u2019s program, the student should identify an area for dissertation research and secure an informal agreement with a faculty member to serve as the student\u2019s major professor. This agreement should include an understanding of the area and timeline of the dissertation research. This agreement is then made formal by the Department Chair appointing that faculty member to serve in this capacity. In a similar manner, the student must secure agreements with, and the Chair must approve, the remaining members of the student\u2019s Supervisory Committee: one (1) additional faculty members in the Department; one (1) Representative-at-large who is a member of the graduate faculty in another department. Graduate Studies requires the representative-at-large to ensure \u201cthat University policies are followed, and that decisions made by the supervisory committee reflect the collective judgment of the committee. Therefore, the graduate faculty representative must be someone who is free of conflicts of interest with other members of the committee.\u201d If there are any questions as to the appropriateness of a particular faculty member to serve in this role, the Dean of Graduate Studies should be contacted. In addition, the Chair will appoint a member to serve as a Department Representative. All members must hold doctoral directive status. The supervisory committee is responsible for approving an individual program of study, including any additional course requirements, and verifying that the student satisfies the following departmental requirements. The area examination, prospectus, and dissertation defenses must be unanimously approved by the major professor and supervisory committee. Student Portfolio Defense (CIS 8962, Qualifying Exam) All students admitted to the program, but not yet admitted to candidacy, are required to compile and keep current a portfolio containing information relevant to the student\u2019s progress in the program. Required contents of the portfolio, submission dates, and guidelines for preparing the portfolio are published by the Department of Computer Science at PhD Portfolio. When all components of the portfolio are complete, the student should register for the portfolio defense (CIS 8962). The portfolio of any student not yet in candidacy is reviewed annually by the departmental Portfolio Evaluation Committee (PEC). This committee consists of a core that is appointed by the Department Chair and normally meets in the spring. Feedback to the student on the contents of the portfolio and on progress towards admission to candidacy is provided after each review. The final review occurs in conjunction with the defense of the portfolio. Thus, when a student and his or her major professor agree the portfolio is complete, the student should register for the Doctoral Qualifying Exam, CIS 8962 (0) for the next semester. Students will be required to pass an oral examination over the material in four core courses, with at least one course in each of the three areas Software, Systems, and Theory (the PhD core course requirement). If a student has taken a core course at FSU and has received a grade of an A-, then the student is exempt from having to take an oral examination in that course. If the student is not successful on the first sitting of the Qualifying Exam, a grade of \u201cI\u201d will be assigned. If the second sitting of the exam is also unsuccessful, a grade of \u201cF\u201d is assigned. A student can take the Qualifying Exam at most twice. A student either passes or fails; there is no conditional pass. If the student is successful, he or she should register for CIS 6900 DIS hours to maintain enrollment status until the completion of the Area Examination (CIS 8964, Preliminary Exam). Prior to this benchmark, PhD\u2019s should use CIS 5900 DIS hours to reflect research efforts as they complete the coursework and ready themselves for the Qualifying Exam (CIS 8962). Area Examination (CIS 8964, Preliminary Exam) The area examination (CIS 8964) covers the student\u2019s intended area of research. It has both written and oral parts. Both parts of the examination are conducted by the student\u2019s supervisory committee, which may delegate the responsibility to a larger area committee. It is strongly recommended that the student write an area survey paper as part of this exam. The oral part is open to all department faculty having doctoral status who elect to participate. The oral part of the examination is held in an open forum which other students are invited to attend and is followed by a closed session if the committee so desires. Students who do not pass the area exam may be advised to retake it at a later time. A student who changes to a new research area after having previously passed this exam will be required to stand for a further exam over the new area. A student can fail the area exam at most once. A PhD CS student can be exempt from writing the document for the area exam if the student was the primary author on an accepted or published paper in the general intended research area and the student\u2019s PhD committee deems the paper and the publication venue to be acceptable.\u00a0 However, an oral examination for the area exam is still required.\u00a0 The student\u2019s PhD committee may allow the student to present the accepted or published paper in place of the normal presentation of the research area, but the PhD committee can still ask the student questions about the intended area of research. Normal expectations are that the portfolio defense occurs prior to taking the area exam, or at least in the same semester as the area exam. Within two semesters (including summer) of passing the QE, a doctoral student should have taken the area exam. Admission to Candidacy In order to be advanced to candidacy for the doctoral degree, the student must: pass CIS 8962, the qualifying examination, which consists of passing the defense of the portfolio, and pass CIS 8964, the preliminary exam, which consists of passing the area examination. Suggested Timeline by the end of the first academic year, a doctoral student who entered the program with an MS degree, should have completed the QE and established a doctoral committee for a doctoral student who entered the program without an MS degree, the student should have completed the QE and formed a doctoral committee by the end of the second academic year within two semesters (including summer) of passing the QE, a doctoral student should have taken the PE (area exam). Prospectus The student must formally propose the research for the dissertation to his or her Supervisory Committee in the form of a prospectus. The prospectus should consist of much of the background work for the dissertation, including: thorough literature review; the theory, preliminary computational results, and/or bases for the feasibility of the research; a proposal for the research to be completed for the dissertation. In addition, as an appendix to the prospectus, publication plans should be presented. The research proposed should make clear any substantial advances in the state of knowledge in computer science, and the publication plans should be designed to affirm the quality and nature of the research. The publication should be in nationally recognized conferences and journals in the field. The prospectus must be successfully defended before the student\u2019s supervisory committee in an open meeting. Dissertation After completing the research proposed in the prospectus, the student must write a dissertation. The dissertation represents the fulfillment of the proposals made in the prospectus. The dissertation document must comply with all current University standards for style. The dissertation must be successfully defended before the student\u2019s committee in an open meeting. The dissertation must be successfully defended within five (5) years of passing the preliminary exam. An electronic version of the dissertation must be submitted to the university as well as the CS webmaster, and CS graduate coordinator. Scholarly Engagement Requirement Each CS doctoral student must be scholarly engaged during their academic studies. A PhD CS student meets the scholarly engagement requirement by giving at least one presentation at an FSU CS graduate student seminar, an FSU CS Department seminar, or at an international conference. It is also recommended that each PhD CS student attends as many department and graduate student colloquia as possible. Publication Requirement Each PhD student is required to be the primary (e.g., first) author for at least one accepted or published regular paper (six or more pages) in a conference or journal that is ranked B or higher by the Computing Research and Education Association (CORE) [ http://www.core.edu.au ]; see the here on how to request an exception. Examination in Defense of Dissertation The defense of the dissertation will be oral. Responsibility for suggesting the time, designating the place, and presiding at the examination rests with the major professor. It is recommended that students defend no later than the eighth week of classes in the semester of intent to graduate. Students must defend by no later than the Format Approval Deadline in the semester of intent to graduate. Consult the Graduate School Canvas site GradSpace for more information. Academic courtesy requires that the dissertation be submitted to each member of the supervisory committee at least four weeks before the date of the oral examination. The supervisory committee, the chair of the major department, and such other members of the faculty as may be appointed by the academic dean will conduct the examination. All members of the graduate faculty are invited to attend. At least two weeks prior to the date of the examination, the student or major professor will present an announcement of the dissertation title and the date and place of the examination to the Graduate School. Consult the Registration Guide for the deadline dates All committee members and the student must attend the entire defense in real-time, either by being physically present or participating via distance technology. If exceptional emergency circumstances, e.g. medical or other emergency situations, prevent the participation of a committee member then it may be necessary to arrange for an additional appropriately qualified colleague to attend the defense. A minimum of four members with Graduate Faculty Status must participate. The oral examining committee will certify in writing to the academic dean of the major department the results of the examination: passed, failed, or to be re-examined. The report of results following a re-examination must indicate the student either passed or failed. To receive a passing grade, the written dissertation must be in final form or require only minor revisions at the time of the defense. A grade of PASS for the defense of treatise or dissertation requires at least a majority approval of the committee. If the student passes, each member must sign the Manuscript Signature Form to substantiate the results of the defense. It is the responsibility of the major professor to submit this completed form either directly to the Clearance Advisor or to the appropriate college or departmental office for subsequent delivery to the Clearance Advisor in The Graduate School. A written critique of the conduct of the examination in defense of the dissertation should be submitted by the university representative from the graduate faculty to the appropriate academic dean and the Dean of the Graduate School within one week after the date of defense. The degree cannot be awarded until both forms have been received by the Graduate School and the final version of the manuscript has been submitted to and approved by the Clearance Advisor.", "document_id": 287622}]}, {"paragraphs": [{"qas": [{"question": "When are PhD portfolios reviewed?", "id": 162037, "answers": [{"answer_id": 226529, "document_id": 287626, "question_id": 162037, "text": "Portfolios are reviewed on a regular basis (generally once a year, during the Spring term)", "answer_start": 651, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}, {"question": "What is the course number for the Doctoral Qualifying Exam?", "id": 162046, "answers": [{"answer_id": 226538, "document_id": 287626, "question_id": 162046, "text": "CIS 8962", "answer_start": 2820, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "Portfolio | Portfolio PhD Student Portfolio Guidelines The portfolio is the principal artifact used by the department to monitor progress of doctoral students and to determine if a student is ready to take the Doctoral Qualifying Exam, which is a required component of admission to candidacy. This document is intended as a guide to the portfolio component of these requirements. Adhering to these guidelines is a requirement for continuing in the doctoral program. Portfolio Requirement Every Computer Science doctoral student is required to assemble and submit a portfolio for review no later than the date specified under Portfolio Calendar below. Portfolios are reviewed on a regular basis (generally once a year, during the Spring term) by the Portfolio Evaluation Committee (PEC), a faculty committee appointed by the department chair. Feedback to the student on portfolio contents and on progress towards admission to candidacy is provided as a result of these reviews. New portfolios should be submitted to the student\u2019s academic advisor for preliminary review. The advisor may suggest that the student make modifications. Students should print the cover page form and include the form with the Portfolio for submission to the academic advisor for review. When the advisor is satisfied, the advisor will sign the cover page form and transmit the portfolio on to the PEC. Admission to candidacy for the PhD degree consists of two milestones: CIS 8962 Doctoral Qualifying Exam CIS 8964 Doctoral Preliminary Exam (Area Exam) A grade of \u201cP\u201d must be earned in both of these. Normally the Doctoral Qualifying Exam would precede, or at least occur in the same semester as, the Area Exam. See below under Portfolio Review and Qualifying Exam for the procedure to follow. Portfolio Calendar During the first semester in the program , the student should assemble a portfolio and submit it to the department office through the student\u2019s academic advisor. This initial portfolio should be submitted as soon as possible, but in no case later than the end of the first semester. (It is understood that the portfolio will not be complete at this point.) Every Fall and Spring semester prior to the student\u2019s admission to candidacy, the student is required to maintain the currency of the portfolio by updating it, asking his or her advisor to review it, and obtaining the advisor\u2019s signature on the portfolio cover page form , by the end of the second week of the semester. At least once a year , typically in the Spring, the portfolio will be reviewed by the Portfolio Evaluation Committee. The result of the review will be advisory in nature. When the student wishes to take the Doctoral Qualifying Exam : For the term in which the student wishes to take the Doctoral Qualifying Exam, the student should enroll in the course CIS 8962 Doctoral Qualifying Exam . In order for the student to register for the Qualifying Exam the student\u2019s and the student\u2019s major professor must sign a portfolio cover page form indicating that the professor has reviewed the portfolio and considers it complete . The CIS 8962 Doctoral Qualifying Exam will be scheduled during that semester. Full time students entering with a Masters in Computer Science should normally expect to take the Qualifying Exam near the end of their first year. Full time students entering directly from a Bachelor\u2019s degree in Computer Science should normally expect to take the Qualifying Exam near the end of their second year. For all students, the CIS 8962 Doctoral Qualifying Exam should normally occur soon after the core course requirements have been met. After admission to candidacy , the portfolio should not be modified. It will be archived by the department staff. Copies of the progress reports prepared by the student\u2019s major professor should be placed in the student\u2019s regular departmental advisement file. Portfolio Content & Organization Every student in the FSU Computer Science doctoral program is required to prepare a three-ring binder containing as much as possible of the information described below. For each major section, please begin the corresponding section in your binder with a tabbed separator labeled so as to identify the section heading. All sections are required to be included. Summary Data Complete the following table on personal information: Personal Information Your Name: Your FSUSN: Date entered program (semester/year): Full or part time student? Principal source of support: Give the names of your dissertation advisor and other committee members. If the committee has not yet been formed, please indicate this with \u2018TBD\u2019. Note that advance into candidacy can only be approved when a committee has been appointed. Doctoral Committee Major Professor / Advisor Committee Member Committee Member Committee Member External Committee Member Complete the following table on core courses (see the Graduate Bulletin for information on the core course requirements). You must complete four (4) core courses in total: at least one course from each of the three core areas. List these four core courses in the table below. Note that only those core courses you completed with a grade of B or higher will count towards the complete set of four, so only list the core courses with a grade of B or higher: Core Graduate Courses and Grades Core Area Core Course Semester Taken or Planned Name of Instructor Grade Received Software Systems Theory Any If you are requesting that courses taken at other institutions be counted toward the core, please provide supporting documentation showing the equivalence. In addition, our department\u2019s Director of Graduate Studies or another qualified graduate faculty member has to make an examination and determine that the course is equivalent. Obtain a letter or memo signed by this person and put a copy in the portfolio. In any case, include in your portfolio a copy of the course syllabus, including at least the information about the prerequisites, topics, and textbook or other references used, and copies of whatever graded work (examinations, projects, etc.) you have retained from the course. In general, to be equivalent, a course must be a graduate course, with similar prerequisites, a similar list of topics, and similar performance expectations. For example, a course in operating systems will not be considered equivalent to COP 5611 unless it is a \u201csecond semester\u201d course, i.e. one for which there is another operating systems course like COP 4610 as prerequisite. For the theory area, the course grade must be based on the ability to do mathematical proofs. For the software area, the course must involve substantial hands-on software development, with a mature level of documentation and testing. Complete the following table on elective courses, including all the graduate courses you have taken (including thesis and DIS courses) that are not in the list of core courses above. Elective Courses and Grades Elective Course Semester Taken or Planned Name of Instructor Grade Received GPA for elective courses: Complete the following table for all area exams you have taken or plan to take. The last row should be the exam you have taken or plan to take for your current degree. Area Exams Exam Coverage Area Date of Exam (semester/year) Result of Exam State whether you have chosen a doctoral research topic and, if known, give a brief description of the proposed research. (one or two sentences) Curriculum Vitae The CV should contain the following information: Academic degrees: List all degrees you have earned to date, including for each degree the date it was conferred, the subject area, and the institution\u2019s name and general location. Professional employment: List any teaching or research assistantships, any fellowships, and any nonacademic jobs providing training or experience in Computer Science or closely related areas. For teaching and research assistantships, indicate level of effort, e.g., whether these were 1/2 time, 1/4 time, etc. appointments. Honors and Awards: List any special academic honors, awards, or honor society memberships. Publications: List all published writings for which you are the author or a co-author. Service: Indicate anything you have done which either directly or indirectly benefited the department, university, or the Computer Science profession\u2013e.g., officer of the student ACM chapter, reviewer for professional conference or journal, assistance at any professional conference, help at science fairs, service in local public schools, etc. Research Publications and Writing Begin this required section by repeating the publication list cited in your CV. Place a reprint or photocopy of one research publication or technical writing of which you were the primary author or writer , provided that: If the publication has three authors or fewer in total, then state the role you played in this publication, i.e., what was your role in the research and in the writing of the paper? If your writing was edited by a co-author (such as your advisor), then you should clearly indicate this. If all of your publications have four authors or more in total, or if you were not the person primarily responsible for writing the paper, or if you have no publications, then you must contribute a work of a research or technical nature which you personally created. This could be your Masters Thesis, or if you have not written a thesis, then some other research-oriented or technical writing, such as a term paper, or the area survey paper, or a technical report for which you were the primary author. Software Engineering A person holding the PhD in Computer Science is expected to have the ability to contribute substantially to significant software artifacts. As such, one such artifact is a required component of the doctoral portfolio. Include a copy of ONE such artifact, including design, engineering, and certification reports, software documentation , and actual code.A listing of unidentified uncommented code is not sufficient. The portfolio must include enough external documentation and internal comments for the reviewers to read and evaluate the scope and quality of the software. Some indication must be included of how the quality of the software was tested. If the software is something submitted for grade in a course, you should include the instructor\u2019s statement of the assignment as external documentation, but that is not sufficient; the code must at least include internal comments. Similarly, for a course assignment you may provide the grade you received, and any comments the instructor made, as part of the \u201ccertification report\u201d, but you also should explain how you tested it.For large projects, only indicative samples of the actual code need be included, but the full code should be available either on-line or as a separate document. If lengthy, these items may be submitted in a separate binder. If you include a CD containing materials, please include printed copy of at least some overview material, with pointers to the CD for the rest.If any of the software or documentation components are the work of more than one author, you must indicate what parts of these components you contributed to and estimate the percent of your personal contribution to each part. Moreover, it is best that you also include some examples of your individual work. Dissertation Research Write a 1-2 page abstract describing your intended area of dissertation research. Include indications of progress you have made. Support List all employment you have had while a graduate student in the department along with the begin/end dates of that employment. Include TA/RA positions, other work within FSU, as well as outside employment. We are interested in some detail, for example, if you are research assistant, describe the position, work requirements (in terms of both effort and outcome), and who the employer/supervisor is. This information is relevant both for the extent to which your activities support your educational objectives and the extent to which they may occupy your time in activities not related to your degree program. For each RA and TA position you have held at FSU, include here photocopies of your semesterly evaluation of performance in those positions. List all fellowship support you have while a student in our program. List the granting agency, the academic and ancillary requirements, and the amount of funding for each fellowship. Lectures All candidates for doctoral degrees in the department are required to participate in teaching activities at some time during their graduate careers, which will allow them to make an informed decision regarding whether or not they may wish to pursue a career in academia. Therefore, every candidate is required to either teach a course or serve as a recitation instructor for a course before they graduate. This experience can be part of their TA duties or can be obtained at another university prior to coming to FSU. In this section include supportive material that demonstrates lecture preparation and presentation material. Alternatively, include recitation presentation material in case you were assigned recitation responsibilities. This requirement can be waived by the Department chair in special circumstances only. When waived by the Chair, please include a copy of the memo. Documentation Supportive documentation should include: Previous Portfolio Reviews (when applicable)As discussed above, doctoral student portfolios will be reviewed regularly by the Portfolio Review Committee, and each student will be sent a letter indicating the committee\u2019s evaluation of the student\u2019s progress toward the degree. Photocopies of all such letters to date are to appear in this section of the portfolio. Transcripts To the extent these are available, include copies of your transcripts from prior institutions, i.e., universities or colleges you attended prior to your beginning as a graduate student in Computer Science at FSU. If you submitted transcripts with your application to our graduate program, the departmental staff can make photocopies of these for you from your application file, if you so request. GRE and TOEFL Score Reports (when available)In this section, place photocopies of the official reporting forms of your GRE and TOEFL scores reported in section 1 above. When you opt to omit it, the department will retrieve this information electronically. Area Exam Reports In this section place photocopies of the result reports from all area exams you have taken. Portfolio Review and Qualifying Exam The PhD Portfolio is intended to provide the department with a complete view of the student\u2019s accomplishments and abilities that relate to likelihood of success as a PhD professional. The portfolio is reviewed regularly by the Portfolio Evaluation Committee to determine whether the student is making suitable progress towards the degree, and must be completed with a list of the satisfactory grades (B or higher) for the four core graduate courses when the student takes the Doctoral Qualifying Exam. Based on the completion of the portfolio, a student can enroll in CIS 8962 Doctoral Qualifying Exam. A passing grade \u201cP\u201d for the CIS 8962 Doctoral Qualifying Exam is one of the two required components of admission to candidacy. The student should be enrolled in CIS 8962 Doctoral Qualifying Exam when he or she has completed the four core graduate courses, completed the portfolio, and both the student and major professor agree that the student is ready to take the Doctoral Qualifying Exam. ( Doctoral Qualifying Exams may be scheduled for Fall or Spring semester, but not Summer semester.) The Portfolio Evaluation Committee will schedule and conduct the Doctoral Qualifying Exam during the semester. The exam will be oral and will cover the four core graduate courses taken by the student. The student will be tested on the four core graduate course topics. The student is strongly advised to study the core course topics well in advance in preparation for the Doctoral Qualifying Exam. A student cannot take the Doctoral Qualifying Exam if he or she has not completed the four core graduate courses. However, there is one exception to this rule. A student who has received satisfactory grades with a cumulative GPA of 3.5 or higher for all but one of the core courses can take the Qualifying Exam in the Spring term in which the last core course is being taken, assuming that the Qualifying Exams take place after spring break. In that case, the student is expected to be able to answer questions about all of the four core courses, including the core course currently being taken. If the student passes the oral, the exam is not recorded as passed until after the end of the term, and the chair of the Portfolio Evaluation Committee has verified that the remaining core course has been passed with an acceptable grade. In evaluating the portfolio for the Doctoral Qualifying Exam, no single aspect of the portfolio is taken as a determining factor, but rather an attempt is made to consider all strengths and weaknesses and to determine whether, overall, the student may reasonably be expected to succeed and become a credit to the department. Components of such success generally are as follows: General competency in Computer Science.In order to demonstrate adequate mastery of the breadth of Computer Science, we ordinarily expect a successful candidate to maintain a GPA of at least 3.5 in the core courses required for the degree . A GPA below 3.5 for the core courses is sufficient cause to deny permission to take the Qualifying Exam, unless convincing justifications are presented to the committee for consideration. Candidates may refer to the grading scale for PhD students in graduate courses that has been adopted by the department. The Portfolio Evaluation Committee may make exceptions to this GPA rule if it finds compelling evidence of exceptional strength in research. For example, a slightly lower GPA might be offset by published papers in reputable journals or conference proceedings. Note that the four core courses you took must be completed with a B or higher grade. If a student receives an A in a CS graduate core course at FSU, then the student is exempt from taking the exam. If you completed a core course with an unsatisfactory grade of B- or lower, do not list this course as a core course but list the course as an elective. Then sign up for another core course in that same core area to ensure you have taken four core courses, with at least one course from each core area.The Doctoral Qualifying Exam tests the general knowledge of the candidate in areas covered by the four core graduate courses. Research Aptitude.Research is a critical component of the PhD degree process and is a fundamental part of most professional positions that require a PhD as credentials. The department would like to admit to candidacy individuals who have demonstrated the ability, or aptitude, for research in the field. Software Skills.The creation of computer software is a fundamental part of computer science, and the department generally expects that its graduates possess the skills and training necessary to contribute to such endeavors. Communication Skills.The department wishes to see that the student has a capacity to express his or her thoughts in publication-quality English. Thus there is a requirement that the Portfolio contain some writing sample that demonstrates written communication skills, and the Doctoral Qualifying Exam serves to evaluate spoken communication skills. The writing requirement may be met by a professional publication, masters thesis, a masters degree project report, or any other writing that the student may have produced as part of his or her course work. Note that an ability to present one\u2019s ideas in written English is considered as separate from an ability to conduct research, and that both abilities are deemed necessary.The department also wishes to see that the student is capable of responding extemporaneously to oral questions, as a researcher is required to do when presenting a paper at a conference and a professor is required to do when teaching. The Doctoral Qualifying Exam is a test of these oral communication skills. The student will be expected to be able to understand the questions presented by the examiners, and to answer them on the spot. PhD Grading Scale The Florida State University Department of Computer Science has adopted a grade interpretation scale for PhD students and any other students who take graduate courses in the department and may wish at some future time to enter the PhD program. Effective Fall 2002, grades in graduate courses taught by Computer Science Department faculty will use this grade interpretation scale. The scale is given by the following table. Course Grade CS Department Interpretation A Performance met or exceeded expectations for PhD students A- Performance met expectations for PhD students B+ Performance was marginally below expectations for PhD students B Performance was significantly below expectations for PhD students B- Performance was unsatisfactory for PhD students C+ or below Performance was unsatisfactory for graduate work Frequently Asked Questions Q: Can I substitute another course for one of the four required core courses? How about doing it just for the Portfolio Review, if I promise to take the course later?A: No. The Qualifying Exam is the point at which the Department checks for completion of the required core courses and the quality of work in those courses. Until you take the course we have no way to tell how well you will have done in the course.Of course, with adequate justification, departments at FSU are permitted to approve course substitutions in degree requirements. The PEC will only consider a substitution if the Portfolio contains a copy of a letter approving a course substitution for the degree requirements, signed by Director of Graduate Studies and the Department Chair. Q: I received a B- for a core course. Should I take another core course and have that one count towards to four core courses?A: Yes, you can choose another core course as long as you take at least three core courses to cover all three core areas as part of the total of four core courses you want to count towards the Qualifying Exam. Q: What kind of oral questions can I expect at the Qualifying Exam?A: That will be up to the individual members of the PEC. You should expect questions on the four areas: (a) general competency in CS; (b) research aptitude; (c) software skills; (d) communication skills. If the portfolio itself is strong, all or most of the questions are likely to be on (a). In area (a) the intent of the questions will be to gauge your understanding and retention of material normally covered in the four core courses and their undergraduate prerequisites. For example, if you have taken Automata and Formal Languages as part of your core requirement, you should not be take by surprise if you are asked to explain what is a finite state machine, what is the difference between a deterministic and a non deterministic finite state machine, what it means for a gramar to be ambiguous, how that compares to a language being inherently ambiguous, etc. .Be sure to have your major professor, and possibly others, help you prepare for such questions. Minimal preparation would include reviewing your notes from the core courses, and then answering some oral questions from each of the areas they cover.A big part of preparing for the exam is learning to be comfortable listening to questions, making sure you understand (by asking for clarification if necessary), and then expressing yourself clearly. You will have an easel and pen to write on. Plan to use it appropriately, to help with your answer. A \u201cmock\u201d oral examination is a good way to practice.Students who have not taken the core courses recently, or who have transferred credit for a core course from another institution, should expect to be asked more questions on the core courses, to verify that the knowledge has not become stale, and that the material learned is similar in scope and depth to what is covered in the corresponding course here at FSU. Similarly, if you took the course at FSU but your grade was not A or A-, you may expect more questions on that course. In area (b) you might expect questions concerning your research experience, your contributions to any research papers in your portfolio, your research plans, and the membership of your supervisory committee. In area (c) you might expect questions on what software you wrote, and the examples of software you included in your portfolio. In area (d) you might expect questions on the technical writing samples you included in your portfolio, but mainly the committee will be judging your communication skills by the manner in which you answer the questions about (a). That is: Can you understand the question? Can you ask appropriate questions for clarification? Can you give a clear answer? How well you do these things in the exam will be viewed as indication of your ability to function in a classroom, and as a speaker at a research conference. These are just examples, not intended to limit the options of individual committee members. Along with the questions, if the questions do not take up all of the available time, you can expect some encouraging words about the strong points of your portfolio, and some constructive advice as to how to proceed. Q: Can I take the Qualifying Exam during the summer term?A: No, or at least you should not count on it. Very few of the faculty are available during the summer as they tend to leave town to attend conference meetings. If there happen to be enough members of the PEC in town, an exam may be held in exceptional cases. Q: Can I do my Area Examination before my Qualifying Exam?A: Not officially. The course number for the Area Examination is listed as the Ph.D. Preliminary Examination, and the FSU Graduate Bulletin says that a student is admitted to Ph.D. candidacy by passing the Preliminary Examination. Our department\u2019s faculty has set up the admission to candidacy as a two-step process. The necessary first step is the Qualifying Exam. In a few cases, for scheduling reasons, a student may go through the Area Examination process, but a passing grade for the Area Examination cannot be turned in until the student has completed the Qualifying Exam. If the are done the same term, this can work out. Students and advisors should take care about this. If, by some oversight, a passing grade for the Area Examination were to be turned in before the student passes the Qualifying Exam, the Department would need to revoke the passing grade on the Area Examination until the Qualifying Exam is passed. Q: What if I took courses at another institution, that I want to count toward my core requirement?A: First, you should have obtained some clearance for transfer credit when you were admitted, and you should put a copy of a letter or memo to this effect in your portfolio. Second, you should include in your portfolio the name of the textbook you used in the course, a copy of the course syllabus, and examples of graded exams and projects form the course. This will enable the PEC to gauge whether the course seems equivalent, and to know what sort of questions to ask during your oral examination on that area. Q: When will I know whether I passed?A: The PEC will probably wait to tell anyone until all of the students taking the Qualifying Exam that term have completed the exam. Q: Can I talk with other students about the exam, after I take it?A: You are asked not to discuss questions you were asked on the oral exam with anyone, until you are told the result of the exam. This allows us to be fairer to all students. For example, suppose you have trouble on a question. It may be that all students have trouble with that question, and the committee decides to disregard it. However, if you tell another student who is due to take the exam later, and the other student then looks up the answer and so answers better than you did, the committee may conclude that the question was not hard, and that you have no excuse for answering poorly. Q: Do I need to form my entire Ph.D. supervisory committee before I take the Qualifying Exam?A: This is not a requirement, but if you do not yet have your supervisory committee formed you need to do it right away, because you need the full supervisory committee before you can move on to the next step, which is the Area Examination. Q: Do I need to choose my research area before I take the Qualifying Exam?A: This is not a requirement, but if you do not yet have your area chosen you need to do it right away, since you can\u2019t prepare for the CIS 8964 Preliminary Exam until you have chosen an area.", "document_id": 287626}]}, {"paragraphs": [{"qas": [], "context": "Undergraduate pre-requisites | Undergraduate pre-requisites For those students who do NOT have an undergraduate BS degree in Computer Science, the following courses or their equivalents at another institution must be completed before the graduate PhD CS or MS CS degree will be awarded. Each newly admitted student must meet with the Director of Graduate Studies to complete a form indicating if any of the following must be taken. The form will be maintained in the student\u2019s file and checked during the departmental graduation check. Note that if a student has a BS in CS from another institution (not FSU) there may be one or more courses that we require that were not required at the student\u2019s institution. These courses must be taken prior to graduation. An undergraduate pre-requisite is considered fulfilled when a grade of B- or better is received in the undergraduate course or when an S is received in the co-listed CGS 5xxx graduate course. Undergraduate pre-requisites for MS in CS general Computer Science major and PhD in CS: See the recommended sequence for completing the prerequisite requirements for admission COP 4530 Data Structures, Algorithms and Generic Programming (3) CDA 3100 Computer Organization I (3) COP 4610 Operating Systems (3) COT 4420 Theory of Computation (3) Undergraduate pre-requisites for MS in CS Cybersecurity major: See the recommended sequence for completing the prerequisite requirements for admission COP 4530 Data Structures, Algorithms and Generic Programming (3) CDA 3100 Computer Organization I (3) COP 4610 Operating Systems (3) COT 4420 Theory of Computation (3) COP 4521 Secure Parallel and Distributed Computing with Python (3) CIS 4360 Introduction to Computer Security (3) Undergraduate pre-requisites for MS in CS CSNA major: See the recommended sequence for completing the prerequisite requirements for admission COP 4530 Data Structures, Algorithms and Generic Programming (3) CDA 3100 Computer Organization I (3) COP 4610 Operating Systems (3) Undergraduate pre-requisites for MS in Cyber Criminology: See the recommended sequence for completing the prerequisite requirements for admission COP 4530 Data Structures, Algorithms and Generic Programming (3) CDA 3100 Computer Organization I (3) COP 4610 Operating Systems (3) COP 4710 Theory and Structure of Databases (3) CIS 4385 Cybercrime Detection and Forensics (3)", "document_id": 287628}]}, {"paragraphs": [{"qas": [], "context": "Time Limits for Passing PhD Examinations | Time Limits for Passing PhD Examinations The time limit for a PhD CS student to complete the qualifying exam is (a) 3 years after entering the FSU CS PhD program with an MS or (b) 4 years after entering the PhD program with a BS. The time limit for a PhD CS student to complete the preliminary exam is (a) 5 years after entering the PhD program with an MS or (b) 6 years after entering the PhD program with a BS. If a PhD student has not completed these examinations by the time limits specified above, then the student will be dismissed from the PhD program. Note: These time limits became effective in Spring 2017.  The time limits clock for a student who entered the PhD program before Spring 2017 will be reset to start at Spring 2017.", "document_id": 287621}]}, {"paragraphs": [{"qas": [{"question": "Where is the manuscript clearance portal?", "id": 162035, "answers": [{"answer_id": 226527, "document_id": 287623, "question_id": 162035, "text": "https://clearance.fsu.edu ", "answer_start": 2093, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}, {"question": "When do I need to be admitted to candidacy?", "id": 162025, "answers": [{"answer_id": 226517, "document_id": 287623, "question_id": 162025, "text": "Be admitted to candidacy at least 6 months prior to the awarding of the degree ", "answer_start": 417, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}, {"question": "What is CIS 6980?", "id": 162028, "answers": [{"answer_id": 226520, "document_id": 287623, "question_id": 162028, "text": "Dissertation", "answer_start": 664, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "PhD Graduation Check List | PhD Graduation Check List Below is a brief checklist of items a doctoral student should complete before graduation: Degree Requirements Checklist Four core courses in the areas of Software, Systems, and Theory (one from each category, plus one) At least four courses past the MS degree requirements with at least a B- in each Pass CIS 8962, Qualifying Exam Pass CIS 8964, Preliminary Exam Be admitted to candidacy at least 6 months prior to the awarding of the degree Defend a prospectus and submit a defense result form to the Graduate Coordinator. Defense result forms are available in 203 LOV. Complete at least 24 hours of CIS6980, Dissertation, with a minimum enrollment of 2 credit hours of Dissertation each semester after being admitted to candidacy until completion of degree. Register, at most once, for CIS 8985, Dissertation Defense, and withdraw from all but one instance if you have registered for this more than once. All requirements for the doctoral degree must be completed within five years from the time the student passes the preliminary examination, or the student\u2019s supervisory committee will require that a new preliminary exam be passed. Register for graduation at the Registrar\u2019s Office during the second and third week of the term in which you wish to graduate using the apply for graduation link on the my.fsu.edu portal. Defense & Graduation Checklist Determine the manuscript approval deadline found at https://gradschool.fsu.edu/academics-research/thesis-treatise-and-dissertation/manuscript-clearance-deadlines . The manuscript format check, defense date submission, and defended manuscript must be submitted to the Portal Website: https://clearance.fsu.edu . Submit the dissertation to the doctoral committee at least 4 weeks in advance The Manuscript Clearance Overview can be found at https://gradschool.fsu.edu/academics-research/thesis-treatise-and-dissertation/manuscript-clearance-overview that includes what needs to be submitted to the ProQuest ETD Website: https://www.etdadmin.com/fsu and the Manuscript Clearance Portal: https://clearance.fsu.edu . Schedule defense (at least 2 weeks in advance): Reserve room (typically 151 Love) with the CS senior secretary Reserve PC cart (if needed) by signing up on calendar on the door in the copy room in 260 Love Complete the defense announcement form found at https://clearance.fsu.edu (due no later than two weeks before the defense date). Inform Daniel Clawson of your presentation title, reserved room, defense date and time, and committee list so an announcement can be sent to the department at least one week in advance. Obtain the CS Defense Result Form (\u201cgreen form\u201d) from outside office (203A). Take this form with you to the defense to record the outcome of the defense. Return the CS Defense Result Form to the CS Graduate Coordinator, Daniel Clawson. For students defending a Master\u2019s Project, please send the project report after any revisions have been done once successfully defended to the Graduate Coordinator, Daniel Clawson (clawson [at cs dot fsu dot edu]). To be cleared for graduation, please send a list of all teaching activities (including recitation and solo instructor TA appointments), publications (accepted and published), and conference presentations done while enrolled as a PhD student. Complete the departmental EXIT survey (sent electronically towards the ent of the semester). If your employment plans are uncertain when completing the EXIT survey, inform the CS Director of Graduate Studies via email when those plans are complete.", "document_id": 287623}]}, {"paragraphs": [{"qas": [], "context": "Policy on Textbook Choice | Policy on Textbook Choice The choice of textbook in undergraduate courses is made by the department\u2019s Curriculum Committee. An instructor who wants to change textbook from what was used the prior term should submit a proposal to the Curriculum Committee, identifying the new book, and explaining why the new book is believed to be better than the old one. The choice of textbook in graduate courses is made by the faculty member who teaches the course.", "document_id": 287631}]}, {"paragraphs": [{"qas": [], "context": "Policy on Tutors | Policy on Tutors This department discourages the use of tutors. Students who have problems in a course should first contact their instructor. A student who needs a modest amount of individual help should get it from the instructor and teaching assistants for the course. While we cannot prevent a student from hiring a tutor, we will not endorse or recommend anyone as a tutor, nor will we act as intermediary for students attempting to locate a tutor. This policy is based on the following considerations: We want to hear if students are having trouble in a course. If a student has the prerequisites for a course and is putting in the expected level of effort, and if the course is being taught well enough, there should be no need for a tutor. When students hire tutors instead of going to the instructor or department administration to solve their problems it can make it appear to the instructor and the department that everything is going well when in fact it is not. For example: if there is a need to spend more time teaching a particular topic, the instructor needs to find out; if the student is missing necessary background, it may be best for the student to switch to another course; if the instructor is not doing the job well, the department chair should hear about it. In short, if there is a serious problem we want to be informed of it and to solve it. This is the main reason for the policy. We cannot guarantee the competence of a tutor. An incompetent or misinformed tutor could do a student academic harm. Student problems are often very specific to material that is covered in class, or that is related to a programming assignment. Since tutors do not attend the class meetings, they will not be well informed. If a student hires a tutor and the tutor teaches the student something different from what the instructor is teaching, the student will suffer. We have seen cases of tutors helping students do programming assignments. This is a big temptation for the student and the tutor, since it is much quicker and easier to show a person how to solve a specific homework problem or programming assignment than it is to help the student learn the skills needed to solve the problem on his/her own. When this happens it is bad in two ways: It is a violation of the FSU Academic Honor Code . The student\u2019s final grade suffers. Since the learning objectives of the assignment are not accomplished, the student will not have the knowledge and skills to pass the examinations. This can result in a student having even an \u201cA\u201d average on homework and failing the course. (It is common for courses to have a policy that examination grades must be at least passing in order for a student to pass a course, no matter how high the grades on unsupervised work.) Using a tutor in a college course is unfair to other students, in the sense that it gives students with extra money an advantage over students who might work as hard or harder but who have less money to spend. Note: The policy of discouraging the use of tutors does not apply to accommodations for disabilities that are approved by the Student Disability Resource Center . If such a student wants to find a tutor, there are usually some upper level undergraduate students and graduate students who are willing to serve as tutors. Notices soliciting and offering tutoring services show up on bulletin boards in the Love Building from time to time.", "document_id": 287632}]}, {"paragraphs": [{"qas": [], "context": "COMPUTATIONAL BIOLOGY DEGREE REQUIREMENTS | COMPUTATIONAL BIOLOGY DEGREE REQUIREMENTS College: Arts and Sciences Degree: B.S. Limited Access: No Contact: Computer Science: Kimberly Pack Address: C.S.: 203C Love Bldg.; Tallahassee, FL 32306-4530 Phone: C.S.: (850) 644-8700 Email: C.S.: advisor@cs.fsu.edu Note to prospective transfer students. Prospective transfer students should contact as-admissions@fsu.edu (Arts & Sciences Admissions) with specific questions about admission and mapping requirements. Description of Major Computational biology is a new and promising field of study. The purpose of this interdisciplinary major is to provide a top-notch educational program for students interested in the areas of computational biology and bioinformatics. The program seeks to achieve two goals: 1) to develop an understanding of the issues associated with developing biologically meaningful computational models, and 2) to give students the broad-based education that is needed to create a set of models directed towards solving a practical biomedical problem. This major is offered through the Computer Science departments. The Biological Science department has a separate Computational Biology degree with different degree requirements. Please see the Biological Science department for degree requirements. Prerequisite Coursework: BSC X010 (3,) General Biology I or equivalent BSC X011 (3) General Biology I or equivalent CHM X045, X045L (3, 1) General Chemistry I & Lab or equivalent CHM X046, X046L (3, 1) General Chemistry II & Lab PHY X053, X053L (4) or PHY X048, X048L (4) College or General Physics A with lab MAC X311 (4) Calculus I MAC X312 (4) Calculus II Interested students are encouraged to contact the participating departments regarding completion of these courses. Strongly recommended: Students interested in this major are encouraged to complete an introductory programming course in C++ or equivalent during their freshman/sophomore years. Note: State-wide common prerequisites are always under review. For the most current information and for acceptable alternative courses, visit the \u201cCommon Prerequisites Manual.\u201d This is available from the \u201cStudent Services\u201d section of http://www.flvc.org . Requirements for graduation in the College of Arts and Sciences include : The College of Arts and Science requires proficiency in a foreign language through the intermediate (2220 or equivalent) level or sign language through the advanced (2614 or equivalent) level. Requirements for Progression to the Upper-Division Major Students must complete at least 52 semester hours of credit with a minimum grade point average of 2.0, at least half the required Liberal Studies hours including English and mathematics, or an A.A. Degree. Mapping Mapping is FSU\u2019s academic advising and monitoring system. Academic progress is monitored each Fall and Spring semester to ensure that students are on course to earn their degree in a timely fashion. Transfer students must meet mapping guidelines to be accepted into their majors. View the map for this major at www.academic-guide.fsu.edu/ . Major Program of Studies at FSU: 43 hours All courses applicable to the major must be completed with a grade of C- or better. Required Biological Science Courses (9 hours) BSC 2010 (3) Biological Science I BSC 2011 (3) Biological Science II PCB 3063 (3) Genetics Required Computer Science Courses (16 hours) COP 3014 (3) Programming I COP 3353 (1) Introduction to UNIX COP 3330 (3) Object-Oriented Programming CDA 3100 (3) Computer Organization I COP 4530 (3) Data Structures, Algorithms, and Genetic Programming COP 4531 or CIS 4930 Algorithms for CompBio. Additional Elective Courses (18 hours) Eighteen (18) hours of electives chosen from Biology, Computer Science, Math and/or Statistics. The Computer Science electives may be chosen from CDA 3101, COP 4531, COP 4710, COP 4420, and CIS 4900r. Biology electives are chosen from BOT 4394, BSC 2010L, BSC 2011L, BSC 4613, BSC 4900r, BSC 4933, MCB 4403, MCB 4403L, PCB 3134, PCB 3743, PCB 4024, PCB 4233, PCB 4253, PCB 4674, or PCB 4843. The math electives are chosen from MAC 2312, MAC 2313, MAP 2480, or MAP 4481. The Statistics electives are chosen from STA 4102, STA 4103, STA 4202, STA 4203, STA 4502, or STA 4702. Collateral Courses : 27-28 hours All collateral courses must be completed with a grade of C- or better. Mathematics/Statistics (14 hours) MAC 2311 (4) Calculus with Analytical Geometry I MAC 2312 (4) Calculus with Analytical Geometry II MAD 2104 (3) Discrete Mathematics STA 2171 (3) Statistics for Biology Physics, one of the following series (4 or 5 hours) PHY 2053C (4) College Physics A with Lab or PHY 2048C (5) General Physics A with Lab Chemistry (8 hours) CHM 1045 and 1045L (3,1) General Chemistry I and Lab CHM 1046 and 1046L (3,1) General Chemistry II and Lab Minor Requirements: The required collateral courses in mathematics constitute a minor; however, the student may select other minors in consultation with an advisor. Computer Skills Competency: 0 hours beyond major. COP 3014 (3). Oral Communication Competency: 0-3 hours Students must demonstrate the ability to orally transmit ideas and information clearly. This requirement may be met through appropriate high school speech training or with an approved college-level course. Minimum Program Requirements \u2013 Summary Total Hrs. Required 120 Liberal Studies *36 Prerequisite Coursework 0 beyond other requirements Major Coursework 43 Collateral Coursework 27-28 Minor Coursework 0 beyond collateral courses Foreign Language 0-12 (depending on placement) Computer Skills 0 beyond major Oral Communication Competency 0-3 Electives to bring total hours to 120 *Some coursework completed for this major may also apply toward Liberal Studies in the areas of Mathematics and Science. Remarks: 1. A minimum of 45 hours at the 3000 level or above, 30 of which must be taken at this University. 2. Half of the major course semester hours must be completed in residence at this University. 3. The final 30 hours must be completed in residence at this University. Employment Information Salary Information: National Association of Colleges and Employers , Occupational Outlook Handbook Representative Job Titles Related to this Major : Computational Biologist, Bioinformatics Specialist, Biotechnologist, Pharmaceutical/Medical Researcher, Forensic Scientist, Molecular Medicine Specialist, Comparative Genomics Scientist, Genetic Engineer, Human Geneticist, and Genome Analyst, Programmer, Systems Analyst, Software Engineer, Data Processing System Manager, Network Administrator. Representative Employers : Pharmaceutical Companies, Healthcare Providers, Medical Laboratories, Biotechnology Companies, Law Enforcement Agencies, Colleges and Universities, State and Federal Government, Software Development Companies. Updated: Summer 2015", "document_id": 287640}]}, {"paragraphs": [{"qas": [{"question": "What minimum GPA do I need to keep for the Cyber Criminology degree?", "id": 162520, "answers": [{"answer_id": 227045, "document_id": 287642, "question_id": 162520, "text": "minimum cumulative GPA of 2.0", "answer_start": 2618, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}, {"question": "What are the proficiency in foreign language requirements?", "id": 162521, "answers": [{"answer_id": 227047, "document_id": 287642, "question_id": 162521, "text": "proficiency in a foreign language through the intermediate (2220 or equivalent) level or sign language through the advanced (2614 or equivalent) level", "answer_start": 3098, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}, {"question": "What is Rahlia Arshad's email?", "id": 162098, "answers": [{"answer_id": 226588, "document_id": 287642, "question_id": 162098, "text": "rarshad@fsu.edu", "answer_start": 373, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "CYBER CRIMINOLOGY (CSD) DEGREE REQUIREMENTS | CYBER CRIMINOLOGY (CSD) DEGREE REQUIREMENTS College: Criminology and Criminal Justice Arts and Sciences Degree: B.S. B.S. Limited Access: No No Contact: Rahila Arshad Lauren Higbee Address: Hecht House, FSU 203C Love Bldg, FSU Tallahassee, Fl 32306-1127 Tallahassee, FL 32306-4530 Phone: (850) 644-6676 (850) 644- 8700 E-Mail: rarshad@fsu.edu higbee@cs.fsu.edu Note to prospective transfer students. Prospective transfer students should contact as-admissions@fsu.edu (Arts & Sciences Admissions) with specific questions about admission and mapping requirements. Description of Major Criminology and Criminal Justice and Computer Science have collaborated to offer this new interdisciplinary degree in Cyber Criminology. Information-related crime, cyber-forensics, and computer/network security are significant issues that affect all levels of business, government, and academia. Cyber criminology includes both how to use computers to facilitate the study of crime and the study of how crimes are accomplished through the use of computers. Students will be prepared to do graduate work and research in this area, or to be effective employees of government, law enforcement, and industry, thereby filling the pressing need for information technology specialists who can address these issues. Prerequisite Coursework The following may also be used to meet Liberal Studies and/or major requirements COP XXXX (3) Computer Programming MAC X105 (3) College Algebra MAC X140 (3) Precalculus Note: State-wide common prerequisites are always under review. For the most current information and for acceptable alternative courses, visit the \u201cCommon Prerequisites Manual.\u201d This is available from the \u201cStudent Services\u201d section of http://www.flvc.org . Requirements for Progression to the Upper-Division Major Students must complete at least 52 hours of credit with a minimum grade point average of 2.0 and at least half the required Liberal Studies hours including English and mathematics or an A.A. Degree. Cyber Criminology is not limited access. Mapping Mapping is FSU\u2019s academic advising and monitoring system. Academic progress is monitored each Fall and Spring semester to ensure that students are on course to earn their degree in a timely fashion. Transfer students must meet mapping guidelines to be accepted into their majors. You may view the map for this major at www.academic-guide.fsu.edu/ . Continuation in the major Students must earn a C or better in CCJ 2020, CCJ 3011 and CCJ 4700 and a C- or better in all other courses that count toward the major, and maintain a minimum cumulative GPA of 2.0. Students may choose to graduate through the Computer Science department in the College of Arts and Sciences or through the College of Criminology and Criminal Justice. Each of these colleges has special graduation and/or continuation requirements. Requirements for graduation in the College of Arts and Sciences Those choosing to pursue this major through Computer Science in the College of Arts and Sciences must meet the college\u2019s requirement for proficiency in a foreign language through the intermediate (2220 or equivalent) level or sign language through the advanced (2614 or equivalent) level. Those choosing to graduate through Criminology and Criminal Justice do not need a foreign language. Continuation/graduation requirements in the College of Criminology and Criminal Justice Students electing to pursue this major through the College of Criminology and Criminal Justice who earn more than four grades below C- in Cyber Criminology coursework and/or prerequisites, whether taken at Florida State University or elsewhere, whether repeated or not, will not be permitted to continue or graduate in this major. Major Program of Studies at FSU: 52 hours Required Computer Science Courses (25 hours) COP 3014 (3) Programming I COP 3353 (1) Introduction to UNIX COP 3330 (3) Object Oriented Programming CDA 3100 (3) Computer Organization I CIS 4385 (3) Cybercrime Detection and Forensics (capstone course) Computer Science elective courses (12 hrs) selected from the approved list: CDA 3101, CIS 4360, CIS 4361, CNT 4406, CNT 4504, CNT 4603, COP 4342, COP 4530, COP 4610, COP 4710. Required Criminology Courses (24 hours) CCJ 2020 (3) Introduction to Criminal Justice CCJ 3011 (3) Criminology CCJ 4700 (3) Introduction to Research Methods in Criminology CJE 3110 (3) Law Enforcement CCJ 4938 (3) CJ System Responses to Cybercrime (capstone course) And criminology elective courses (9 hrs) selected from the approved list: CCJ 3644, CCJ 3666, CCJ 4497, CCJ 4614, CJC 3010, CJE 4610, CJJ 4010, CJL 3510, CJL 4064. Required Mathematics Course (3) MAD 2104 (3) Discrete Mathematics Minor: a minor is not required. Requirements for graduation in the College of Arts and Sciences : Students may choose to graduate through either the College of Criminology and Criminal Justice or the College of Arts and Sciences. Those choosing the Arts and Sciences option must meet the college\u2019s requirement for proficiency in a foreign language through the intermediate (2220 or equivalent) level or sign language through the advanced (2614 or equivalent) level. Those choosing to graduate through Criminology and Criminal Justice do not need a foreign language. Computer Skills Competency: 0 beyond major: COP 3014 (3). Oral Communication Competency: 0-3 hours. Students must demonstrate the ability to orally transmit ideas and information clearly. This requirement may be met through appropriate high school speech training or with an approved college-level course such as SPC 1017 or SPC 2608. Minimum Program Requirements \u2013 Summary Total Hrs. Required 120 Liberal Studies 36* Prerequisite Coursework* 0 beyond other requirements Major Coursework 52 Minor Coursework 0 Foreign Language 0-12 (language proficiency required of Arts and Sciences students) Computer Skills 0 beyond major Oral Competency 0-3 hours Electives to bring total hours to 120 *Prerequisite courses in mathematics may also be counted as part of Liberal Studies and COP 3014, a required course in the major, may also be used to meet the computer programming prerequisite. Remarks: 1. A minimum of 45 hours at the 3000 level or above, 30 of which must be taken at this University. 2. Half of the major course semester hours must be completed in residence at this University. 3. The final 30 hours must be completed in residence at this University. Employment Information Salary Information: National Association of Colleges and Employers , Occupational Outlook Handbook Graduates of the program will be prepared to work either for law enforcement agencies as information crime specialists (sworn or unsworn) or within companies or organizations as network security specialists. Updated: Summer 2015", "document_id": 287642}]}, {"paragraphs": [{"qas": [{"question": "What's the minimum GPA to get into the Computer Science BS?", "id": 162540, "answers": [{"answer_id": 227075, "document_id": 287644, "question_id": 162540, "text": "The minimum GPA for acceptance is 2.65 ", "answer_start": 5012, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "COMPUTER SCIENCE BS DEGREE REQUIREMENT | COMPUTER SCIENCE BS DEGREE REQUIREMENT College: Arts and Sciences Degree: B.S. Limited Access: Yes Contact: Lauren Higbee Betty Stanton (distance learning/online) Address: 203 Love Building 1017 Academic Way Tallahassee, FL 32306-4530 Phone: (850) 644-8700 (Higbee); (850) 645-0056 (Stanton) Email: advisor@cs.fsu.edu (Higbee) stanton@cs.fsu.edu (Stanton) Note to prospective transfer students. Prospective transfer students should contact as-admissions@fsu.edu (Arts & Sciences Admissions) with specific questions about admission and mapping requirements. Description of Major This major provides a broad-based background sufficient for entry to a career in computing. It provides a systems view of computing, emphasizing the interdependence of design, object orientation, and distributed systems and networks, from basic software through systems design. This major develops core competencies in programming, database structure, computer organization, and operating systems. It allows opportunities to study a range of other aspects of computer and information science, such as information security, data communication/ networks, computer and network systems administration, theoretical computer science, and software engineering. Every student can expect to become proficient at programming in C , C++, and Assembly Language. Additionally, students will be exposed to other languages such as Java, C#, Ada, Lisp, Scheme, Prolog, Perl, and HTML. This major is available on campus or through Distance Learning. The coursework required for this major includes an embedded collateral minor in mathematics and physical sciences. It is ABET/CAC accredited and is intended to be sufficient for entry to a graduate program in computer science. Internet Supported Distance Learning The programs available through internet-supported distance learning are degree programs that enable students with an Associate in Arts (A.A.) degree from a Florida public institution to earn an FSU bachelor\u2019s degree without moving to Tallahassee. The programs are designed for part time study. Each student receives access to a course Web site and the e-mail addresses of everyone associated with the class. A unique feature of the distance learning programs is the support FSU provides through an assigned Mentor. Mentors serve as learning guides, helping to facilitate each individual student\u2019s success. Students interact with each other, their Mentors, and their instructors via e-mail, Web-based discussion pages, and telephone calls. Students interested in Distance Learning should contact the Office of Distance Learning (ODL). For more information contact (877) FLSTATE or visit the web at https://distance.fsu.edu . Prerequisite Coursework: BS program in Computer Science The following must be completed with a grade of C- or higher. These courses may be taken as part of Liberal Studies or as general electives. COP XXXX (3) Introductory Programming in C, C++, JAVA or equivalent language (C++ preferred) XXX XXXX (2-4) One science course for science majors (contact department for a list of acceptable courses) MAC X311 (4) Calculus I MAC X312 (4) Calculus II One of the following series PHY X048C (4-5) General Physics A and PHY X049C (4-5) General Physics A and B or equivalent with lab, or * BSC X010 (3) and BSC X011(3) and CHM X045C (4) * Students selecting this option may satisfy the \u201cOne science course\u201d requirement by completing BSC X010L and BSC X011L. Note: State-wide common prerequisites are always under review. For the most current information and for acceptable alternative courses, visit the \u201cCommon Prerequisites Manual.\u201d This is available from the \u201cStudent Services\u201d section of http://www.flvc.org . Requirements for graduation in the College of Arts and Sciences include : The College of Arts and Science requires proficiency in a foreign language through the intermediate (2220 or equivalent) level or sign language through the advanced (2614 or equivalent) level. Foreign language courses are not available via distance learning. Admissions/Continuation Requirements to the Major Program of Studies : Students should complete the prerequisite coursework with the grade of \u201cC-\u201d or higher in to be considered for entrance to the major program of study. Students must also have completed a minimum of 52 hours of credit and at least half the required hours in Liberal Studies including required English and Math, or an A.A degree. Distance Learning students must complete the A.A. from a Florida public institution, required prerequisites, and a Supplemental Admissions Application prior to admission. Distance Learning students should also complete the oral competency requirement and the College of Arts and Sciences foreign language requirement prior to admissions. In accordance with the University residency rule, degree requirements not available online must be completed prior to the final 30 hours of the degree. The Computer Science major is limited access. The minimum GPA for acceptance is 2.65 and students in the program must maintain a 2.5 GPA. A student who has accumulated more than 5 grades below a C- (including grades of U) in Mathematics, Statistics, natural science or computer science courses taken for college credit at FSU or elsewhere, whether reated or not, will not be permitted to continue as a major in the department. Mapping Mapping is FSU\u2019s academic advising and monitoring system. Academic progress is monitored each Fall and Spring semester to ensure that students are on course to earn their degree in a timely fashion. Transfer students must meet mapping guidelines to be accepted into their majors. You may view the map for this major at www.academic-guide.fsu.edu . Major Program of Studies at FSU: 60 hours COP 3014 (3) Programming I COP 3353 (1) Introduction to UNIX COP 3330 (3) Object-Oriented Programming CDA 3100 (3) Computer Organization I CDA 3101 (3) Computer Organization II CEN 4020 (3) Software Engineering I CEN 4021 (3) Software Engineering II CIS 4250 (3) Ethics in Computer Science (meets oral competency requirement) COP 4020 (3) Programming Languages COP 4610 (3) Operating Systems & Concurrent Programming COP 4530 (3) Data Structures, Algorithms, and Generic Programming COP 4531 (3) Complexity and Analysis of Data Structure and Algorithms COP 4710 (3) Theory and Structure of Databases COT 4420 (3) Theory of Computation 2-3 hours of a computer science elective that covers an upper-division programming language for CS majors not presented in the required course offerings 3 hours computer science or advanced math elective with a prerequisite of MAC 2312 or MAD 3105 6 hours of 4000-level computer science electives (not including CIS 4900) MAD 2104 (3) Discrete Mathematics I MAD 3105 (3) Discrete Mathematics II STA 4442 (3) Introduction to Probability (may substitute STA 4321 or STA 3032) Minor. The prerequisite courses in mathematics and physics constitute a collateral minor. Computer Skills Competency: 0 hours beyond major. COP 3014. Oral Communication Competency: 0 hours beyond major. CIS 4250 (3). This requirement may also be met through appropriate high school speech training or another college-level approved course, such as SPC 1017 or SPC 2608. Minimum Program Requirements \u00adSummary Total Hrs. Required 120 Liberal Studies 36* BS Prerequisite Coursework 27* BS Major Coursework 60 Minor Coursework 0-12 or more Foreign Language 0-12 (depending on placement) Computer Skills 0 beyond major Oral Communication Competency 0-3 Electives to bring total hours to 120 *Note: Some prerequisite coursework may also be applied to Liberal Studies requirements in math and science. Remarks: 1. A minimum of 45 hours at the 3000 level or above, 30 of which must be taken at this University. 2. Half of the major course semester hours must be completed in residence at this University. 3. The final 30 hours must be completed in residence at this University. Employment Information Salary Information: National Association of Colleges and Employers , Occupational Outlook Handbook Representative Job Titles Related to this Major : Programmer (Scientific, Business, Systems), Technical Writer, Systems Analyst, Operations-Research analyst, Software Engineer, Webmaster, Teacher of High School, Technical support Representative, Manager, Data Processing System Manager, Network Administrator, Sales Representative for Computer or Software Manufacturers. Representative Employers : Computer Firms, High Schools, Colleges and Universities, Financial Firms, Private Industry, Governmental Agencies. Updated: Summer 2015", "document_id": 287644}]}, {"paragraphs": [{"qas": [], "context": "BS Degree Program Mission, Educational Objectives & Student Outcomes (Up to Summer 2020) | BS Degree Program Mission, Educational Objectives & Student Outcomes (Up to Summer 2020) The following information is applicable from Fall 2019. For previous information please check this link. The primary mission of the undergraduate program in Computer Science is to provide a high quality undergraduate educational program. To this end, the department seeks continually to strengthen the faculty and the education program to assure that students are well prepared for careers in the field of Computer Science. The Computer Science department\u2019s Bachelor of Science in Computer Science degree program is accredited by the Computing Accreditation Commission of ABET, http://www.abet.org . ABET is the recognized accrediting body of college and university programs in engineering, computing, technology and applied science. Our BS CS program is characterized by Program Educational Objectives and Student Outcomes. The program educational objectives describe expected accomplishments of our graduates of the BS program and is consistent with the mission of the department. The student outcomes define the criteria that prepare students to attain the program objectives. The department periodically assesses and evaluates the BS curriculum for consistency with each student outcome and educational objective with the goal to ensure that each student outcome can be attained. This regular evaluation is used to identify program weaknesses, put improvements in place and re-evaluate the effectiveness of those improvements; resulting in continuous improvement of the program. This assures that our students receive a high-quality education. Departmental Mission Statement To strive for excellence in advancing, applying, and imparting knowledge in computer science through comprehensive educational programs, research in collaboration with industry and government, and dissemination through scholarly products; To produce outstanding computer science professionals who have the fundamental knowledge, problem-solving skills, and life-long learning capability to advance their careers; To disseminate computer science knowledge to students and professionals in other disciplines, and To provide service to the university community, professional societies, local communities, the state, and the nation. The program educational objectives for the Bachelors of Science degree program in Computer Science is to produce graduates who will: Goal 1: Problem solving and presentation Engage in the practice of computer science to identify and solve significant problems across a broad range of application areas, and communicate these solutions professionally. Goal 2: Theoretical foundations Apply sound principles of the theoretical foundations and mathematical bases of computer science in solving complex problems. Goal 3: Impact and Responsibility Embrace the breadth of impact of computing on society, and apply ethical, social and professional responsibilities in the profession. Goal 4: Life-long learning Adapt to new technologies, tools and methodologies to remain at the leading edge of computer science developments and practice in the profession and in the academic field. BS Degree Student Outcomes ABET/CAC Outcomes Note that SMALC/SACS outcomes are defined right after these outcomes. A1. Analyze a complex computing problem and to apply principles of computing and other relevant disciplines to identify solutions. SMALC/SACS outcome: SA A2. Design, implement, and evaluate a computing-based solution to meet a given set of computing requirements in the context of the program\u2019s discipline. SMALC/SACS outcome: SB A3. Communicate effectively in a variety of professional contexts. SMALC/SACS outcomes: SC and SD A4. Recognize professional responsibilities and make informed judgements in computing practice based on legal and ethical principles. SMALC/SACS outcome: SE A5. Function effectively as a member or leader of a team engaged in activities appropriate to the program\u2019s discipline. SMALC/SACS outcome: SF A6. Apply computer science theory and software development fundamentals to produce computing-based solutions. SMALC/SACS outcomes: SG and SH The acceptance and use of the program educational objectives and student outcomes of the BS degree program are periodically assessed by the CS faculty, by the CS Board of Advisors, and by the officers of the FSU ACM Student Chapter. SMALC/SACS FSU Institutional Effectiveness Outcomes The Florida State University is accredited by the Southern Association of Colleges and Schools (SACS). The accreditation standards require the use of the State Mandated Academic Learning Compacts (SMALC) to define the student outcomes. The SMALC/SACS outcomes SA to SH to attain the learning outcomes listed below: SA) Programming Competence: Upon completion of the program, the student will be able to design and create a programming solution for a problem. Assessment: A programming assignment in COP4530. SB) Software Analysis and Development: Upon completion of the program, the student will be able to analyze the requirement of a complex software system and to design and develop the system based on the requirement. Assessment: capstone group project in revised CEN4020. SC) Technical Writing: Upon completion of the program, the student will be able to produce a technical document, written to professional standards. Assessment: a writing assignment in CIS3250 SD) Oral Presentation: Upon completion of the program, the student will be able to formulate and deliver an effective oral presentation on a technical software-related subject or a research topic. Assessment: a presentation assignment in revised CEN4020. SE) Ethics and Responsibility: Upon completion of the program, the student will be able to explain the professional, ethical, legal, security and social issues and responsibilities of a computing professional. Assessment: assignment or exam in CIS3250. SF) Teamwork: Upon completion of the program, the student will be able to function effectively as a team member or leader in the analysis, design, and implementation of a software system. Assessment: capstone group project in revised CEN4020. SG) Computing Theory: Upon completion of the program, the student will be able to apply computing theory and fundamentals to decide the computability of a problem. Assessment: an assignment in COT4420 SH) Computational Complexity: Upon completion of the program, the student will be able to analyze the computational complexity of algorithms used in the solution of a programming problem, and to evaluate the performance trade-offs of alternative data structures and algorithms. Assessment: an assignment in COP4530 The SMALC/SACS outcomes for the BS degree are related to the ABET/CAC student outcomes as follows. SMALC/SACS FSU Institutional Effectiveness Outcomes ABET/CAC mapping SA. Programming Competence A1 SB. Software Analysis and Development A2 SC. Technical writing A3 SD. Oral Presentation A3 SE. Ethics and Responsibility A4 SF. Teamwork A5 SG. Computing Theory A6 SH. Computational Complexity A6 Undergraduate Enrollment and Degrees Awarded Comprehensive and update-to-date data about enrollments and degrees awarded are available interactively at https://ir.fsu.edu/ (Select Student Information and then Interactive Enrollment Reports and Degrees Awarded). Our program is in the College of Arts and Sciences and the major is BS in Computer Science). Data can be broken down based on Colleges, Departments, Majors, and so on. Year Enrollment Degrees Awarded 2018 610 95 (Summer 2019 not included) 2017 606 127 2016 619 100 2015 548 97 2014 531 79", "document_id": 287646}]}, {"paragraphs": [{"qas": [{"question": "What should I take to satisfy general degree requirements?", "id": 162574, "answers": [{"answer_id": 227119, "document_id": 287650, "question_id": 162574, "text": "In general, given the number of prerequisites CS majors must complete, we advise students to find liberal studies courses that satisfy multiple requirements at the same time.", "answer_start": 1329, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "Web Advisor | Web Advisor This Web Advisor is designed to complement the traditional advising process in Computer Science. All students in the CS department should meet with their Computer Science Undergraduate Academic Advisor prior to registration to discuss their options for the upcoming semester(s). There are four different degree programs within the Computer Science Department at FSU: the B.S. in Computer Science, the B.A. in Computer Science, the B.S. in Cyber Criminology, and the B.S. in Computational Biology. Please review the Undergraduate Program webpage for detailed information on each of these majors. Computer Science Academic Maps An Academic Map is available to assist students in creating schedules for any major at FSU. This plan is based upon the current course requirements and is subject to change. You may use this four-year plan as a general guide, but always check with your Computer Science Academic Advisor at least two weeks prior to your registration date to verify that you are taking the best classes for you. Liberal Studies & Other General Degree Requirements Complete information on Liberal Studies, Oral Competency, Computer Competency, and the \u201cX\u201d and \u201cY\u201d Multicultural Requirements can be found through the Division of Undergraduate Studies and the latest version of It\u2019s All Academic . In general, given the number of prerequisites CS majors must complete, we advise students to find liberal studies courses that satisfy multiple requirements at the same time. For example, a given humanities course might be literature-based (*), Gordon Rule (w), and Cross Cultural (x). The following includes some notes about how CS students typically complete Liberal Studies and other general requirements: Math : This is satisfied through the math courses any CS student will take for their degree. Natural Science : BS in CS and Computational Biology students have specific Natural Science courses they must take for their respective degree programs. Other degree programs have more flexibility. English Composition : Students must complete the freshman composition sequence within their first year at the University. This is a mapping requirement. History : Possible source of \u201cx\u201d or \u201cy\u201d courses. Likely source of \u201cw\u201d Gordon Rule writing courses. Social Science : Possible source of \u201cx\u201d or \u201cy\u201d courses, as well as a few \u201cw\u201d Gordon Rule writing courses. Humanities/Fine Arts : Possible source of \u201cx\u201d or \u201cy\u201d courses. Likely source of \u201cw\u201d Gordon Rule writing courses. Oral Communication Competency Requirement : CIS 4250 Ethics and Computer Science meets the Oral Competency requirement of the University. This is a required course for BS in CS majors. x (Cross Cultural) and y (Western Diversity) multicultural courses. Select at least one \u201cx\u201d course and one \u201cy\u201d course when selecting your History/Social Science and Humanities/Fine Arts courses. You can find out which courses are \u201cx\u201d and \u201cy\u201d in It\u2019s All Academic . Gordon Rule (Writing) Courses: Gordon Rule classes are designated by a \u201cw\u201d in It\u2019s All Academic . College of Arts and Science Requirements The Computer Science Department is part of the College of Arts and Sciences. In addition to University requirements, students with major codes within Arts and Sciences must meet College of Arts and Sciences requirements . What Math Do I Take Next? Select your HIGHEST math course \u201cpassed/accepted\u201d after the current semester, whether taken at FSU or accepted by dual enrollment, AP scores, or SAT/ACT scores. This is your next math course:", "document_id": 287650}]}, {"paragraphs": [{"qas": [{"question": "Can I get a part-time job coding while going to school?", "id": 162583, "answers": [{"answer_id": 227130, "document_id": 287652, "question_id": 162583, "text": "A high percentage of our undergraduate students have part time jobs due to the high demand for their skills even before they graduate. ", "answer_start": 622, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}, {"question": "Are graduates well paid?", "id": 162584, "answers": [{"answer_id": 227131, "document_id": 287652, "question_id": 162584, "text": "our graduates are well paid.", "answer_start": 765, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "WHY MAJOR IN COMPUTER SCIENCE | WHY MAJOR IN COMPUTER SCIENCE There are several very good reasons to major in computer science. First, our majors rarely have any trouble finding jobs (click for details) . Computer programming and related skills are more in demand every year and the demand for skilled computer scientists far exceeds the supply as shown in the graph below. These skills are also becoming essential in a wide variety of other disciplines, including almost every area of science and engineering. Computer science related jobs in the United States are still increasing, despite offshoring of some positions. A high percentage of our undergraduate students have part time jobs due to the high demand for their skills even before they graduate. Second, our graduates are well paid. Please peruse the information shown below on this page. While the starting salaries for computer scientists can vary over the years, it has consistently been one of the best paying majors for the last several decades. The graph at the bottom of the page shows that the salaries for new graduates in Computer Science has continued to rise and is the best paying profession for the most popular college majors. Last and most importantly, computer science is fun. Programming is similar to solving a puzzle. Once you get the knack of doing it, the process becomes fun. However, computer science is far more than just programming. Keep reading if you wish to know more about our program and peruse our web pages for a description of the courses in the degree. Sources: Tabulated by National Science Foundation/Division of Science Resources Statistics; degree data from Department of Education/National Center for Education Statistics: Integrated Postsecondary Education Data System Completions Survey; and NSF/SRS: Survey of Earned Doctorates; Projected Annual Average Job Openings derived from Department of Commerce (Office of Technology Policy) analys of Bureau of Labor Statistics 2002-2012 projections In computer science education, whether graduate or undergraduate, currency is essential. Computer science is an exceptionally fast-moving field where knowledge is subject to rapid obsolescence and ideas progress swiftly from research to practice. The department therefore seeks to offer technical instruction that stays on the cutting edge of new developments while simultaneously providing each student with a core of intellectual tools that will never become obsolete. The department views skills in communication, mathematics, and algorithmic reasoning as central and the understanding of underlying principles as more important than familiarity with specific technical products. Still, direct hands-on experience is essential to mastering these skills and principles. If students are to be adequately prepared for careers in computer science, they should have extensive experience with machines and software that are state-of-the-art. Salaries in this Field Job Title Average Salary* Computer Scientist/Engineer $70,590 Systems Analyst $59,180 Computer Programmer $50,590 Source: Tallahassee Democrat, Wednesday, Sept. 26, 2005 Click here for Details Facts 67.3% of Scientists employed in the United States are Computer Scientists. 31.8% of Technicians employed in the United States are Computer Programmers. 5.4% of Engineers employed in the United States are Computer Engineers. Computer related employment accounts for 40.4% of all Scientists, Engineers and Technicians in the United States. Computer Scientists are paid $3,258 (5.1%) more than the average Scientist. Computer Engineers are paid $8,656 (13.2%) more than the average Engineer. Computer Programmers are paid $14,977 (31.9%) more than the average Technician. Source: National Science Foundation, Division of Science Resources Statistics, Scientists, Engineers, and Technicians in the United States: 2001, NSF 05-313, Project Officer, Richard E. Morrison with Maurya M. Green (Arlington, VA 2005).Published May 2005 www.nsf.gov Compared to Other Careers Job Title Average Starting Salary Chemical Engineer $54,256 Electrical Engineer $52,009 Computer Science $51,496 Mechanical Engineering $51,046 Aerospace Engineering $50,071 Industrial Engineering $49,541 Accounting $43,809 Information Sciences $43,732 Civil Engineering $43,462 Economics/Finance $42,802 Business Administration $39,448 Marketing $37,882 Liberal Arts $30,337 Source: CNN.com Computer Science has consistently ranked among the top starting salaries of all graduating degress. This year, average salary was again up by 2.6% and the starting pay was 17% greater than the average starting salary for a degree in information sciences (Source: CNN.com ). (Source: \u201cThe World,\u201d Time Magazine, August 11, 2008.) Links to More Surveys PayScale Survey National Association of Colleges & Employers (NACE) Salary Survey (at VT)", "document_id": 287652}]}, {"paragraphs": [{"qas": [{"question": "What are the requirements to become a mentee?", "id": 162598, "answers": [{"answer_id": 227148, "document_id": 287654, "question_id": 162598, "text": "Students interested in becoming a mentee must be within their first two years of the program, and not have taken COP 4530, Data Structures. ", "answer_start": 3822, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}, {"question": "Can I join WiCS if I'm a guy?", "id": 162600, "answers": [{"answer_id": 227150, "document_id": 287654, "question_id": 162600, "text": ". Students of any sex or gender identity are welcome to apply. ", "answer_start": 4185, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "Women in Computer Science | Apply to be a Mentor Apply to be a Mentee Overview: Beginning in Spring 2018, the Computer Science department will be addressing the issue of low representation of women in Computer Science through a series of departmental initiatives. The primary initiative is the creation of Women in Computer Science (WiCS). This organization is a social and professional group geared at helping to advance women in the department and the field at large through a departmental mentorship program, creating a network to connect students to alumni, and hosting monthly guest speaker and student social events designed to help support and connect students. The Need: In Fall 2017, there were 24.9% undergraduate females and 75.1% undergraduate males enrolled in the Computer Science department at Florida State University, or about a 1:3 ratio of undergraduate females to males. While this number is low, it is higher than the national average 17.9% of women who graduated with a Computer Science bachelor\u2019s degree in 2016 (Zweben and Bizot, 2016). While the Computer Science field is booming, the number and proportion of Computer Science degrees earned by women has decreased in the past 10 years (National Science Foundation, 2017). In the Computer Science department at Florida State University, we do not settle for higher than the national average, and we are making equal representation in Computer Science a priority in our department. The underrepresentation of women in Computer Science raises the possibility that the field functions in a way that may prevent or hinder women from becoming a part of it (Pearl et al., 2002). Thus, it is pivotal that departments and organizations evaluate their internal practices to ensure women are receiving the support they need to enter and advance in the field. Women in Computer Science (WiCS): All students are welcome to join WiCS, even if they would not like to be a mentor or mentee. Monthly socials and guest speaker sessions will occur the second Wednesday of every month. Please keep up-to-date with the latest WiCS news by following us on Social Media ( Facebook ). WiCS Student Council: The Student Council is a group of undergraduate and graduate students interested in leading WiCS. The Student Council creates the agenda for monthly socials and guest speakers and helps to make executive decisions for the group. The WiCS Student Council also monitors and controls the Social Media pages for WiCS. Mentorship: Rationale: Research suggests there are four primary, interrelated obstacles for women in Computer Science: difficulties with self-esteem (imposter syndrome), lack of mentoring and role models, gender discrimination, and difficulties balancing career and family responsibilities (Pearl et al., 2002). It is well documented that mentorship programs help students to excel in STEM fields like Computer Science (Dennehy & Dasgupta, 2017), and are used at many colleges and universities that have higher-than-average women in Computer Science, like Carnegie Mellon (Frieze and Blum, 2002). Process: Mentees are paired with their mentors by the mentorship coordinator. Mentors are expected to reach out to their mentees within the first two weeks of receiving their mentees\u2019 contact, and are expected to meet with their mentees at least once a month outside of the monthly WiCS meeting. The goal of these meetings are to build a rapport and offer support and resources to the mentee. Who can be a mentor or mentee? Students interested in becoming a mentor must meet the following requirements: Be an undergraduate or graduate, main campus student in the Computer Science department Taking or passed COP 4530, Data Structures Have a 2.7 or higher GPA Be willing to devote the time to being a mentor (estimated ten hours a month for a semester) Students interested in becoming a mentee must be within their first two years of the program, and not have taken COP 4530, Data Structures. In other words, students may be freshmen/sophomores or transfer students in their first year. Mentorships last for one semester. After this, mentors and mentees may opt out of the program or offer to extend their mentorship. Students of any sex or gender identity are welcome to apply. How to Become a Mentor or Mentee: Download the application on the website and email it to the program coordinator at advisor@cs.fsu.edu by the deadline printed on the application. Mentors will also need to complete an interview. Selected Mentors will be notified within a week of the interview if selected. References: Pearl, A., Pollack, M.E., Riskin, E., Thomas, B., Wolf, E., & Wu, A. (2002.) Becoming a computer scientist. SIGCSE Bull. 34, 2 (June 2002), 135-143. DOI=http://dx.doi.org/10.1145/543812.543847 Frieze, C. & Blum, L. (2002). Building an effective computer science student organization: the Carnegie Mellon women@SCS action plan. SIGCSE Bull. 34, 2 (June 2002), 74-78. DOI: https://doi.org/10.1145/543812.543835 Dennehy, T.C. & Dasgupta, N. (2017). Female peer mentors early in college increase women\u2019s positive academic experiences and retention in engineering. Proceedings of the National Academy of Sciences of the United States of America, 114 (23). Doi: 10.1073/pnas.1613117114 National Science Foundation, National Center for Science and Engineering Statistics. 2017. Women, Minorities, and Persons with Disabilities in Science and Engineering: 2017. Special Report NSF 17-310. Arlington, VA. Available at www.nsf.gov/statistics/wmpd/ . Zweben, S. and Bizot, B. (2017). Generation CS continues to produce record undergrad enrollment; graduate degree production rises at both master\u2019s and doctoral levels. Computing Research News , 29 (5). Available at https://cra.org/crn/wp-content/uploads/sites/7/2017/05/2016-Taulbee-Survey.pdf Created Fall 2017, Kimberly Pack", "document_id": 287654}]}, {"paragraphs": [{"qas": [{"question": "Who should I email if I'm a transfer student?", "id": 162069, "answers": [{"answer_id": 226559, "document_id": 287635, "question_id": 162069, "text": "admissions@fsu.edu", "answer_start": 462, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}, {"question": "Can I take foreign language classes online at FSU?", "id": 162076, "answers": [{"answer_id": 226566, "document_id": 287635, "question_id": 162076, "text": "Foreign language courses are not available via distance learning at FSU. ", "answer_start": 2618, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "The BA in Computer Programming and Applications (CPApp) degree requirements | The BA in Computer Programming and Applications (CPApp) degree requirements College: Arts and Sciences Degree: B.A. Limited Access: Yes Contact: Lauren Higbee Address: 203 Love Building 1017 Academic Way Tallahassee, FL 32306-4530 Phone: (850) 644-8700 (Higbee) Email: advisor@cs.fsu.edu (Higbee) Note to prospective transfer students. Prospective transfer students should contact as-admissions@fsu.edu (Arts & Sciences Admissions) with specific questions about admission and mapping requirements. Description of Major This major provides a broad-based background sufficient for entry to a career in computing. It provides an applications view of computing, emphasizing the interdependence of programming, object orientation, and software design and engineering. This major develops core competencies in programming, data structures, software engineering, and computer organization. It allows opportunities to study a range of other aspects of computer and information science, such as web programming, mobile programming, cybersecurity, digital forensics, databases and data engineering, data communication and networks, computer and network systems administration, computer systems, and theoretical computer science. Every student can expect to become proficient at programming in C++/C, and Assembly Language. Additionally, students will be exposed to other languages such as Java, Python, C#, Objective-C, SQL, JavaScript, PHP, CSS, HTML, Scheme, and Prolog. This major is available on Tallahassee campus only. The BA in CPApp program is intended to allow students flexibility in combining computing with other interests. The BA program requires 9 hours of humanities/history beyond Liberal Studies. Students in this program should meet with an advisor to select a minor from an approved list. The BA in CPApp major is not ABET/CAC accredited and is not intended to provide sufficient preparation in computer science theory for graduate work in computer science. Prerequisite Coursework: MAC X3111 (4) Calculus I Note: State-wide common prerequisites are always under review. For the most current information and for acceptable alternative courses, visit the \u201cCommon Prerequisites Manual.\u201d This is available from the \u201cStudent Services\u201d section of http://www.flvc.org . Requirements for graduation in the College of Arts and Sciences include : The College of Arts and Science requires proficiency in a foreign language through the intermediate (2220 or equivalent) level or sign language through the advanced (2614 or equivalent) level. Foreign language courses are not available via distance learning at FSU. Admissions/Continuation Requirements to the Major Program of Studies Students should complete the prerequisite coursework with a grade of C- or higher to be considered for entrance to the major program of study. Students must also have completed a minimum of 52 hours of credit and at least half the required hours in Liberal Studies including required English and Math, or an A.A degree. The Computer Science major is limited access. The minimum GPA for acceptance is 2.65 and students in the program must maintain a 2.5 GPA. A student who does not meet these requirements will not be permitted to enter into this major or continue as a major in the department. Mapping Mapping is FSU\u2019s academic advising and monitoring system. Academic progress is monitored each Fall and Spring semester to ensure that students are on course to earn their degree in a timely fashion. Transfer students must meet mapping guidelines to be accepted into their majors. You may view the map for this major at www.academic-guide.fsu.edu . Major Program of Studies at FSU: 52 hours Computer and math courses (43 hours) COP 3014 (3) Programming I COP 3353 (1) Introduction to UNIX COP 3330 (3) Object-Oriented Programming CEN 4020 (3) Software Engineering I CDA 3100 (3) Computer Organization I COP 4530 (3) Data Structures, Algorithms, and Generic Programming 24 hours of computer science electives, including 6 hours of an upper-division programming language elective for CS majors (not presented in the required course offerings) and at least 21 hours numbered above 3000 (not including CIS 4900). MAD 2104 (3) Discrete Mathematics I Additional courses required for the BA program in Computer Science (9 hours) Nine (9) hours in the fields of humanities and/or history, in addition to the Liberal Studies and the Arts and Sciences foreign language requirement. Minor. BA in CPApp majors must complete a minimum of 12 hours in an approved minor area. Computer Skills Competency: 0 hours beyond major. COP 3014 (3) Oral Communication Competency: : 0-3 hours. Students must demonstrate the ability to orally transmit ideas and information clearly. This requirement may also be met through appropriate high school speech training or another college-level approved course, such as SPC 1017 or SPC 2608 or CIS 4250(3). Minimum Program Requirements \u00adSummary Total Hrs. Required 120 Liberal Studies 36* BA Prerequisite Coursework 9* BA Major Coursework 52 Minor Coursework 0-12 or more Foreign Language 0-12 (depending on placement) Computer Skills 0 beyond major Oral Communication Competency 0-3 Electives to bring total hours to 120 *Note: Some prerequisite coursework may also be applied to Liberal Studies requirements in math and science. Remarks: 1. A minimum of 45 hours at the 3000 level or above, 30 of which must be taken at this University. 2. Half of the major course semester hours must be completed in residence at this University. 3. The final 30 hours must be completed in residence at this University. 4. The B. A. degree requires 9 additional hours in the fields of history and humanities. Employment Information Salary Information: National Association of Colleges and Employers , Occupational Outlook Handbook Representative Job Titles Related to this Major : Programmer (Scientific, Business, Systems), Technical Writer, Systems Analyst, Operations-Research analyst, Software Engineer, Webmaster, Teacher of High School, Technical support Representative, Manager, Data Processing System Manager, Network Administrator, Sales Representative for Computer or Software Manufacturers. Representative Employers : Computer Firms, High Schools, Colleges and Universities, Financial Firms, Private Industry, Governmental Agencies. Updated: Spring 2017", "document_id": 287635}]}, {"paragraphs": [{"qas": [], "context": "COMPUTER SCIENCE BA DEGREE REQUIREMENTS | COMPUTER SCIENCE BA DEGREE REQUIREMENTS College: Arts and Sciences Degree: B.A. Limited Access: Yes Contact: Kimberly Pack Betty Stanton (distance learning/online) Address: 203 Love Building 1017 Academic Way Tallahassee, FL 32306-4530 Phone: (850) 644-8700 (Pack); (850) 645-0056 (Stanton) Email: advisor@cs.fsu.edu (Pack) stanton@cs.fsu.edu (Stanton) Note to prospective transfer students. Prospective transfer students should contact as-admissions@fsu.edu (Arts & Sciences Admissions) with specific questions about admission and mapping requirements. Description of Major This major provides a broad-based background sufficient for entry to a career in computing. It provides a systems view of computing, emphasizing the interdependence of design, object orientation, and distributed systems and networks, from basic software through systems design. This major develops core competencies in programming, database structure, computer organization, and operating systems. It allows opportunities to study a range of other aspects of computer and information science, such as information security, data communication/ networks, computer and network systems administration, theoretical computer science, and software engineering. Every student can expect to become proficient at programming in C , C++, and Assembly Language. Additionally, students will be exposed to other languages such as Java, C#, Ada, Lisp, Scheme, Prolog, Perl, and HTML. This major is available on campus or through Distance Learning. The CS/BA program is intended to allow students flexibility in combining computing with other interests. The BA program requires 9 hours of humanities/history beyond Liberal Studies. Students in this program should meet with an advisor to select a minor from an approved list. The CS/BA is not ABET/CAC accredited and is not intended to provide sufficient preparation in computer science theory for graduate work in computer science. Internet Supported Distance Learning The programs available through internet-supported distance learning are degree programs that enable students with an Associate in Arts (A.A.) degree from a Florida public institution to earn an FSU bachelor\u2019s degree without moving to Tallahassee. The programs are designed for part time study. Each student receives access to a course Web site and the e-mail addresses of everyone associated with the class. A unique feature of the distance learning programs is the support FSU provides through an assigned Mentor. Mentors serve as learning guides, helping to facilitate each individual student\u2019s success. Students interact with each other, their Mentors, and their instructors via e-mail, Web-based discussion pages, and telephone calls. Students interested in Distance Learning should contact the Office of Distance Learning (ODL). For more information contact (877) FLSTATE or visit the web at https://distance.fsu.edu . Prerequisite Coursework: MAC X311 (4) Calculus 1 Note: State-wide common prerequisites are always under review. For the most current information and for acceptable alternative courses, visit the \u201cCommon Prerequisites Manual.\u201d This is available from the \u201cStudent Services\u201d section of http://www.flvc.org . Requirements for graduation in the College of Arts and Sciences include : The College of Arts and Science requires proficiency in a foreign language through the intermediate (2220 or equivalent) level or sign language through the advanced (2614 or equivalent) level. Foreign language courses are not available via distance learning at FSU. Admissions/Continuation Requirements to the Major Program of Studies Students should complete the prerequisite coursework with a grade of C- or higher to be considered for entrance to the major program of study. Students must also have completed a minimum of 52 hours of credit and at least half the required hours in Liberal Studies including required English and Math, or an A.A degree. Distance Learning students must complete the A.A. from a Florida public institution, required prerequisites, and a Supplemental Admissions Application prior to admission. Distance Learning students should also complete the oral competency requirement and the College of Arts and Sciences foreign language requirement prior to admissions. In accordance with the University residency rule, degree requirements not available online must be completed prior to the final 30 hours of the degree. The Computer Science major is limited access. The minimum GPA for acceptance is 2.65 and students in the program must maintain a 2.5 GPA. A student who has accumulated more than 5 grades below a C- (including grades of U) in Mathematics, Statistics, natural science or computer science courses taken for college credit at FSU or elsewhere, whether reated or not, will not be permitted to continue as a major in the department. Mapping Mapping is FSU\u2019s academic advising and monitoring system. Academic progress is monitored each Fall and Spring semester to ensure that students are on course to earn their degree in a timely fashion. Transfer students must meet mapping guidelines to be accepted into their majors. You may view the map for this major at www.academic-guide.fsu.edu . Major Program of Studies at FSU: 52 hours Computer and math courses (43 hours) COP 3014 (3) Programming I COP 3353 (1) Introduction to UNIX COP 3330 (3) Object-Oriented Programming CEN 4020 (3) Software Engineering I CEN 4021 (3) Software Engineering II CDA 3100 (3) Computer Organization I CDA 3101 (3) Computer Organization II COP 4020 (3) Programming Languages COP 4610 (3) Operating Systems & Concurrent Programming COP 4530 (3) Data Structures, Algorithms, and Generic Programming COP 4710 (3) Theory and Structure of Databases 9 hours of computer science electives, including 3 hours of an upper-division programming language elective for CS majors (not presented in the required course offerings) and at least 6 hours numbered above 4000 (not including CIS 4250 or CIS 4900). MAD 2104 (3) Discrete Mathematics I Additional courses required for the BA program in Computer Science (9 hours) Nine (9) hours in the fields of humanities and/or history, in addition to the Liberal Studies and the Arts and Sciences foreign language requirement. Minor. CS/BA majors must complete a minimum of 12 hours in an approved minor area. Computer Skills Competency: 0 hours beyond major. COP 3014 (3) Oral Communication Competency: : 0-3 hours. Students must demonstrate the ability to orally transmit ideas and information clearly. This requirement may also be met through appropriate high school speech training or another college-level approved course, such as SPC 1017 or SPC 2608 or CIS 4250(3). Minimum Program Requirements \u00adSummary Total Hrs. Required 120 Liberal Studies 36* BA Prerequisite Coursework 9* BA Major Coursework 52 Minor Coursework 0-12 or more Foreign Language 0-12 (depending on placement) Computer Skills 0 beyond major Oral Communication Competency 0-3 Electives to bring total hours to 120 *Note: Some prerequisite coursework may also be applied to Liberal Studies requirements in math and science. Remarks: 1. A minimum of 45 hours at the 3000 level or above, 30 of which must be taken at this University. 2. Half of the major course semester hours must be completed in residence at this University. 3. The final 30 hours must be completed in residence at this University. 4. The B. A. degree requires 9 additional hours in the fields of history and humanities. Employment Information Salary Information: National Association of Colleges and Employers , Occupational Outlook Handbook Representative Job Titles Related to this Major : Programmer (Scientific, Business, Systems), Technical Writer, Systems Analyst, Operations-Research analyst, Software Engineer, Webmaster, Teacher of High School, Technical support Representative, Manager, Data Processing System Manager, Network Administrator, Sales Representative for Computer or Software Manufacturers. Representative Employers : Computer Firms, High Schools, Colleges and Universities, Financial Firms, Private Industry, Governmental Agencies. Updated: Summer 2015", "document_id": 287637}]}, {"paragraphs": [{"qas": [], "context": "BS Degree Program Mission, Educational Objectives & Student Outcomes | BS Degree Program Mission, Educational Objectives & Student Outcomes The following information is applicable from Fall 2020. For previous information please check this link. The primary mission of the undergraduate program in Computer Science is to provide a high quality undergraduate educational program. To this end, the department seeks continually to strengthen the faculty and the education program to assure that students are well prepared for careers in the field of Computer Science. The Computer Science department\u2019s Bachelor of Science in Computer Science degree program is accredited by the Computing Accreditation Commission of ABET, http://www.abet.org . ABET is the recognized accrediting body of college and university programs in engineering, computing, technology and applied science. Our BS CS program is characterized by Program Educational Objectives and Student Outcomes. The program educational objectives describe expected accomplishments of our graduates of the BS program and is consistent with the mission of the department. The student outcomes define the criteria that prepare students to attain the program objectives. The department periodically assesses and evaluates the BS curriculum for consistency with each student outcome and educational objective with the goal to ensure that each student outcome can be attained. This regular evaluation is used to identify program weaknesses, put improvements in place and re-evaluate the effectiveness of those improvements; resulting in continuous improvement of the program. This assures that our students receive a high-quality education. Departmental Mission Statement To strive for excellence in advancing, applying, and imparting knowledge in computer science through comprehensive educational programs, research in collaboration with industry and government, and dissemination through scholarly products; To produce outstanding computer science professionals who have the fundamental knowledge, problem-solving skills, and life-long learning capability to advance their careers; To disseminate computer science knowledge to students and professionals in other disciplines, and To provide service to the university community, professional societies, local communities, the state, and the nation. The program educational objectives for the Bachelors of Science degree program in Computer Science is to produce graduates who will: Goal 1: Problem solving and presentation Engage in the practice of computer science to identify and solve significant problems across a broad range of application areas, and communicate these solutions professionally. Goal 2: Theoretical foundations Apply sound principles of the theoretical foundations and mathematical bases of computer science in solving complex problems. Goal 3: Impact and Responsibility Embrace the breadth of impact of computing on society, and apply ethical, social and professional responsibilities in the profession. Goal 4: Life-long learning Adapt to new technologies, tools and methodologies to remain at the leading edge of computer science developments and practice in the profession and in the academic field. BS Degree Student Outcomes ABET/CAC Outcomes Note that SMALC/SACS outcomes are defined right after these outcomes. A1. Analyze a complex computing problem and to apply principles of computing and other relevant disciplines to identify solutions. SMALC/SACS outcome: SA A2. Design, implement, and evaluate a computing-based solution to meet a given set of computing requirements in the context of the program\u2019s discipline. SMALC/SACS outcome: SB A3. Communicate effectively in a variety of professional contexts. SMALC/SACS outcomes: SC A4. Recognize professional responsibilities and make informed judgements in computing practice based on legal and ethical principles. SMALC/SACS outcome: SD A5. Function effectively as a member or leader of a team engaged in activities appropriate to the program\u2019s discipline. SMALC/SACS outcome: SE A6. Apply computer science theory and software development fundamentals to produce computing-based solutions. SMALC/SACS outcomes: SF The acceptance and use of the program educational objectives and student outcomes of the BS degree program are periodically assessed by the CS faculty, by the CS Board of Advisors, and by the officers of the FSU ACM Student Chapter. SMALC/SACS FSU Institutional Effectiveness Outcomes The Florida State University is accredited by the Southern Association of Colleges and Schools (SACS). The accreditation standards require the use of the State Mandated Academic Learning Compacts (SMALC) to define the student outcomes. The SMALC/SACS outcomes SA to SF to attain the learning outcomes listed below: SA) Programming Competence: Upon completion of the program, the student will be able to analyze a complex computing problem and to apply principles of computing and other relevant disciplines to identify solutions. Assessment: A programming assignment in COP4530. SB) Software Analysis and Development: Upon completion of the program, the student will be able to design, implement, and evaluate a computing-based solution to meet a given set of computing requirements in the context of the program\u2019s discipline. Assessment: capstone group project in CEN4090L. SC) Communication: Upon completion of the program, the student will be able to communicate effectively in a variety of professional contexts. Assessment: a writing assignment and a presentation assignment, both in CEN4020. SD) Ethics and Responsibility: Upon completion of the program, the student will be able to recognize professional responsibilities and make informed judgements in computing practice based on legal and ethical principles. Assessment: assignment or exam in CIS3250.. SE) Teamwork: Upon completion of the program, the student will be able to function effectively as a member or leader of a team engaged in activities appropriate to the program\u2019s discipline. Assessment: capstone group project in CEN4090L. SF) Theory and Practice: Upon completion of the program, the student will be able to apply computer science theory and software development fundamentals to produce computing-based solutions. Assessment: an assignment in COT4420 and another assignment in COP4530. The SMALC/SACS outcomes for the BS degree are related to the ABET/CAC student outcomes as follows. SMALC/SACS FSU Institutional Effectiveness Outcomes ABET/CAC mapping SA. Programming Competence A1 SB. Software Analysis and Development A2 SC. Communication A3 SD. Ethics and Responsibility A4 SE. Teamwork A5 SF. Theory and Practice A6 Undergraduate Enrollment and Degrees Awarded Comprehensive and update-to-date data about enrollments and degrees awarded are available interactively at https://ir.fsu.edu/ (Select Student Information and then Interactive Enrollment Reports and Degrees Awarded). Our program is in the College of Arts and Sciences and the major is BS in Computer Science). Data can be broken down based on Colleges, Departments, Majors, and so on. Year Enrollment Degrees Awarded 2019 627 99 (Spring and Summer 2020 not included) 2018 610 176 2017 606 127 2016 619 100 2015 548 97", "document_id": 287645}]}, {"paragraphs": [{"qas": [{"question": "Do I need to apply to get into the minor?", "id": 162566, "answers": [{"answer_id": 227108, "document_id": 287649, "question_id": 162566, "text": "a student does not need to be formally admitted to a minor", "answer_start": 772, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "Minor in Computer Science | Minor in Computer Science Overall Requirement Students pursuing a minor in Computer Science may choose one of two sets of computer science courses pre-approved by the department: the General Track (12 hours) or the Science Track (12 hours). Unless following one of the two tracks listed below , the student should obtain written approval in advance from the department for the specific combination of courses used for the minor. Students must also satisfy stated prerequisites before enrolling in any computer science course. A grade of \u201cC-\u201d or better must be earned in each course counted toward the minor. What is a Minor? A minor in another subject is part of the requirements for a bachelor\u2019s degree in certain departments. Unlike a major, a student does not need to be formally admitted to a minor, nor does the minor appear on the transcript. The Department and the Registrar do not have any forms to fill out or any way to register that a student intends to complete a minor in a particular subject. A student who has fulfilled the requirements for any given minor simply claims the minor when requesting a Graduation Check with their respective College. Documentation It is up to the student\u2019s major Department or College if they require the student to complete a minor, to verify that the student has completed an acceptable minor. This can be checked using the lists below. Because the content of this web page may change in the future, it would be a good idea for a student to print out a copy of this web page at the point the student decides to do a minor, and save the copy for later verification of the minor. Approved Tracks The following SCIENCE TRACK is a rigorous set of courses (essentially the beginning of a computer science major) that is approved and recommended for the minor: Course Prerequisites COP 3014 (3) or COP 3363 (3)* MAC 1140 COP 3353 (1) or COP 3363 (3)* none COP 3330 (3) COP 3353 (co/prerequisite) and COP 3014 Plus two of the following: CDA 3100 (3) COP 3330 (co/pre) and MAD 2104 (co/pre) CEN 4020 (3) COP 4530 (co/pre) CIS 4360 (3) COP 3330 CNT 4603 (3) CGS 3406 or COP 3014 COP 3252 (3) COP 3330 COP 4342 (3) COP 3330 COP 4530 (3) COP 3330 and MAD 2104 and CDA 3100 (co/pre) COP 4710 (3) COP 3330 and MAD 2104 COP 4610 (3) COP 4530, CDA 3100 *COP 3363 combines COP 3014 and COP 3353; students may satisfy both requirements with this course. Students may not take both COP 3014 and COP 3363 and have them both count for the minor. The following GENERAL TRACK is also approved for the minor (this is the recommended track for Information and Management Sciences majors): Course Prerequisites Any beginning programming course from the following: Java: CGS 3416 (3) MAC 1105 C++: CGS 3406 (3) or COP 3014 (3) or COP 3363 (3) MAC 1105 (CGS 3406), MAC 1140 (COP 3014, COP 3363) Python: CGS 3465 (3) MAC 1105 Plus three of the following: A second beginning programming course listed above that is not in the same programming language. CGS 2060 (3) or CGS 2100 (3) [Credit will not be given for both courses] CGS 3066 (3) None COP 3502 (3) MAC 1105 CIS 4403 (3) or CGS 2930 (3)* [Any 3-hr course listed for Science Track minor in the previous table] None *COP 3363 combines COP 3014 and COP 3353. **Students may take either CIS 4360 OR CGS 2930 towards the General Track minor in Computer Science. Other sets of courses may be recommended for students in certain specific majors. As this department works out such recommendations they will be added to this web page. Advisors in other departments are encouraged to contact the CS department chair about this.", "document_id": 287649}]}, {"paragraphs": [{"qas": [], "context": "WHY MAJOR IN COMPUTATIONAL BIOLOGY | WHY MAJOR IN COMPUTATIONAL BIOLOGY About the Program Scientific discovery is the result of creative interplay between inductive and deductive reasoning. Computational models play an increasingly important role in deducing the consequences of explanatory models, yet biologists are routinely hindered by the limitations of models currently available as software. In part this results from a lack of interdisciplinary training in both biological and computational sciences. This program seeks to achieve two goals: 1) to develop an understanding of the issues associated with developing biologically meaningful computational models, and 2) to give students the broad-based education that is needed to create a set of models directed towards solving a practical biomedical problem. In the process, it is hoped that the student will learn how to meld biological and quantitative skills. Students participating in this degree program will be better positioned to develop productive careers in the burgeoning fields of computational biology and bioinformatics. Employment and Research Opportunities Employment opportunities for students with these skills can be found throughout industry, including the areas of healthcare, forensics and the pharmaceutical companies. As one might expect in an emerging field, even more research opportunities exist. Here are a few: the creation of biological algorithms and heuristics that are computationally efficient on serial and parallel computers; the analysis of the primary (sequence), secondary (folding), and tertiary (3-dimensional) structures of DNA, RNA and protein sequences; genomic diversity (the study of disease genes, variation, mutations, etc.); comparative genomics (whole genomes, genome structures, gene locations and function); genomic engineering; the development and application of theoretical techniques for the design of molecular medicine; analytical chemistry techniques or molecular biological experimental work, guided by computational structural analysis.", "document_id": 287651}]}, {"paragraphs": [{"qas": [{"question": "Do I need to take the TOEFL if I went to a English speaking university?", "id": 162621, "answers": [{"answer_id": 227171, "document_id": 287661, "question_id": 162621, "text": "Students with a 4-year Bachelor\u2019s or a graduate degree from an accredited university in an English-speaking country can be exempt from the TOEFL for admissions purposes.", "answer_start": 2144, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "Applying to FSU Computer Science Department Graduate Programs: Instructions for International Students | Applying to FSU Computer Science Department Graduate Programs: Instructions for International Students Please see the Admissions page for deadlines and minimum admission requirements for different degree programs. Application instructions: 1. Submit the Florida State University Online Application: https://admissions.fsu.edu/gradapp/ with the required attachments (See 2-4 below). 2. Statement of Purpose \u2013 Must be uploaded in the Online Application. 3. Resume or Curriculum Vitae \u2013 Must be uploaded in the Online Application. 4. Three Letters of Recommendation \u2013 Within the Online Application, there is a section where applicants will input the names and contact information of those who will be writing the letters. Recommenders will receive e-mails asking them to upload their letters directly to the application. 5. Application Processing Fee of $30.00 . You will receive an e-mail from the Office of Graduate Admissions requesting the fee within two business days after submitting your application. 6. Official Graduate Records Exam (GRE) scores. The minimum GRE scores required for admission are a 145 on the verbal section and a 150 on the quantitative section. For the old scoring system, the minimum GRE score required for admission is a 1100 (Verbal and Quantitative combined) with a minimum of 650 on the Quantitative. Please request ETS to send your official test scores to the university. Our institution code is 5219. 7. Official Test of English as a Foreign Language (TOEFL) : A minimum score of 80 (internet-based) is the minimum requirement for graduate admission to the Computer Science Department. However, the Computer Science Department considers a score of 100-105 competitive, especially when students are seeking assistantships. The ability to lecture in English will be a major consideration in the selection of students for Teaching Assistantships. International applicants whose native language is not English must submit official TOEFL results in order to be admitted to the Computer Science graduate program. Students with a 4-year Bachelor\u2019s or a graduate degree from an accredited university in an English-speaking country can be exempt from the TOEFL for admissions purposes. However, exempted students are strongly encouraged to submit TOEFL scores if they seek support from the department. Please request for ETS to send your test scores directly to the university. Our institution code is 5219. The department code is not required. Free TOEFL practice tests can be found at the following: http://www.testpreppractice.net/TOEFL/Default.aspx and http://www.testpreppractice.net/TOEFL/Free-Online-TOEFL-Practice-Tests.aspx **Please note that we will accept an IELTS score (minimum 6.5) for admission consideration. However, we do not award any assistantships based on an IELTS score. 8. One official or certified of all transcript(s), diploma(s), and/or degree certificate(s) from every college or university attended. Transcripts are considered official when they are sent directly from a college or university to the FSU Office of Admissions and contain an official seal and/or signature. All academic records that are not in English must be accompanied by a certified English translation. If you are an FSU undergraduate and all of your transcripts from previous institutions are on file, then you will not need to request transcripts. Transcripts should be mailed directly to the FSU Office of Admissions at the following address: Office of Graduate Admissions Florida State University 314 Westcott Bldg. Tallahassee, FL. 32306-1410 USAPhone: (850) 644-3501 FSU Graduate Admissions e-mail: graduateadmissions@admin.fsu.edu URL: http://admissions.fsu.edu/ 9. The Certificate of Financial Responsibility (CFR) & Photocopy of Passport. The CFR must be completed after submitting your application, even if your available funds are $0.00. The form is available on the FSU Center for Global Engagement website (http://www.cge.fsu.edu/forms/CFR_GradStudentForm.pdf) . The CFR and passport photocopy should be mailed directly to the Center for Global Engagement. Contact information for the Center for Global Engagement is available on the CFR document. All supporting documents MUST be submitted via the Online Application, with the exception of official transcripts (mailed to the Office of Admissions), test scores (sent from ETS to the Office of Admissions). After a determination has been issued from the department the Certificate of Financial Responsibility and copy of Passport can be e-mailed to cge-newstudents@admin.fsu.edu. An application must be complete before it can be considered for admission which includes the receipt of all official supporting documentation. Unofficial transcripts and scores uploaded through the FSU application are not considered a suitable place holder.", "document_id": 287661}]}, {"paragraphs": [{"qas": [{"question": "What is the email address for the office of graduate admissions?", "id": 162639, "answers": [{"answer_id": 227189, "document_id": 287663, "question_id": 162639, "text": "graduateadmissions@admin.fsu.edu ", "answer_start": 2131, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "Applying to FSU Computer Science Department Graduate Programs: Instructions for US Citizens and Permanent Residents | Applying to FSU Computer Science Department Graduate Programs: Instructions for US Citizens and Permanent Residents Please see the Admissions page for deadlines and minimum admission requirements for different degree programs. Application instructions: 1. Submit the Florida State University Online Application: https://admissions.fsu.edu/gradapp/ with the required attachments (See 2-4 below). 2. Statement of Purpose \u2013 Must be uploaded in the Online Application. 3. Resume or Curriculum Vitae \u2013 Must be uploaded in the Online Application. 4. Three Letters of Recommendation \u2013 Within the Online Application, there is a section where applicants will input the names and contact information of those who will be writing the letters. Recommenders will receive e-mails asking them to upload their letters directly to the application. 5. Application Processing Fee of $30.00 . You will receive an e-mail from the Office of Graduate Admissions requesting the fee within two business days after submitting your application. 6. Official Graduate Records Exam (GRE) scores. The minimum GRE scores required for admission are a 145 on the verbal section and a 150 on the quantitative section. For the old scoring system, the minimum GRE score required for admission is a 1100 (Verbal and Quantitative combined) with a minimum of 650 on the Quantitative. Please request ETS to send your official test scores to the university. Our institution code is 5219. 7. One official copy of Transcripts of academic record. Official transcripts must be sent from every College or University that you have attended. If you happen to be a FSU undergraduate and all of your transcripts from the previous institution(s) are on file, then you will not need to request transcripts. Transcripts should be mailed directly to the University Admissions Office at the following address: Office of Graduate Admissions Florida State University 314 Westcott Bldg. Tallahassee, FL. 32306-1410 USAPhone: (850) 644-3501 FSU Graduate Admissions e-mail: graduateadmissions@admin.fsu.edu URL: http://admissions.fsu.edu/ All supporting documents MUST be submitted via the Online Application, with the exception of official transcripts (mailed to the Office of Admissions) and test scores (sent from ETS to the Office of Admissions). An application must be complete before it can be considered for admission which includes the receipt of all official supporting documentation. Unofficial transcripts and scores uploaded through the FSU application are not considered a suitable place holder.", "document_id": 287663}]}, {"paragraphs": [{"qas": [], "context": "Minimum Admissions Requirements for the Cyber Criminology (CC) MS Program | Minimum Admissions Requirements for the Cyber Criminology (CC) MS Program The Cyber Criminology graduate program has different core-course and admissions requirements and is thus a separate program. Below are the minimum admissions requirements for the CC MS degree program: Required Degrees: To be admitted to the Department of Computer Science as a Cyber Criminology graduate student you should have an undergraduate BS or BA degree in Computer Science or BS degree in Cyber Criminology. The program is designed primarily for our BA Computer Science and BS Cyber Criminology undergraduate students who wish to continue on in the pursuit of their MS degree in this field. Students who do not meet these undergraduate degree guidelines will be required to complete certain undergraduate prerequisites before graduation with a graduate degree in Cyber Criminology. Students without a prior undergraduate or graduate degree in computer science should have at least completed COP4530 (Data Structures) or an equivalent class to be considered competitive for admissions. Here is the list of Undergraduate Prerequisites for the MS CC Degree Program. GRE Scores: The minimum GRE scores required for admission are a 145 on the verbal section and a 150 on the quantitative section. For the old scoring system, the minimum GRE score required for admission is 1100 (Verbal and Quantitative combined) with a minimum of 650 on the Quantitative. TOEFL Scores: The minimum required score on the IBTOEFL for admission consideration is 80 (213 computer-based, 550 paper-based). However, the Computer Science Department considers a score of 100-105 competitive, especially when students are seeking assistantships. The ability to lecture in English will be a major consideration in the selection of students for Teaching Assistantships. Grade Point Average: Students should have at least a B (3.0 on a 4.0 scale) average to be considered competitive. Students with a GPA of less than 3.0 in their undergraduate degree fall below both the department and university standards.", "document_id": 287665}]}, {"paragraphs": [{"qas": [], "context": "Undergraduate Admissions Procedures and Standards | Undergraduate Admissions Procedures and Standards Applying for Admission Undergraduate Admissions is not handled by the Computer Science Department. Students interested in applying to the program should apply online through the Office of Admissions webpage and submit any supporting documents directly to their office. Minimum Admission Criteria Students still in high school who are considering Computer Science are advised to study higher level math courses and, if possible, complete AP, IB, or CLEP tests and potentially earn college credit. Students working on their AA are advised to review the Common Course Prerequisites for their potential major in the Academic Guide . Note to prospective transfer students: Prospective transfer students should contact as-admissions@fsu.edu (Arts & Sciences Admissions) with specific questions about admission and mapping requirements. A student who has accumulated more than five grades below \u201cC-\u201c (including grades of \u201cU\u201d) in mathematics, statistics, science, or computer science courses taken for college credit at The Florida State University or elsewhere, whether repeated or not, will not be permitted to continue as a major in the department.", "document_id": 287666}]}, {"paragraphs": [{"qas": [], "context": "Additional Requirements for Students Seeking Admission to the Computer Science Department from Other FSU Departments | Additional Requirements for Students Seeking Admission to the Computer Science Department from Other FSU Departments Previously Enrolled in CS: Students who enrolled in the CS Graduate Program within the past seven years will need to complete an application for readmission. Previously Enrolled in Another FSU Graduate Program: Students who enrolled in another FSU graduate program within the past seven years at FSU must do the following: An application for readmission must be completed. Academic qualifications must meet or exceed the CS Minimum Admission Criteria described above. If the student is wishing to transfer departments without completing their degree program or concurrently pursue a second degree in CS, a signed and sealed letter must be sent from the student\u2019s current department at FSU to the CS Department, giving the student permission to do so.", "document_id": 287660}]}, {"paragraphs": [{"qas": [], "context": "Check Admission Status | Check Admission Status After submitting the online application, verify that all of your supporting materials have been received by doing the following: Application Fee of $30 \u2013 Verify at University Admissions Status Check a. Please note if this is not paid, you will not be able to verify if other materials have been received. If you are able to see information about test scores and transcripts, the fee has been received. b. For technical help in activating your FSUID, contact help@fsu.edu or 850-644-4357. Resume \u2013 Attached to the Online Application . Statement of Purpose \u2013 Attached to the Online Application . Transcripts and Degree Certificates \u2013 Sent to the Office of Graduate Admissions; Verify at University Admissions Status Check GRE scores \u2013 Sent Electronically by ETS, Verify at University Admissions Status Check Three Letters of Recommendation \u2013 Submitted Electronically by Recommenders, Verify through the Online Application (Int\u2019l Students Only) TOEFL scores \u2013 Sent Electronically by ETS, Verify at University Admissions Status Check (Int\u2019l Students Only) Certificate of Financial Responsibility (CFR) and Copy of Passport \u2013 Verify by e-mailing CGE-NewStudents@admin.fsu.edu If you are not missing any of the items listed above, consider your application complete. If you are missing any of these items, please do the following: If you did not receive the e-mail regarding the fee, you can still pay it at http://fees.fsu.edu or through the link on the Status Check screen at University Admissions Status Check Resume \u2013 Upload it to your online application. Statement of Purpose \u2013 Upload it to your online application. Transcripts and Degree Certificates \u2013 Mail to the Office of Graduate Admissions, 282 Champions Way, Tallahassee, FL 32306-2400 a. Questions regarding submission of transcripts and degree certificates should be directed to gradadms@admin.fsu.edu or 850-644-6200 GRE and TOEFL scores \u2013 Request that ETS submit the scores to FSU a. Questions regarding submission of test scores should be directed to gradadms@admin.fsu.edu or 850-644-6200 Three Letters of Recommendation \u2013 You can add or change recommenders in the online application. Send your CFR and Copy of Passport to the Center for Global Engagement, 110 S. Woodward Ave., Tallahassee, FL 32306-4216 a. If you\u2019d like, in advance of the documents in the mail, you can send scanned copies to CGE-NewStudents@admin.fsu.edu", "document_id": 287662}]}, {"paragraphs": [{"qas": [], "context": "Theodore Baker | Theodore Baker Emeritus Professor Office: Telephone: E-Mail: baker [ at cs dot fsu dot edu ] Visit Personal Page Research Dr. Baker\u2019s research interests have included the P=?NP question and polynomial-time relative computability, pattern matching and parsing algorithms, compilation techniques, and real-time programming languages, scheduling and operating systems. He believes in the importance of formal and experimental methods, and in the transition of computer science research to engineering standards. He served as domain expert for real-time and systems programming in the ANSI/ISO Ada 95 language standard revision project, and directed the FSU team that developed the real-time multitasking runtime system for the Gnu Ada 95 compiler (GNAT). His current research focus is on real-time multiprocessor scheduling, including the both analytical study of schedulability and the empirical study of performance of working real-time multiprocessor kernels.", "document_id": 287743}]}, {"paragraphs": [{"qas": [{"question": "Who works on mobile networking?", "id": 179403, "answers": [{"answer_id": 228846, "document_id": 287742, "question_id": 179403, "text": "An-I Andy Wang", "answer_start": 0, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "An-I Andy Wang | An-I Andy Wang Professor Office: 269 Love Building Telephone: E-Mail: awang [ at cs dot fsu dot edu ] Visit Personal Page Research Dr. Wang\u2019s research interest is constructing simple and coherent system solutions that attain multiple conflicting goals. Because the systems field constantly sprouts new research domains with independent evolutions, it is crucial to develop solutions that resolve incompatible assumptions and requirements among multiple domains. His recent work, the Conquest file system, illustrates how performance improvement does not preclude system simplicity. His continuing work, Conquest-2, aims to conserve energy while improving performance at the same time. Andy is also the inventor of electric-field-based multipath routing for mobile ad hoc networks, which demonstrates how large-scale distributed coordination can be achieved without communication and maintaining states. Previously, Wang was involved in analyzing the performance of optimistic peer replication through his parallel simulation framework.", "document_id": 287742}]}, {"paragraphs": [{"qas": [], "context": "David Whalley Selected as IEEE Fellow | David Whalley Selected as IEEE Fellow Nov 23, 2016 | News David Whalley has been elevated to IEEE Fellow effective January 1, 2017 \u201cfor contributions to architectural and compilation techniques to meet embedded system constraints.\u201d The IEEE Grade of Fellow is conferred by the IEEE Board of Directors upon a person with an outstanding record of accomplishments in any of the IEEE fields of interest. The total number selected in any one year cannot exceed one-tenth of one-percent of the total voting membership. IEEE Fellow is the highest grade of membership and is recognized by the technical community as a prestigious honor and an important career achievement. David Whalley is the second member of the department elevated to the IEEE fellow status after Ted Baker.", "document_id": 287720}]}, {"paragraphs": [{"qas": [{"question": "How can a faculty member lose GFS status?", "id": 161741, "answers": [{"answer_id": 226219, "document_id": 287605, "question_id": 161741, "text": " two-thirds of the FSU Computer Science faculty with GFS vote to restrict it.", "answer_start": 1856, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "Graduate Faculty Status | Graduate Faculty Status Graduate Faculty Status for the Computer Science Department Florida State University Definition of GFS: Membership in the Graduate faculty of the Department of Computer Science authorizes faculty to teach all graduate-level courses, to sit on all graduate-level committees, to chair all graduate student dissertation committees, and to participate fully in all components of graduate education, research, and service. Limitation or removal of any of these authorizations from individual GFS-faculty is delegated to the unit level authority where such assignments are made. GFS Nomination Criteria: The Faculty member under consideration for nomination to Graduate Faculty Status must, subject to consideration of special circumstances, have (1) completed the doctorate in Computer Science (or its equivalent) and (2) proven expertise in the teaching area. GFS Limitations/Restrictions: Faculty holding GFS are expected to actively engage in graduate education through teaching, mentoring and research supervision. They should show evidence of research-based scholarship and/or creative work resulting in peer reviewed publications or equivalent work. A Computer Science faculty member may be restricted from any GFS responsibilities (e.g. the right to serve as the chair for a dissertation committee) if two-thirds of the faculty in the department who hold that responsibility vote to restrict that faculty member\u2019s specific responsibilities. Faculty not in the FSU Computer Science Department have the right to co-direct dissertations, theses, or projects provided that they have GFS in another FSU department or hold a courtesy faculty appointment in the FSU Computer Science Department with co-directive status. Such a faculty member may lose the right to co-direct Computer Science graduate students if two-thirds of the FSU Computer Science faculty with GFS vote to restrict it. Specialized members of the Computer Science faculty and courtesy appointees may be nominated for Graduate Teaching Status (GTS) within the Computer Science Department. GTS allows a specialized faculty member or courtesy appointee to teach graduate courses. Persons in similar status may be nominated for Co-MDS and to be able to co-direct MS students on theses and projects. Non-tenure track faculty and courtesy appointees in the Computer Science Department are eligible for nomination to graduate teaching status (GTS) provided that they have received a PhD (or its equivalent), hold expertise in the teaching discipline, and have received a two-thirds majority vote in favor of appointment by the Computer Science faculty who currently have GFS or GTS within the department. Under exceptional circumstances specialized faculty members and courtesy appointees whose terminal academic degree is an MS, may be nominated for GTS to teach graduate courses within a specific area, on the basis of significant experience in that area and two-thirds of the Computer Science faculty with GFS or GTS vote to approve it. A Computer Science faculty member or courtesy appointee may lose individual GTS responsibilities (e.g. the right to teach graduate courses) if two-thirds of the faculty in the department who hold that responsibility vote to revoke it. All nominations must be approved by the Academic Dean and Dean of The Graduate School in accordance with university policy. Specialized faculty members in the Computer Science Department are eligible for nomination to obtain masters directive status (MDS) to direct MS students on theses or projects provided that they have received a PhD (or its equivalent) and have received a two-thirds majority vote in favor of MDS by the Computer Science faculty who currently have GFS or MDS. Courtesy appointees in the Computer Science Department are eligible for nomination to obtain co-masters directive status (MDS) to direct MS students on theses or projects provided that they have received a PhD (or its equivalent) and have received a two-thirds majority vote in favor of CMDS by the Computer Science faculty who currently have GFS or MDS. Approved and adopted by two-thirds majority vote of the faculty holding GFS in June 2009. Revision of GTS policy approved by two-thirds majority vote of the faculty holding GFS/GTS in November 2012. Revision of GTS policy approved by two-thirds majority vote of the faculty holding GFS in April 2015.", "document_id": 287605}]}, {"paragraphs": [{"qas": [{"question": "What is the graduate advisor's phone number?", "id": 161759, "answers": [{"answer_id": 226241, "document_id": 287607, "question_id": 161759, "text": "(850)645-4975", "answer_start": 300, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "Graduate Programs | Graduate Programs The department offers MS in Computer Science, MS in Cyber Criminology, and PhD in Computer Science degrees. For more information about the graduate degree programs, admissions, scholarships and financial aids, please contact graduate advisor (Daniel Clawson) at (850)645-4975 or clawson [ at cs dot fsu dot edu]. General MS Degree Information Thesis, Project, and Course based Options Overview Thesis Graduation Checklist Project Graduation Checklist MS Project Information Course-option Graduation Checklist Masters Degrees MS in Computer Science Computer Science Major Cybersecurity Major Computer Network & System Administration Major MS in Cyber Criminology Combined BS/MS Pathways Phd Degree PhD degree in Computer Science Graduate Student Resources Graduate Student Handbook Graduate Students Welcome and Orientation Graduate Students Welcome and Orientation Zoom Session Recording Initial Advising Form for MS in Computer Science Initial Advising Form for PhD in Computer Science Initial Advising Form for MS in Computer Network and System Administration Initial Advising Form for MS in Cyber Criminology Initial Advising Form for MS in Cyber Security Initial Advising Form for MS in Data Science Semester Advising Form CS Defense Results Form (with SACS Oral Professional Presentation Student Learning Outcome Worksheet) Outside Course Permission Form Graduate Student Information Course Descriptions Recent Course Changes General Degree Requirements Required Undergraduate Pre-requisites for Graduate Degrees University, College and Department Rules for Graduate Students Handbook for Teaching Assistants Infosec Professionals Certificate Scholarships and Other Financial Aid CS Department Travel Support for Graduate Students , Top Tier Conferences (from csrankings.org)", "document_id": 287607}]}, {"paragraphs": [{"qas": [], "context": "Professor Yu Receives a Research Grant from Oak Ridge National Lab | Professor Yu Receives a Research Grant from Oak Ridge National Lab Apr 25, 2016 | News Dr. Weikuan Yu from the Department of Computer Science at Florida State University is awarded a grant of $100K from Oak Ridge National Laboratory for his most recent project on big data analytics research. Yu\u2019s project, titled \u201cDesign and Development of Big Data Analytics on Shared Memory Programming Models\u201d will conduct research and development activities to develop an integrated framework for enabling big data analytics on high-performance computing platforms. By enabling the efficient use of shared memory programming models, this new project will enable the use of HPC computer systems for scalable and efficient data-intensive applications on leadership computing facilities. The resulting prototype will be incorporated to large-scale file systems at DOE computing facilities hosted at Oak Ridge National Laboratory. Dr. Yu is a tenured Associate Professor in the Department of Computer Science at Florida State University (FSU). He served as a Research Staff Member at Oak Ridge National Lab until 2009, and then an assistant and associate professor at Auburn University until 2015. He has founded the Parallel Architecture and Systems Laboratory (PASL) at FSU. Dr. Yu\u2019s research interests include a multitude of technical areas including; data mining and analytics of big data and social networks, parallel computer systems and architecture, high speed interconnects, cloud computing, computational biology and climate modeling, and I/O systems.", "document_id": 287940}]}, {"paragraphs": [{"qas": [{"question": "What are the options for the CS and CNSA MS degree programs?", "id": 161857, "answers": [{"answer_id": 226351, "document_id": 287609, "question_id": 161857, "text": "three options of thesis, project, or course-based", "answer_start": 283, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "Thesis, Project and Course-based MS Degrees | Thesis, Project and Course-based MS Degrees The number of hours for the graduate degree as described in this web page will be effective in Summer 2018. In the CS and CNSA MS degree programs (but not CC), a student must select one of the three options of thesis, project, or course-based to complete the degree. Each option has a specific number of required courses as well as other requirements, as described below. Thesis Option A student under the thesis option must take seven (7) courses (21 semester hours) at or above the 5000 level, plus at least nine (9) hours of CIS 5970r, Thesis. At most nine (9) hours of CIS 5970r can be counted toward the required 30 hours for the MS degree. The seven courses must include at least one course from each area as described above. Approved offerings of CIS 5930/6930 Special Topics are counted towards the 7 courses, but supervised teaching, supervised research, seminars, DIS and CIS 5915 (project hours) cannot be included. The thesis is defended by registering for CIS 8976 Master\u2019s Thesis Defense (0). The student in the thesis option is required to propose and create an individual thesis topic of appropriate focus, size and complexity and to write a document discussing it. The thesis proposal must be approved by the supervisory committee. The thesis is to be written in accordance with the University standards. Upon completion, a thesis must be successfully defended to the department in an open forum, and be unanimously approved by the major professor and supervisory committee. An electronic version of the thesis must be submitted to the university as well as the CS webmaster, and CS graduate coordinator. Project Option A student under the project option must take eight (8) courses (24 semester hours) at or above the 5000 level, plus at least six (6) hours of CIS 5915r Graduate Software Project. At most six (6) hours of CIS 5915 can be counted toward the required 30 hours for the MS degree. The eight courses must include at least one from each of the areas described above. Approved offerings of CIS 5930/6930 Special Topics are counted towards the 8 courses, but supervised teaching, supervised research, seminars, DIS, and CIS 5970 (thesis hours) cannot be included. The student must also register for CIS 8974(0) to defend the project. The student in the project option is required to propose and create an individual project of appropriate focus, size, and complexity and to write a document discussing it. The project proposal must be approved by the major professor and supervisory committee. The project document should be written with direction from the major professor and supervisory committee and in accordance with the description given at Master\u2019s Project . Upon completion, both the project and the document must be successfully defended to the department in an open forum with unanimous approval from the major professor and supervisory committee. An electronic version of the project must be submitted to the CS webmaster, and CS graduate coordinator. Course-based Option A student under the course-based option must take ten (10) courses (30 semester hours) at or above the 5000 level, including at least one course from each of the three core areas described above. Approved CIS 5930/6930 Special Topics are counted towards the 10 courses, but supervised teaching, supervised research, seminars, DIS, CIS 5970 and CIS 5915 cannot be included. A student must earn a grade of B+ or higher for at least 6 of the 10 courses in order to graduate in the course-based option. The student must also register for CIS 8966, Master\u2019s Comprehensive Exam (0) the semester of graduation (effective Spring 2005). Supervisory Committee For the thesis and project options, it is the student\u2019s responsibility to form a supervisory committee regardless of his or her selected major. No later than the start of work on the thesis or project, the student will secure the consent of an eligible computer science faculty member to serve as the major professor. In consultation with the major professor, the student will secure the consent of at least two additional graduate faculty members to serve as the supervisory committee, chaired by the major professor.", "document_id": 287609}]}, {"paragraphs": [{"qas": [{"question": "How many total credit hours are required for the MS CC?", "id": 161918, "answers": [{"answer_id": 226410, "document_id": 287614, "question_id": 161918, "text": " total of 30 hours.", "answer_start": 815, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "Masters in Cyber Criminology | Masters in Cyber Criminology The number of hours for the graduate degree as described in this web page will be effective in Summer 2018. Admissions Requirements Students pursuing the MS in Cyber Criminology (MS CC) degree will be admitted to and graduate from the Computer Science Department. Thus, the minimal admissions requirements are (1) an undergraduate GPA of no less than 3.0 and (2) a score of 1000 or greater on the combined verbal and quantitative portions of the GRE. Degree Requirements The initial track for the MS CC degree will be coursework only. The general degree requirements will include 3 graduate criminology courses, 6 graduate computer science (CS) courses related to information assurance and computer security and 1 additional criminology or CS course for a total of 30 hours. In addition, MS CC students will have to complete certain undergraduate prerequisites, shown below, before graduating, and will likely have to complete a subset of these courses before being admitted to the MS CC degree program. Note that CIS 4385 is required for the FSU BS in Cyber Criminology and the other four courses are required for the FSU BS in Computer Science and BA in Computer Science degrees. Undergraduate Prerequisites for the MS CC Degree Program: CDA 3101 Computer Organization II (3) CIS 4385 Cybercrime Detection and Forensics (3) COP 4530 Data Structures, Algorithms, and Generic Programming (3) COP 4610 Operating Systems and Concurrent Programming (3) COP 4710 Theory and Structure of Databases (3) The graduation requirements include completing all of the undergraduate prerequisites, completing 3 graduate criminology courses, and completing 6 graduate computer science courses. The graduate courses for the MS CC degree are listed below: Criminology Courses from Which MS CC Students Are Required to Take at Least Three: CCJ 5016 Crimes of the Powerful (3) CCJ 5285 Survey of Criminal Justice Theory and Research (3) CCJ 5606 Survey of Criminological Theories (3) CCJ 5607 History of Criminological Thought (3) CCJ 5636 Comparative Criminology and Criminal Justice (3) Up to date course descriptions for the above criminology courses can be found at: http://www.criminology.fsu.edu/p/academic-syllabi.php . Computer Science Courses Required for MS CC Students: CIS 5370 Computer Security (3) CNT 5412 Network Security, Active and Passive Defenses (3) CNT 5505 Data and Computer Communications (3) CNT 5605 Computer and Network Administration (3) COP 5611 Advanced Operating Systems (3) COP 5725 Database Systems (3) The one additional criminology or CS course will be a graduate elective. The criminology courses can be taken in any order as none of these courses are prerequisites for any of the other courses. However, the 6 required graduate computer science courses each have undergraduate prerequisites that must be completed before the student will be allowed to take these courses.", "document_id": 287614}]}, {"paragraphs": [{"qas": [{"question": "How many core courses do I need to take for the MS?", "id": 161990, "answers": [{"answer_id": 226482, "document_id": 287619, "question_id": 161990, "text": "at least one course from each of the core areas: Software, Systems, Theory", "answer_start": 378, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}, {"question": "How many thesis credit hours count towards the 30 hour degree requirements?", "id": 161992, "answers": [{"answer_id": 226484, "document_id": 287619, "question_id": 161992, "text": "CIS 8976", "answer_start": 703, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}, {"question": "How many courses do I need to take for the thesis option MS?", "id": 161988, "answers": [{"answer_id": 226480, "document_id": 287619, "question_id": 161988, "text": "At least 7", "answer_start": 213, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "MS (thesis-option) Graduation Checklist | MS (thesis-option) Graduation Checklist Below is a brief checklist of items an MS (thesis option) student should complete before graduation: Degree Requirements Checklist At least 7 courses (21 hours) at or above the 5000 level excluding supervised teaching, supervised research, seminars, DIS, CIS 5915 Of the 7 courses, there must be at least one course from each of the core areas: Software, Systems, Theory At least 9 hours of CIS 5970, Thesis, where at most 9 hours count toward the required 30 hours for the degree In the final term in which the degree is granted, students must be enrolled in a minimum of two hours of Thesis Register, at most once, for CIS 8976, Thesis Defense (withdraw from all but one instance of this if you have registered more than once) Register for graduation via the Registrar\u2019s website during the first two weeks of the semester in which you wish to graduate Defense & Graduation Checklist Determine the manuscript approval deadline, the manuscript submission deadline, and the defense deadline. These change each semester & are available on the Registrar\u2019s web site under the FSU Academic Calendar as well as here Please see the Thesis, Treatise, and Dissertation for all deadlines, required forms, format guides, and other information and resources Schedule defense (at least 2 weeks in advance): Reserve room (typically 151 Love) Reserve PC cart (if needed) by signing up on calendar on the door in the copy room in 260 Love Complete the Defense Announcement Form (due no later than 2 weeks before the defense date) Inform title, room, and time of defense so that notification can be sent out Obtain the CS Defense Result Form (\u201cgreen form\u201d) from outside office 203A. Take this form with you to the defense to record the outcome of the defense. Have all the Graduate School required forms with you at the defense for signatures. These are all found here . Return the CS Defense Result Form to the CS Graduate Coordinator, Daniel Clawson. Bring all the Graduate School required forms (Final Degree Clearance Form, Manuscript Signature Form, etc.) to Daniel Clawson. Make sure they have ALL required signatures from your committee chair, committee, and department chair. He will forward the forms on to the dean\u2019s office and/or graduate clearance advisor. Make sure your manuscript is submitted to the Graduate Clearance Advisor over in the Graduate School by the deadline listed here Submit an electronic version (pdf) of the project to the CS webmaster (webmaster [at cs dot fsu dot edu]) and the Graduate Coordinator (clawson [at cs dot fsu dot edu]). Complete the departmental EXIT survey (sent electronically towards the end of the semester). If your employment plans are uncertain when completing the EXIT survey, inform the CS Director of Graduate Studies via email when those plans are complete.", "document_id": 287619}]}, {"paragraphs": [{"qas": [{"question": "Which courses are prerequisites to graduate courses?", "id": 162048, "answers": [{"answer_id": 226540, "document_id": 287627, "question_id": 162048, "text": "COP 4530 Data Structures (listed as: CGS 5425 \u2013 Object Oriented Programming with Data Structures ) COP 4531 Algorithm Analysis (listed as: CGS 5427 \u2013 Algorithm Design and Analysis ) CDA 3100 Computer Organization I (listed as: CGS 5267 \u2013 Principles of Computer Organization ) CDA 3101 Computer Organization II (listed as: CGS 5268 \u2013 Principles of Computer Organization II ) COP 4610 Operating Systems (listed as: CGS 5765 \u2013 Principles of Operating Systems ) COT 4420 Theory of Computation (listed as CGS 5429 \u2013 Introduction to Computer Theory ) MAC 2311 Calculus I MAC 2312 Calculus II MAD 2104 & 3105 Discrete Math STA 4442 Introductory Probability I", "answer_start": 1145, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "Undergraduate Courses or Equivalents Required for Graduate PhD CS and MS CS Degrees | Undergraduate Courses or Equivalents Required for Graduate PhD CS and MS CS Degrees Note: For those students who do NOT have an undergraduate BS degree in Computer Science, the following courses or their equivalents at another institution must be completed before the graduate PhD CS or MS CS degree will be awarded. The list assumes courses in basic programming skills. Please see the web pages for the MS CC or MS CNSA degrees for the undergraduate prerequisites required for these degrees. Each newly admitted student must meet with the Director of Graduate Studies to complete a form indicating if any of the following must be taken. The form will be maintained in the student\u2019s file and checked during the departmental graduation check. Also note that if a student has a BS in CS from another institution (not FSU) there may be one or more courses that we require that were not required at the student\u2019s institution. These courses must be taken prior to graduation. The courses in the list below are prerequisites to one or more of our graduate courses. COP 4530 Data Structures (listed as: CGS 5425 \u2013 Object Oriented Programming with Data Structures ) COP 4531 Algorithm Analysis (listed as: CGS 5427 \u2013 Algorithm Design and Analysis ) CDA 3100 Computer Organization I (listed as: CGS 5267 \u2013 Principles of Computer Organization ) CDA 3101 Computer Organization II (listed as: CGS 5268 \u2013 Principles of Computer Organization II ) COP 4610 Operating Systems (listed as: CGS 5765 \u2013 Principles of Operating Systems ) COT 4420 Theory of Computation (listed as CGS 5429 \u2013 Introduction to Computer Theory ) MAC 2311 Calculus I MAC 2312 Calculus II MAD 2104 & 3105 Discrete Math STA 4442 Introductory Probability I", "document_id": 287627}]}, {"paragraphs": [{"qas": [{"question": "What is the science track for computer science?", "id": 162550, "answers": [{"answer_id": 227088, "document_id": 287648, "question_id": 162550, "text": "The BS in Computer Science", "answer_start": 164, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}, {"question": "What is considered the humanities track for computer science?", "id": 162551, "answers": [{"answer_id": 227089, "document_id": 287648, "question_id": 162551, "text": " the BA in Computer Science (BA in CS)", "answer_start": 237, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "Differences between the BS and BA in computer science | Differences between the BS and BA in computer science Differences between the BS and BA in computer science The BS in Computer Science (BS in CS) is considered the science track and the BA in Computer Science (BA in CS) is considered the humanities track. Also the BS in CS degree is accredited by the Computing Accreditation Commission of ABET, http://www.abet.org , and the BA in CS degree is not. The department encourages students to pursue the BS in CS if they are capable of completing it. We believe there will be more opportunities for BS in CS students after graduation, such as working for engineering and science firms. However, we do believe there will be significant opportunities for BA in CS students who are primarily interested in applications outside the sciences and engineering. The BA in CS is also an excellent track for students who are double majoring in another field outside the sciences and engineering. Because of reduced requirements in mathematics and theoretical computer science, the BA degree is not ABET accredited and students graduating with the BA in CS who wish to be admitted to the graduate program in CS at FSU may be required to take prerequisite undergraduate courses . This same policy is already in place for students who are admitted to graduate study in CS from other closely related majors, such as Mathematics and Computer Engineering. The BS in CS and BA in CS have the following differences in course requirements. MAC2312 (4) Calculus II, and MAD3105 (3) Discrete Math II are required for the BS in CS and are not required for the BA in CS. The probability course STA4442 (3) Introduction to Probability is required for the BS in CS. PHY2048C (5) General Physics I w/Lab and PHY2049C (5) General Physics II w/Lab are required for the BS in CS. In contrast, BA in CS students may instead satisfy the liberal studies science requirement by taking 7 hours of science courses from the approved list. COP4531 (3) Analysis of Data Structures and Algorithms and COT4420 (3) Theory of Computation, which have MAD3105 Discrete Math II as a prerequisite, are required for the BS in CS, but not for the BA in CS. The BA in CS will require 9 hours of humanities, which are not required for the BS in CS. The BA in CS will require additional hours of general electives that are not required for the BS in CS degree. The BS in CS has a collateral interdisciplinary minor. BA in CS students will likely need to select a minor in another subject, which could overlap with the 9 hours of humanities and/or the additional hours of general electives.", "document_id": 287648}]}, {"paragraphs": [{"qas": [{"question": "What do Cyber Criminology students learn?", "id": 162589, "answers": [{"answer_id": 227139, "document_id": 287653, "question_id": 162589, "text": " A Cyber Criminology student will learn both how to use computers to facilitate the study of crime and will study how crimes are accomplished through the use of computers.", "answer_start": 890, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "WHY MAJOR IN CYBER CRIMINOLOGY | WHY MAJOR IN CYBER CRIMINOLOGY About the Program An interdisciplinary undergraduate degree program in Cyber Criminology was offered by FSU starting in Fall 2007. This new degree program was developed jointly by the Department of Computer Science and the College of Criminology and Criminal Justice. Computer crime can be broadly defined as any criminal activity that involves the use of information technology. These crimes include illegally accessing information, intercepting data, damaging or deleting data, interfering with the functioning of a computer system, identity theft, etc. Information-related crime and computer/network security issues are already major concerns. These issues affect all levels of business, government, and academia and have grown in importance as most organizations link their networked computer environments to the Internet. A Cyber Criminology student will learn both how to use computers to facilitate the study of crime and will study how crimes are accomplished through the use of computers. Employment and Research Opportunities We anticipate there will be a significant demand for graduates of the Cyber Criminology program. It is well known that there is a shortage of information technology experts. Similarly, there is a pressing need for information technology specialists to handle issues related to information crime, cyberforensics, and computer/network security. However, there is also a need for computer skills for the prevention, detection, and study of all types of crime, whether or not they involve the use of information technology. Graduates of the program will be prepared to work either for law enforcement agencies as information crime specialists, within companies or organizations as network security specialists, or within academia and government to study the causes of crime and the best methods for its prevention.", "document_id": 287653}]}, {"paragraphs": [{"qas": [{"question": "Does FSU offer financial support to graduate students?", "id": 162601, "answers": [{"answer_id": 227151, "document_id": 287658, "question_id": 162601, "text": "We offer financial support to new and existing PhD and MS students in the form of teaching assistantship (TA), research assistantship (RA), and fellowship. ", "answer_start": 220, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "Graduate Student Financial Support Policy and Statistics | Graduate Student Financial Support Policy and Statistics The department recognizes and values the teaching and research contribution from our graduate students. We offer financial support to new and existing PhD and MS students in the form of teaching assistantship (TA), research assistantship (RA), and fellowship. Each semester, a number of (typically 25-35 in the Fall and 5-10 in the Spring) best qualifying new students, identified by the admissions and financial aids committee, are offered financial support with admission. The department gives priority to students who were admitted with full financial support (20-hour TA/RA appointment or fellowship) and PhD students who were admitted without support, but have passed the PhD Preliminary exam. The general departmental policy is to continuously support such students in the Fall and Spring semesters (the department has very few TA positions in the summer) until they graduate, provided that sufficient funds are available. Typical duration of continuous support for Fall and Spring semesters is as follows. 6 years for PhD students who entered the program without an MS degree in CS 5 years for PhD students who entered the program with a CS MS degree 2 years for MS students Requirements for continuous TA funding support for PhD students For continuous TA support, PhD students have three levels of priorities: Tier 1, Tier 2, and Tier 3, with Tier 1 being the highest priority. As of Spring 2018, all students in all of the three levels of priorities are funded by the department (but this may change in the future). All students in any priority group for TA support must meet the following requirements: Making minimum satisfactory progress toward the degree as specified in this document . Satisfying all university requirements for being a teaching assistant, including passing the English speaking test for foreign students. Performing assigned duties (e.g TA/RA duties) satisfactorily and reliably. Informing the department in sufficient advance the desire to be supported and the commitment to the duties assigned by the department. A PhD Student who (1) was admitted with full financial support (20-hour TA/RA appointment or fellowship), or (2) was admitted without financial support, but has passed the PhD Preliminary exam, is in the Tier 3 priority group if the student meets the above requirements. A PhD student who meets the above requirements is in the Tier 2 priority group if the student is identified by a tenure-track faculty as a Tier 2 TA. A PhD student who meets the above requirements is in the Tier 1 priority group if the student is identified by a tenure-track faculty as a Tier 1 TA. The department maintains the tier-3 list. Tenure-track faculty must identify their tier-1 and tier-2 TAs by July 1 for the Fall semester and October 15 for the Spring semester. Requirements for continuous TA funding support for MS students MS students admitted with financial support are defaulted to the Tier 1 priority group for the same level of support when admitted. As of Spring 2018, all students in the priority group are funded by the department. To remain in the top priority group, an MS student must Make minimum satisfactory progress toward the degree: maintaining a 3.0 GPA and completing the degree within 2 years. Satisfy all university requirements for being a teaching assistant, including passing the English speaking test for foreign students. Perform assigned duties (e.g TA/RA duties) satisfactorily and reliably. Inform the department in sufficient advance the desire to be supported and the commitment to the duties assigned by the department. Statistics of Recent Graduate Student Financial Support Fiscal Year Spring 2017 Spring 2018 No. of MS Students 97 98 No. of PhD Students 65 74 No. of Students with Assistantships 114 132", "document_id": 287658}]}, {"paragraphs": [{"qas": [{"question": "Where did Dr. Yu work before FSU?", "id": 162659, "answers": [{"answer_id": 227209, "document_id": 287668, "question_id": 162659, "text": " in Auburn University and Oak Ridge National Laboratory", "answer_start": 734, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}, {"question": "When did Andy Wang join the Computer Science department?", "id": 162656, "answers": [{"answer_id": 227206, "document_id": 287668, "question_id": 162656, "text": " 2003", "answer_start": 450, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "Andy Wang and Weikuan Yu promoted to full professor | Andy Wang and Weikuan Yu promoted to full professor Jan 20, 2017 | News Congratulations to Dr. Andy Wang and Dr. Weikuan Yu on their promotion to the rank of full professor effective August 2017. Andy Wang received his Ph.D. and M.S. in computer science from UCLA in 2003 and 1998, and his B.S. from UC Berkeley in 1995. He joined the Department of Computer Science at Florida State University in 2003. His research interests include file systems, optimistic peer replication, performance evaluation, ad hoc network routing, operating systems, and distributed systems. Dr. Yu has been an Associate Professor at Florida State University since 2015. Prior to that, he held positions in Auburn University and Oak Ridge National Laboratory. Dr. Yu\u2019s areas of specialization include big data, high-performance computing, computer architecture, file and storage systems, and interdisciplinary research on computational genomics. He earned his PhD in Computer Science and MS in Neurobiology from the Ohio State University. Dr. Yu has published more than 80 papers, many of which in top conferences and journals such as Supercomputing, SigMetrics, PACT, IPDPS, IEEE Transactions on Parallel and Distributed Systems, and IEEE Transactions on Computers. Dr. Yu\u2019s research has been supported in part by NASA, DOE (ORNL and LLNL), NSF, Alabama Department of Commerce, Mellanox, Intel, NVIDIA, Scitor, and Auburn University, with Yu as the PI for nearly $4M in external grants. In addition to his significant research contributions to the computer science field, Dr. Yu has advised many Master\u2019s and Ph.D. students, many of whom have landed jobs in prestigious industrial and research organizations upon graduation. Former students under his leadership have joined organizations such as Oak Ridge National Laboratory, Yahoo, Intel, Boeing, IBM T.J. Watson Research Center, Amazon, and other industry positions. Also, Dr. Yu\u2019s research won the 2012 Alabama Innovation Award and the First Prize of 2012 ACM Student Research Competition Grand Finals. Yu is a senior member of IEEE and member of AAAS, ACM and USENIX.", "document_id": 287668}]}, {"paragraphs": [{"qas": [{"question": "What is the graduate assistant payroll coordinator's phone number?", "id": 173880, "answers": [{"answer_id": 227735, "document_id": 287737, "question_id": 173880, "text": " (850) 644-0672 ", "answer_start": 1158, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}, {"question": "Who is the Director of Undergraduate studies?", "id": 173853, "answers": [{"answer_id": 227708, "document_id": 287737, "question_id": 173853, "text": "Dr. David Whalley ", "answer_start": 353, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}, {"question": "What is Daniel Clawson's office number?", "id": 173856, "answers": [{"answer_id": 227711, "document_id": 287737, "question_id": 173856, "text": "LOV203D", "answer_start": 524, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}, {"question": "What is Jaden Austin's phone number?", "id": 173869, "answers": [{"answer_id": 227724, "document_id": 287737, "question_id": 173869, "text": " (850) 644-2644", "answer_start": 854, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "Contact | Zoom Contact Information: Use Zoom to talk to your advisors Use Zoom to talk to CS Administrative Staff Department Address 253 Love Building Florida State University Tallahassee, FL 32306-4530 Phone: (850) 644-4029 Fax: (850) 644-0058 Faculty and Staff Listing Department Faculty Department Staff Prospective or Current Undergraduate Students Dr. David Whalley Director of Undergraduate Studies whalley [ at cs dot fsu dot edu ] Prospective or Current Graduate Students Daniel Clawson Graduate Coordinator Office: LOV203D clawson [ at cs dot fsu dot edu ]Phone: (850) 645-4975 Jie Yang Director of Graduate Admissions jieyang [ at cs dot fsu dot edu ] Andy Wang Director of Graduate Studies awang [ at cs dot fsu dot edu ] Other Departmental Information Jaden Austin Departmental Administrative Assistant jaustin [ at cs dot fsu dot edu ]Phone: (850) 644-2644 Departmental Administration Department Chair ( Xiuwen Liu ): (850) 644-0050 Business Manager ( Alisabet Valdes ): (850) 644-5450 Grants Specialist ( Lori McFadden ): (850) 644-8598 Webmaster ( Webmaster ): (850) 644-4019 OPS appointment papers, graduate assistant payroll ( Edwina Hall ): (850) 644-0672 Course Scheduling, graduate student records ( Barbara Twyman ): (850) 644-2360 Travel: Please use the on-line form . (Questions to Main Office (850) 644-4029.) Scheduling of the conference room in 151 Love ( Jaden Austin ): (850) 644-2644 Computer Labs Majors Lab: Phone (850) 644-6097. CS Systems Group CS Dept. Computer and Network Help: Please use the on-line form . View the Systems group web page to find New User info, to submit a ticket to the help-desk, self-help tutorials, our services, and the status of the servers. Room MCH 208 (Carothers) M-F, 8am-5pm Phone: (850) 644-4019", "document_id": 287737}]}, {"paragraphs": [{"qas": [], "context": "Computer Science Department gets awarded its largest grant | Computer Science Department gets awarded its largest grant In September 2016 the Computer Science Department was awarded its largest grant in the history of the department.  The department received a 5-year NSF CyberCorps Scholarship for Service (SFS) grant for $4.6 million.  The grant will provide scholarships for students who commit to getting an MS CS degree in the Cybersecurity track.  The grant also supports a more limited number of students during their senior year of the BS CS before they enter the MS CS program.  In total the grant will support 64 graduate student scholarship years and 8 undergraduate scholarship years.  Students in the SFS program receive an academic year stipend ($22,500 for seniors and $34,000 for graduate students), tuition and fees, health insurance reimbursement, and a $2,000 textbook allowance.  In addition, each student will be provided a paid summer internship with a federal agency.  Professor Mike Burmester is the PI on this grant and Professors Xiuwen Liu, David Whalley, and Jie Yang are the co-PIs.", "document_id": 287685}]}, {"paragraphs": [{"qas": [], "context": "Computer Science SFS Students Invited to Speak in the 2016 Women in Cyber Security Conference | Computer Science SFS Students Invited to Speak in the 2016 Women in Cyber Security Conference Feb 10, 2016 | Student Recognition Computer Science students Aranya Ajith and Rebecca Powell have been invited to give a 5 min Lighting talk at the 2016 Women in Cyber Security (WiCyS) Conference that will be held in Dallas, TX from March 31st to April 2nd. Aranya and Rebecca are in the NSF Scholarship for Service (SFS) program, directed by Dr. Mike Burmester. WiCyS is sponsored by National Science Foundation (NSF), federal agencies and academic partners. WiCyS continues to recruit, retrain and advance women in cybersecurity from academia, research, and industry all in the name of sharing knowledge, experience, networking, and mentoring other women. Aranya Ajith and Rebecca Powell will be talking about what reverse engineering is used for and mainly the difference between static and dynamic reverse engineering. An excerpt from their talk: \u201cReverse Engineering disassembles code to analyze its features, and understand weaknesses and exploits. It is a powerful tool for the programmer, the security analyst, but also for the adversary. For the programmer, to design better code; for the analyst, to understand its structure and potential malicious traits; and for the adversary, to\u00a0 take control of the application. Dynamic analysis allows for the inspection of the behavior of the code as it runs: what processes it starts, what locations it attempts to access, while static program analysis is another semi-easy practical way of learning x86 and how it plays into malware analysis without having any risk of infecting the machine while still being able to\u00a0 learn vital strings, host-based indicators, network-based indicators, etc. Understanding how to use these tools, and how to interpret the pseudocode, is the real challenge: it is hands-on and involves most of the effort. Understanding the theory is far less challenging.\u201d", "document_id": 287691}]}, {"paragraphs": [{"qas": [], "context": "Computer Science Welcomes Two New Faculty Members | Computer Science Welcomes Two New Faculty Members Dr. Viet Tung Hoang joins the department this fall semester as an assistant\u00a0professor. He received his Ph.D. degree in Computer Science from UC Davis\u00a0in 2013. Prior to joining FSU, Dr. Hoang held post-doc positions at\u00a0UC San Diego, University of Maryland, and UC Santa Barbara. Dr. \u00a0Hoang\u2019s\u00a0research area is cryptography, with a practice-oriented theme.\u00a0His line of research aims to bridge the gap between the theory and\u00a0practice of cryptography, giving products of genuine utility that are\u00a0theoretically justified yet faster than heuristic solutions. For\u00a0example, he has built a new authenticated encryption scheme AEZ to\u00a0improve both security and speed of standardized schemes underlying\u00a0Internet protocols such as HTTPS, IPSec, and WPA2. AEZ is currently a\u00a0second-round candidate in the standardization competition CAESAR.\u00a0Dr. Hoang\u2019s research papers earned the Best Honorable Mention at EUROCRYPT\u00a02015 and Best Paper Award at CCS 2015. Dr. Adrian Nistor joins the department this fall semester as an assistant\u00a0professor. Dr. Nistor received his PhD from the Department of Computer Science\u00a0at the University of Illinois, Urbana-Champaign in May 2014.\u00a0Prior to joining FSU, Dr. Nistor has been with the Computer Science Department\u00a0at Chapman University as an assistant professor.\u00a0Adrian\u2019s research interests are in software\u00a0engineering, with a focus on detecting, repairing, and preventing bugs in\u00a0real-world applications. His current research projects investigate performance,\u00a0concurrency, and mobile bugs. His techniques found more than 190\u00a0previously unknown bugs in widely used software, e.g., Google Chrome,\u00a0Mozilla, Google Core Libraries, GCC, MySQL, Ant, Lucene, Groovy,\u00a0Tomcat, JUnit, JMeter, Log4J, Struts, etc. More than 140 of these\u00a0bugs have already been fixed by developers based on Adrian\u2019s and his\u00a0collaborators\u2019 reports. Adrian\u2019s research includes empirical and analytical work, static and dynamic techniques, and bugs from various application types\u2014client, server, mobile, and scientific applications. Dr. Nistor won an ACM SIGSOFT Distinguished Paper award at ICSE 2015. He received an NSF grant as a sole PI to investigate performance bugs that have non-intrusive fixes. He is a committer to Apache Collections. He published in ICSE, MICRO, ISSTA, MSR, and JDPC. Adrian collaborated with three PhD students, three master\u2019s students, and seven undergraduate students. He is looking for highly motivated students to do research with at Florida State University!", "document_id": 287692}]}, {"paragraphs": [{"qas": [], "context": "CS Awarded Grant to Enable Reconfigurable Computing Infrastructure | CS Awarded Grant to Enable Reconfigurable Computing Infrastructure The Department of Computer Science at Florida State University was awarded a grant of $700K from the National Science Foundation titled \u201cII-New: A Software-Defined Reconfigurable Infrastructure for Cross-Layer Research on Computer Architecture, Network, and Storage Systems\u201d. With this award, Computer Science Professors Weikuan Yu, Xin Yuan, and David Whalley will acquire and develop a software-defined reconfigurable infrastructure called NoleLand. The infrastructure will feature cutting-edge manycore processors, software-defined networking, and 3D Xpoint High Bandwidth Memory devices for computer systems research. It will also test cross-layer research on performance, scalability, and resilience of large-scale systems, and develop software-defined file and storage systems for computing and data analytics applications. Furthermore, NoleLand will enable compiler and architecture co-design, and cache/memory concert for massive parallelism in GPU, software-defined networking, and HPC cluster-wide data security.", "document_id": 287696}]}, {"paragraphs": [{"qas": [], "context": "CS Professors Awarded a Grant to Secure High-performance Computing | CS Professors Awarded a Grant to Secure High-performance Computing National Science Foundation (NSF) recently awarded a 3-year grant in the amount of $590,317 to Prof. Zhi Wang, Prof. Xin Yuan, Prof. Viet Tung Hoang, and Dr. Paul van der Mark from FSU Research Computing Center (RCC) for their research in securing high-performance computing. This project, titled \u201cCICI: \u00a0RSARC: \u00a0DICE \u2013 Data Insurance in the Cluster Environment\u201d, was awarded by the NSF directorate CISE:OACI. The abstract of the project is as follows: high-performance, distributed computing has become indispensable in solving complex scientific, engineering, and business problems. The integrity of the data generated and stored on computer clusters is of undisputed importance to scientific research and business intelligence, as compromised data can lead to incorrect conclusions and decisions. Unfortunately, existing security mechanisms for high-performance and distributed computing systems are complex, inconsistent, insecure, and difficult to deploy. Many systems utilizing the current security mechanisms simply do not provide sufficient protection and remain vulnerable to even trivial attacks. For example, recent studies have found that thousands of unprotected database installations and computer clusters have been hacked. As such, there is a pressing need to improve the security of high-performance and distributed computing systems. This project develops a security framework for high-performance and distributed computing systems that employs strong modern cryptographic algorithms, and is easy to reason, deploy, and use without lengthy and error-prone configurations. The project consists of three major components: a container-based virtual cluster, a component to defend against side-channel attacks, and a secure execution ledger for auditing. The first component is the key to enabling authentication, authorization, and data protection for clusters without sacrificing usability or performance. The project team will build the virtual cluster based on the popular Docker container but enhance it with flexible key management, attack surface reduction, and security hardening, including defenses against side-channel attacks. Communications among nodes of a virtual cluster and I/O operations are transparently encrypted to protect the data in transition and at rest. The secure execution ledger provides a global holistic view of program execution in the whole system, allowing auditing the behavior of individual users as well as user groups. By tightly integrating these three components, the project seeks to achieve strong support for the four pillars of the cluster data security: authentication, authorization, auditing, and data protection.", "document_id": 287705}]}, {"paragraphs": [{"qas": [{"question": "Where is the conference held?", "id": 173961, "answers": [{"answer_id": 227816, "document_id": 287707, "question_id": 173961, "text": " Denver, Colorado.", "answer_start": 366, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "CS Student Presented in Top High Performance Computing Conference | CS Student Presented in Top High Performance Computing Conference Peyman Faizian, a PhD student from the CS Department, has published a full paper in the prestigious IEEE/ACM SC: the International Conference for High Performance Computing, Networking, Storage and Analysis, held in November 2017 in Denver, Colorado. This is one of the top conferences in the High Performance Computing area. The paper, titled \u201cA Comparative Study of SDN and Adaptive Routing on Dragonfly Networks\u201d describes the Software Defined Networking (SDN) techniques developed for the state-of-the-art HPC interconnection networks, and compares the performance of Software Defined Networking (SDN) with the state-of-the-art globally adaptive routing schemes used in the current generation supercomputers. This research is a part of a Software Defined Networking project in and is performed in collaboration with Md Atiqul Mollah and Zhou Tong under the supervision of Prof. Xin Yuan and Mike Lang, a collaborator from Los Alamos National Laboratory. Peyman is a member of the CS EXPLORER laboratory (http://explorer.cs.fsu.edu).", "document_id": 287707}]}, {"paragraphs": [{"qas": [], "context": "CS teams up with FSU-Teach and College of Education to investigate  methods to incorporate Computer Science education in middle school  mathematics courses. | CS teams up with FSU-Teach and College of Education to investigate  methods to incorporate Computer Science education in middle school  mathematics courses. Sep 22, 2016 | News CS faculty Prof. Xin Yuan and Prof. David Whalley team up with Prof. Ellen Granger and Prof. Sherry Southerland from\u00a0 FSU-Teach and Prof. Christine Larson from College of Education in a project to investigate methods to incorporate Computer\u00a0 Science education in middle school mathematics courses. This is a three-year project funded by the National Science Foundation (NSF) in the amount of $1.1 Million. In this project, the team will work with middle-school teachers to develop and pilot-test Computer Science modules to be integrated into middle-school general-mathematics courses (grades 6, 7, and 8). Incorporating Computer Science modules in mathematics courses may also help to reinforce understanding of mathematics. By targeting the middle school years, the project seeks to not only prepare students with foundational Computer Science background to enable success in high-school CS courses, but also to provide positive engagement for all students in early experiences designed to foster and maintain interest in CS.", "document_id": 287717}]}, {"paragraphs": [{"qas": [], "context": "FSU Computer Science Department Graduate Study Application Information | FSU Computer Science Department Graduate Study Application Information Thank you for your interest in the Computer Science department\u2019s graduate programs. Please be sure that you refer to the section that applies to you, depending upon whether you are a US Applicant or an International Applicant. If you have any questions, please contact Daniel Clawson: Computer Science Graduate Coordinator Email: admissions@cs.fsu.edu Phone: 850-645-4975 You may also use this inquiry tool: Connect With Us! Application Instructions for Domestic Students (U.S. Citizens and Permanent Residents) Application Instructions for International Students Financial Aid Information Minimum Admission requirements for Graduate Degree Programs . Satisfying these minimum criteria does not guarantee admission; not meeting these requirements will not be accepted. Computer Science (CS) MS and PhD Programs Admissions requirements Computer Network and System Administration (CNSA) MS Program Admissions Requirements Cyber Criminology (CC) MS Program Admissions Requirements Cybersecurity MS Program Admissions Requirements Additional Requirements for Students Seeking Admission to the Computer Science Department from Other FSU Departments Application Deadlines Starting Term All students seeking Assistantships and International students Domestic students not seeking Assistantships Fall Semester January 15th June 1st Spring Semester September 1st November 1st All students interested in support from the department should complete their applications before the deadline for assistantship consideration. Incomplete applications or applications completed after the department deadlines may be denied. There is no deferring of admission or assistantship offers.", "document_id": 287664}]}, {"paragraphs": [{"qas": [], "context": "Michael Gubanov | Michael Gubanov Assistant Professor Office: Telephone: E-Mail: gubanov [ at cs dot fsu dot edu ] Visit Personal Page Research Dr. Gubanov\u2019s research is in Data Science, Large-scale Data Management, Scalable Machine/Deep Learning, Web-search, and Mobile Computing.", "document_id": 287751}]}, {"paragraphs": [{"qas": [], "context": "Dr. Sonia Haiduc Receives Most Influential Paper Award | Dr. Sonia Haiduc Receives Most Influential Paper Award Dr. Sonia Haiduc has received the Most Influential Paper Award at the 27th edition of the IEEE International Conference on Software Analysis, Evolution and Reengineering (SANER 2020) for the paper \u201cOn the Use of Automated Text Summarization Techniques for Summarizing Source Code\u201d, published at WCRE\u201910. This award is given to the paper published at the conference 10 years ago that has had the most impact on the field since then.", "document_id": 287811}]}, {"paragraphs": [{"qas": [{"question": "Who is eligible for the Southern Fidelity scholarship?", "id": 200020, "answers": [{"answer_id": 229278, "document_id": 287827, "question_id": 200020, "text": "Computer Science graduate students who have excelled in their academic studies and work at least 15 hours per week", "answer_start": 2064, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "CS Department Endowment Scholarships | CS Department Endowment Scholarships To apply for the following scholarships, please use the scholarship portal . Follow the instructions to create an account. 1 Hall Undergraduate Scholarship = $1000. Offered to computer science undergraduate students with academic talent and financial need. Application starts in January for the following academic year. The application deadline is February 14 each year. 3 Harris Undergraduate Scholarships \u2013 $4000 each. Offered to computer science undergraduate students who have excelled in their academic studies. Application turn in starts in January to apply for the following academic year. The application deadline is February 14 each year. The Harris Corporation, headquartered in Melbourne, Florida established an endowment in 2001 to provide scholarships for highly qualified Florida State University computer science undergraduate students. Three awards of $4,000 each are given annually to students that are eligible to receive a US security clearance. Summer internships at Harris Corporation are available and encouraged for awardees. Interested students should submit an application, unofficial transcripts, and a resum\u00e9 to the undergraduate advisor in 203C\u00a0Love by the 14th of February prior to the desired award year. Awardees will be announced at the Annual Computer Science Awards Ceremony, held in April. 2 or 3 Owenby Undergraduate Scholarships \u2013 $2000 each. Offered to computer science undergraduate students; preference is given to students with financial need. Application starts in Spring for the following academic year. The application deadline is February 14 each year. 2 Harris Graduate Scholarship \u2013 $8,500 offered to computer science graduate students who have excelled in their academic studies. Tuition will be included. Application starts in January for the following academic year. The application deadline is March 4. 2 Southern Fidelity/Capitol Preferred Graduate Student Scholarships in Computer Science \u2013 $1,000 offered in the Fall and in Spring to Computer Science graduate students who have excelled in their academic studies and work at least 15 hours per week. The application deadline for Fall is April 1, the deadline for Spring is September 1.", "document_id": 287827}]}, {"paragraphs": [{"qas": [], "context": "FSU CS Faculty Welcomes back Ann Tyson to the Department | FSU CS Faculty Welcomes back Ann Tyson to the Department The FSU Computer Science department is pleased to welcome back Ann Ford Tyson to our teaching faculty. Ann taught for our department for a number of years and we are pleased she has returned. Ann Ford Tyson has taught programming 1 and 2, basics of hardware, and computer literacy over her career. She is looking forward to potentially teaching other courses as well, including ethics.  She was a lecturer for many years at University of Michigan, Ann Arbor, then moved to Florida State University to teach there for 10 years.  After a few years exploring other career interests, she is delighted to be returning to FSU to teach in fall 2019.  Her major teaching interests include software design, development, testing and debugging, in multiple languages. She received a B.A. in Psychology from the State University of NY at Buffalo and the M.S. degree in Computer and Communication Science from the University of Michigan.  Some other major interests include fitness training (she is a certified fitness trainer), photography, hiking and biking the Tallahassee trails, and playing with her Welsh Corgi dogs.", "document_id": 287836}]}, {"paragraphs": [{"qas": [], "context": "Jack Winston | Jack Winston Office: 101B Carothers Building Telephone: 850-644-1514 E-Mail: jwinston [ at fsu dot edu ] Visit Personal Page Biography Jack Winston came to the State of Florida workforce after a career in the Navy as an aviator and intelligence subspecialist. His flying career included tours of duty flying the H-46, H-1 and H-57 helicopters. As an intelligence officer, he was assigned to the Intelligence Center Pacific in Hawaii, where he was first exposed to the problem of maintaining very large databases. With the State of Florida, he has been a program manager with the Job Training Partnership Act, a database manager with the Division of Workers\u2019 Compensation, and quality program manager with the Department of Revenue/Child Support Enforcement. He came to FSU in 2004 as the Information Resources Management Coordinator. Professor Winston holds a BS in Applied Mathematics and Naval Science from the United States Naval Academy and a MS in System Management from the University of Southern California. He has been on the faculty at Embry-Riddle Aeronautical University, Pensacola Junior College, Southwest Georgia Technical College, and Bainbridge College. His academic interests include operating systems and database quality assurance.", "document_id": 287756}]}, {"paragraphs": [{"qas": [], "context": "Xiuwen Liu | Xiuwen Liu Professor and Chair Office: 259 Love Building Telephone: (850) 644-0050 E-Mail: liux [ at cs dot fsu dot edu ] Visit Personal Page Research Dr. Lui\u2019s current areas of research are in the broad areas of computer vision and pattern recognition with emphasis on developing effective statistical models and algorithms for computer vision applications, including image understanding, automated target recognition, content-based image retrieval, object detection and segmentation, and real-time vision systems. The activities of the FSU Vision Group focus on research in computer vision that are motivated by psychophysical data and neurophysiological findings. We emphasize that visual modeling is a fundamental problem in computer vision in that visual perception is nonlinear, which makes many of the tools critical for linear systems not applicable. We focus on models which may have great potentials for real-world problems. Research activities at Florida State Vision group are centered around visual information processing from human visual perception modeling, computational models and algorithms for perception problems, to real world applications. Visual information processing is a very complex phenomenon that is involved with prior knowledge stored in memory, modeling of the visual environment, and computation at a given moment of deriving a solution for the purpose of survival and decision making.", "document_id": 287762}]}, {"paragraphs": [{"qas": [], "context": "Piyush Kumar | Piyush Kumar Professor Office: 161 Love Building Telephone: (850) 645-2355 E-Mail: piyush [ at cs dot fsu dot edu ] Visit Personal Page Research Dr. Kumar primarily conducts research on the boundary of algorithms and the \u201creal world\u201d. His main research interests lie in applying the rich theory of algorithms to the domains of computational geometry, computer graphics, pattern recognition, and machine learning. The general theme that threads his research interests in algorithms is narrowing the gap between theory and practice. Theoretical computer science relies on making assumptions that do not generally hold in the real world. For instance, the performance of algorithms on real data vs worst case analysis, the assumption that all memory operations are unit cost, noise in the input, degeneracies, importance of exact solution to optimization problems are issues that seem to need attention but are mostly ignored by the theory community. Addressing some of these issues has been the focus of his research. His work on core sets illustrates why column generation methods perform well in optimization, both theoretically and experimentally. His work on surface and curve reconstruction gave very simple algorithms that were provably fast and could handle noise in the data. His research on cache oblivious algorithms showed why certain ways to analyze algorithms compared to the RAM model of analysis were better for practical purposes. He also worked on the design of a classifier for biometric and other applications. This classifier has also been used for palm identification using outlines of the human hand. The classifier was based upon ideas that came out from his research in optimization.", "document_id": 287770}]}, {"paragraphs": [{"qas": [], "context": "Weikuan Yu | Weikuan Yu Professor Office: 206 Love Building Telephone: 850-644-5442 E-Mail: yuw [ at cs dot fsu dot edu ] Visit Personal Page Research Yu has broad research interests spanning structured and unstructured database systems, data mining and analytics of big data and social networks, parallel computer systems and architecture, high speed interconnects, cloud computing, computational biology and climate modeling, storage and I/O systems.Dr. Yu has graduated many doctoral and master students who upon graduation joined prestigious organizations such as Oak Ridge National Laboratory, Yahoo, Intel, Boeing, IBM T.J. Watson Research Center, Amazan, and other industry positions. He is currently working with the PASL group of two postdoctoral researchers, 8 Ph.D. students and 3 master students. His group\u2019s research has been supported in part by NASA, DOE (ORNL and LLNL), NSF, Alabama Department of Commerce, Mellanox, Intel, NVIDIA, and Scitor, along with equipment donations from Mellanox, NVIDIA, and Solarflare. Yu\u2019s research won the 2012 Alabama Innovation Award and the First Prize of the 2012 ACM Student Research Competition Grand Finals. Yu is a senior member of IEEE and member of ACM and USENIX.", "document_id": 287781}]}, {"paragraphs": [{"qas": [], "context": "Policy for Selection of Departmental Representative at Graduation | Policy for Selection of Departmental Representative at Graduation Adopted by the Department of Computer Science\u00a0 since 11/14/94 Rules imposed by the University We are required to have a faculty representative of the department at graduation. This representative may not hood doctoral students. If a doctoral student attends his or her graduation ceremony, it is the responsibility of the major professor to be there to hood the student, or to arrange for another departmental faculty member to do it. Neither members of the graduation staff nor the departmental representative may hood, so don\u2019t ask them to do it. (If the major professor absolutely cannot do the hooding, another member of the committee should be asked to do it.) The departmental algorithm for selecting a representative Repeat: The top person on the list who is not on leave and not hooding one of his or her students is the designated departmental representative. This person (hereinafter called the \u201cdesignee\u201d) has the responsibility. It is perfectly acceptable for the designee to allow another faculty member (not otherwise obligated in the graduation ceremony) to substitute. Credits are updated after each semester, and the new ordered list is formed by inserting the people with new counts back into the list . A person whose priority changes goes to the back of the list within a given category. Otherwise order within each priority is unchanged. Credit is issued for either being departmental rep or hooding 1 or more students. New faculty go to the back of the priority 0 sub-queue in the order in which they formally accept a position. Note 1: Each semester, the department is asked to submit in writing the name of the designee. Note 2: The list was initialized as follows: For those with priority > 0, the order is by time since entering that category. For those with no previous service, the order was determined by random draw.", "document_id": 287788}]}, {"paragraphs": [{"qas": [], "context": "Dr. David Whalley awarded $600K NSF grant for Instruction-Level Parallelism Research | Dr. David Whalley awarded $600K NSF grant for Instruction-Level Parallelism Research FSU Department of Computer Science Professor David Whalley has been awarded a new NSF grant for his project \u201cStatically Controlled Asynchronous Lane Execution (SCALE)\u201d. The project is a collaborative effort between FSU and a colleague from Michigan Technological University. The aim of the project is to support separate asynchronous execution lanes where dependencies between instructions in different lanes are statically identified by the compiler to provide inter-lane synchronization. As implied by its name, the SCALE approach has the ability to scale to different types and levels of parallelism. The goal is to meet or exceed the performance of a traditional superscalar processor while approaching the energy efficiency of a very long instruction word (VLIW) processor. The award includes funding for FSU in the amount of $600,000. For more information, please visit: FSU researcher receives NSF funding to make higher-performing computer apps", "document_id": 287804}]}, {"paragraphs": [{"qas": [], "context": "Dr. Fedyukovich\u2019s Paper Has Been Selected As a Distinguished Paper for PLDI 2021 | Dr. Fedyukovich\u2019s Paper Has Been Selected As a Distinguished Paper for PLDI 2021 FSU Computer Science Assistant Professor, Dr. Grigory Fedyukovich, has received the distinguished paper award at 42nd ACM SIGPLAN International Conference on Programming Language Design and Implementation (PLDI \u201921) for the paper \u201cSpecification Synthesis with Constrained Horn Clauses\u201d (co-authored with researchers from TCS Research and IIS India). The problem of synthesizing specifications of undefined procedures has a broad range of applications, but the usefulness of the generated specifications depends on their quality. The paper contributes a technique for finding maximal and non-vacuous specifications. Maximality allows for more choices for implementations of undefined procedures, and non-vacuity ensures that safety assertions are reachable. To handle programs with complex control flow, the technique discovers not only specifications but also inductive invariants. The iterative algorithm lazily generalizes non-vacuous specifications in a counterexample-guided loop, where the key component is an effective non-vacuous specification synthesis algorithm. The approach has been implemented\u00c3\u0082in a tool called HornSpec, taking as input systems of constrained Horn clauses and experimentally evaluated on a range of public benchmarks.", "document_id": 287805}]}, {"paragraphs": [{"qas": [{"question": "How much was the grant worth?", "id": 199945, "answers": [{"answer_id": 229203, "document_id": 287807, "question_id": 199945, "text": "$449,882", "answer_start": 171, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}, {"question": "What was the title of the paper Dr. Fedyukovich was awarded a grant for?", "id": 199947, "answers": [{"answer_id": 229205, "document_id": 287807, "question_id": 199947, "text": "\u201cAutomated Word Level Synthesis for Hardware Code Generation and Verified Abstraction\u201d", "answer_start": 230, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "Dr. Grigory Fedyukovich Awarded NSF Grant | Dr. Grigory Fedyukovich Awarded NSF Grant FSU Computer Science Assistant Professor, Dr. Grigory Fedyukovich has been awarded a $449,882 grant from the National Science Foundation titled \u201cAutomated Word Level Synthesis for Hardware Code Generation and Verified Abstraction\u201d. The success of formal methods has enabled widespread applications in ensuring the correctness, safety, and reliability of computing systems. This project on automated word-level synthesis will provide a core utility for diverse applications since the bitvector representation of various computing systems is well-suited for both hardware designs and low-level software. By virtue of the underlying formal reasoning, the programs synthesized by the automated methods are guaranteed to be correct-by-construction, thus improving their quality and improving developer productivity. The two application domains targeted in this project \u2013 computer networks and systems-on-chips form the core components of the computing infrastructure that provides numerous products and services of interest to society. The research activities will involve training and mentoring graduate students, and the development of teaching material. Real-world applications that require bit-precise reasoning for synthesis and verification, such as in the domains of computer networks and hardware, remain challenging in terms of performance and scalability. One main reason is that existing techniques for synthesis over bitvectors rely largely on a translation of multi-bit words down to bits, called bit-blasting, which destroys the high-level structure in the application programs. This project aims to improve the automated synthesis of word-level bit-precise programs, with applications in network packet processing and verification of systems-on-chip (SoCs). The core research activities will include the development of a new approach to word-level synthesis. The synthesizer will be guided by word-level quantifier elimination over bitvectors without bit-blasting. It will also leverage the well-known framework of Syntax-Guided Synthesis (SyGuS), where the search for a program is guided by domain knowledge captured in the form of context-free grammars, program sketches, and partial specifications comprising input-output examples. The project will develop suitable grammars and synthesis methods in two application domains: (1) synthesis of code for programmable network switches from high-level packet processing programs, and (2) synthesis of verified architecture-level abstractions from hardware designs of accelerators and processors in modern SoCs. These will improve techniques for code generation (from high-level to low-level programs) and verified abstraction (from low-level to high-level programs), respectively. The project is a collaboration with Prof. Dr. Aarti Gupta at Princeton University.", "document_id": 287807}]}, {"paragraphs": [{"qas": [], "context": "Dr. Xian Mallory Joins the CS Department | Dr. Xian Mallory Joins the CS Department Dr. Xian Mallory joined the Department of Computer Science at FSU in Fall 2020. She obtained her bachelor\u2019s degree in Shanghai Jiao Tong University in 2004, majoring in Information Engineering. She then obtained two master\u2019s degrees in Shanghai Jiao Tong University and the John\u2019s Hopkins University in 2006 and 2008, majoring in Pattern Recognition and Intelligent Systems, and Electrical Engineering, respectively. Between 2010 and 2012, Dr. Mallory worked in two genomic sequencing companies, the McDonnell Genome Institute at St. Louis, Missouri, and the Institute for Genome Sciences at Baltimore, Maryland. The booming of genomic sequencing and what the genomic data can do for cancer patients drove Dr. Mallory to further pursue her Ph.D. to develop her own computational tools for this interdisciplinary area. In 2012, Dr. Mallory went to Rice University to pursue her Ph.D. in Computer Science, collaborating with professors in MD Anderson Cancer Center on developing novel machine learning tools and algorithms to more accurately detect mutations in human genomes. She graduated with the Ph.D. in 2018 and continued her research on single-cell DNA sequencing data analysis with Dr. Luay Nakhleh in the Computer Science Department at Rice University as a Postdoctoral Research Associate, co-mentored by Dr. Nicholas Navin at MD Anderson Cancer Center. She was one of the awardees of the Computational Cancer Biology Trainee Program between 2018 and 2020. Due to the working experience at McDonnell Genome Institute, as well as the opportunity to work with international consortia such as The Cancer Genome Atlas (TCGA), Human Genome Structural Variation Consortium (HGSVC), and the Genome In A Bottle (GIAB), Dr. Mallory published numerous top journals in genomics area, including but not limited to Nature, Nature Methods, Nature Communications, New England Journal of Medicine, Cell Stem Cell, Genome Research, etc. She also published first-author papers on top journals such as Genome Research, Genome Biology, PLoS Computational Biology, etc. In addition, Dr. Mallory publishes in top conferences such as RECOMB-CG. Dr. Mallory is interested in collaborating with biologists who have interesting human genomics data such as NGS, PacBio, Optical Maps, 10X, Nanopore, HiC, single-cell DNA/RNA sequencing, etc. She is also interested in collaborating with computer scientists on developing novel computational tools to more accurately solve biological problems using algorithms, statistics, and machine learning.", "document_id": 287814}]}, {"paragraphs": [{"qas": [], "context": "Dr. Zhao Awarded $450k Research Grant by Air Force | Dr. Zhao Awarded $450k Research Grant by Air Force Prof. Peixiang Zhao has been awarded a $450,000, three-year grant from the U.S. Air Force Office of Scientific Research (AFOSR)\u2019s Young Investigator Research Program (YIP). Peixiang is one of 45 scientists and engineers to share some $19.9 million in grants from this year\u2019s AFOSR YIP program. The program is open to researchers in the U.S. who have received a Ph.D. or equivalent degree in the last five years and demonstrate \u201cexceptional ability and promise for conducting basic research.\u201d Peixiang\u2019s proposal was titled \u201cGraphs at Your Fingertips: Managing and Summarizing Big Graphs.\u201d In this project, Peixiang will work with his students to design and develop scalable graph management and summarization solutions that can simplify real-world graphs of extreme scale, heterogeneity, and dynamics into concise, structure-enriched, and quality-preserving summaries with the goal of enabling efficient, cost-effective, scalable, and interactive management and computation for big graphs.", "document_id": 287818}]}, {"paragraphs": [{"qas": [{"question": "What will Dr. Zhao work on for the project?", "id": 199992, "answers": [{"answer_id": 229250, "document_id": 287819, "question_id": 199992, "text": "study new principles, methodologies, and algorithms for efficient and effective management and computation for large-scale information networks,", "answer_start": 816, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "Dr. Zhao Awarded the Army Research Office (ARO) Young Investigator Program (YIP) Award | Dr. Zhao Awarded the Army Research Office (ARO) Young Investigator Program (YIP) Award Prof. Peixiang Zhao has been awarded a $360,000, three-year grant from the U.S. Army Research Office (ARO)\u2019s Young Investigator Program (YIP).  The Army Research Office considers its Young Investigator Program award to be \u201cone of the most prestigious awards bestowed by the Army on outstanding scientists beginning their independent careers\u201d, the objective of which is to attract outstanding young university faculty members to pursue fundamental research in areas relevant to the Army, to support their research in these areas, and to encourage their teaching and research careers. In this project, Peixiang will work with his students to study new principles, methodologies, and algorithms for efficient and effective management and computation for large-scale information networks, which have formed a critical infrastructure of our modern networked world, and found widely varying applications in Army and beyond.", "document_id": 287819}]}, {"paragraphs": [{"qas": [], "context": "Dr. Zhi Wang and Dr. Peixiang Zhao promoted | Dr. Zhi Wang and Dr. Peixiang Zhao promoted Congratulations to Dr. Zhi Wang and Dr. Peixiang Zhao on their promotion to the rank of associate professor with tenure, effective in Fall 2018. Dr. Zhi Wang received his Ph.D in computer science from North Carolina State University in 2012, and his M.S and B.S from Xi\u2019an Jiaotong University in 2002 and 1999, respectively. He joined the Department of Computer Science at Florida State University as an assistant professor in 2012. His research interest focuses on systems security. Dr. Wang has published 27 papers in the areas of systems and security, including all the top four security conferences (i.e., IEEE S&P, ACM CCS, USENIX Security, and NDSS) and top systems conferences, such as USENIX ATC and EuroSys. Dr. Wang is a recipient of the NSF CAREER award (2015). Dr. Peixiang Zhao got his Ph.D. in Computer Science from the University of Illinois at Urbana-Champaign (UIUC) in 2012. He got his M.S. and B.S. degrees from Computer Science at Peking University (PKU) in 2004 and 2001, respectively. He joined the Department of Computer Science at Florida State University as an assistant professor in 2012. His research interest centers around data and network science, database systems, data mining, and data-intensive computation and analytics. His research has been recognized and funded in part by the Air Force Office of Scientific Research (AFOSR) Young Investigator Award (2018), NSF, Danfoss Turbocor, and FSU.", "document_id": 287821}]}, {"paragraphs": [{"qas": [], "context": "UPE - FSU Welcome to the Florida State University Chapter of UPE What is UPE? UPE, Upsilon Pi Epsilon, is an international honor society recognizing and promoting academic achievement in the computer and information disciplines.\u00a0 UPE is the first and only existing   international honor society devoted to these fields.\u00a0 UPE has received endorsements from the two most prominent professional computer organizations in   the world, the Association for   Computing Machinery (ACM) and the IEEE Computer Society (IEEE-CS).\u00a0 UPE supports both undergraduate and graduate students in their pursuit of academic excellence via scholarship awards. New Member Induction Spring 2011 New members are invited to join by written invitation, when they have met UPE induction requirements, by the FSU CS Department.\u00a0 New members will need to print, fill out and return the response form provided here: UPE New Member Response Form After you are Inducted: How to Obtain your One-Year Free Membership to ACM One of the perks of UPE membership is a free one-year membership to ACM, which includes a one-year subscription to the very-highly regarded journal Communications of the ACM .\u00a0 To obtain your free membership: email orders@acm.org to submit your request.\u00a0 You will need to submit your full name, UPE 15-character member number, address, phone number, email address, gender, age, institution (chapter) name, expected degree title/field of study and expected year of graduation. Chapter News The induction of new members will be held Friday, April 22nd, 2011.\nThis event is held in conjunction with the annual Computer Science \nDepartment Honors \nand Awards Ceremony. Contacts FSU UPE Faculty Advisor: to be announced FSU CS Department Undergraduate Advisor: to be announced", "document_id": 287842}]}, {"paragraphs": [{"qas": [{"question": "Who conducts research on bioinformatics and cancer genomics?", "id": 200081, "answers": [{"answer_id": 229339, "document_id": 287919, "question_id": 200081, "text": "Xian F. Mallory", "answer_start": 651, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}, {"question": "Who conducts research on programming languages and compilers?", "id": 200086, "answers": [{"answer_id": 229344, "document_id": 287919, "question_id": 200086, "text": "David Whalley and Grigory Fedyukovich", "answer_start": 1021, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "Research Area Coverage | Research Area Coverage The graduate faculty in the department cover most of the major Computer Science research areas. The following list shows the research areas and the faculty conducting research in them. Besides core Computer Science areas, our faculty also engage in inter-disciplinary research with other disciplines including Mathematics, Statistics, Biology, Engineering, and Medicine. Algorithms and Theory of Computation: Sudhir Aggarwal , Piyush Kumar , Michael Mascagni , Alan Kuhnle and Grigory Fedyukovich Artificial Intelligence: Xiuwen Liu , Alan Kuhnle and Daniel Schwartz Bioinformatics and Cancer Genomics: Xian F. Mallory Computer Architecture and Operating Systems: Gary Tyson , Andy Wang , Zhi Wang , David Whalley , Weikuan Yu , and Xin Yuan Databases and Data Engineering: Michael Gubanov and Peixiang Zhao Mobile Computing: Gary Tyson and Jie Yang Networking: Sudhir Aggarwal , Zhenhai Duan , Xin Yuan , Weikuan Yu and Zhenghao Zhang Programming Languages and Compilers: David Whalley and Grigory Fedyukovich Parallel and Distributed Systems: Weikuan Yu and Xin Yuan Scientific Computing: Michael Mascagni and Weikuan Yu Security: Sudhir Aggarwal , Michael Burmester , Xiuwen Liu , Zhi Wang , and Jie Yang Software Engineering: David Gaitros , Sonia Haiduc , and Grigory Fedyukovich", "document_id": 287919}]}, {"paragraphs": [{"qas": [], "context": "Professor Sonia Haiduc Wins NSF Grant | Professor Sonia Haiduc Wins NSF Grant Dec 7, 2015 | News Computer Science Assistant Professor Sonia Haiduc recently won an NSF grant in the amount of $225,000 for her current research in the software engineering field. The grant comes from the Directorate for Computer Information Science & Engineering (CISE).  She continues the growing list of recent faculty and staff to be funded for their various research efforts here at the university. The title of her project is \u201cText Retrieval in Software Engineering,\u201d and the goal is reshape the use of TR (text retrieval) aspects in software engineering. This project will encourage the use of more TR based techniques in a the day to day task of software developers. Nowadays, there is simply too much textual information located in software artifacts for humans to process. With this work, the TR configuration in software engineering applications will be transformed to be able to perform queries that can in turn present the best TR configuration for each individual software engineering application. Sonia received a Ph.D.  from Wayne State University in Detroit, MI and before that, studied her undergraduate years at Babes-olyai University in Cluj-Napoca, Romania. She has numerous accolades including the ACM SIGSOFT CAPS travel award in 2012. Her most recent publications have landed her many presentations including the ACM Conference on Systems, Programming, Languages and Applications: Software for Humanity in Pittsburgh this year. Congratulations to Sonia once again on her  NSF grant and her continued pioneering for text retrieval information.", "document_id": 287927}]}, {"paragraphs": [{"qas": [], "context": "Sudhir Aggarwal elected Mainline Information Systems Endowed Professor | Sudhir Aggarwal elected Mainline Information Systems Endowed Professor Former Department Chair Dr.\u00a0 Sudhir Aggarwal was elected this year as the Mainline Information Systems endowed professor. This nomination carries with it a monetary award of $6,000 to be allocated toward future research uses. Dr.\u00a0 Aggarwal has shown his passion for our department for over a decade. Before joining the department as chair in 2002, he was Chief Technology Officer of the Internet Content Delivery and Distribution business unit of Lucent Technologies and also Director of the Network Computing Research Department at Bell Laboratories. His current research interests are in password cracking and digital forensics. His previous research spans topics in computer and communication networks, cyber security software, infrastructure for network multiplayer games and verification of communication protocols, among other aspects. He earned a Ph.D. from the University of Michigan in Computer and Communication Sciences, and M.S. and B.S degrees in Mathematics from the University of Michigan and Stanford University respectively. Dr.\u00a0 Aggarwal is the only professor to hold the position recently since this award has remained vacant for several years. Mainline Information Systems is a Tallahassee based corporation that designs and supports IT solutions that help businesses increase their effectiveness. The endowed professorship is a partnership with Mainline that goes back to the 2008-2009 academic year. The goal of this award is to support the department and the individuals who strive to make it the best it can be. Each professorship carries a three year term. All nominees must be tenured faculty to be eligible and must not currently hold any other named professorships. Congratulations Dr.\u00a0 Aggarwal for your award and good wishes on your future research endeavors here at Florida State University.", "document_id": 287934}]}, {"paragraphs": [{"qas": [{"question": "What does Dr. Hoang's paper study?", "id": 200116, "answers": [{"answer_id": 229373, "document_id": 287936, "question_id": 200116, "text": "studies the NIST standard proposal DFF of Format-Preserving Encryption (FPE), a method to encrypt credit-card numbers and legacy databases.", "answer_start": 520, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "Two papers from the CS department accepted by ACM CCS, one of the top security conferences | Two papers from the CS department accepted by ACM CCS, one of the top security conferences Two papers from the CS department have been accepted by this year\u2019s ACM Conference on Computer and Communications Security (CCS), one of the top security conferences. One of the papers, titled \u201cIdentity-based Format-Preserving Encryption,\u201d is a joint work between Prof. Viet Tung Hoang and Prof. Mihir Bellare (UC San Diego). The paper studies the NIST standard proposal DFF of Format-Preserving Encryption (FPE), a method to encrypt credit-card numbers and legacy databases. DFF is used by Veriphone, and claims security even when some local devices are compromised. The paper formalizes the security notions that DFF is meant to offer, proves that DFF indeed meets those goals and suggests further security enhancements. The other paper, titled \u201cHear Your Voice Is Not Enough: An Articulatory Gesture Based Liveness Detection for Voice Authentication,\u201d is a joint work among Linghan Zhang, a third year PhD student in the department, and her lab-mate Sheng Tan, and her advisor Prof. Jie Yang. In the paper, they proposed VoiceGesture, a mobile voice liveness detection system on smartphones. It detects voice spoofing attacks by extracting user-specific features that resulted from the articulatory gesture when a user speaks a passphrase to a smartphone. VoiceGesture is practical as it requires neither cumbersome operations nor additional hardware but a speaker and a microphone that are commonly available on smartphones. Experimental results show that VoiceGesture achieves over 99% detection accuracy at around 1% Equal Error Rate (EER).", "document_id": 287936}]}, {"paragraphs": [{"qas": [{"question": "What is the title of Dr. Yang's project?", "id": 200136, "answers": [{"answer_id": 229393, "document_id": 287902, "question_id": 200136, "text": " \u201cExploiting Fine-grained WiFi Signals for Wellbeing Monitoring.\u201d", "answer_start": 270, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "Professor Jie Yang Receives NSF and ARO/Stevens Grants | Professor Jie Yang Receives NSF and ARO/Stevens Grants Jie Yang, assistant professor in the Department of Computer Science, has been granted a four-year, $200,000 National Science Foundation Award for his project, \u201cExploiting Fine-grained WiFi Signals for Wellbeing Monitoring.\u201d He was also granted with a one year ARO/Stevens grant for his project entitled, \u201cMaking Inferences of Physical Properties to Enhance Wireless Security.\u201d The NSF continuously grants awards to deserving faculty members at prominent universities in support of various research efforts. The ARO is the Army Research Office which grants awards for innovative research on mobile wireless security. Professor Yang joined the Florida State computer science faculty after receiving his Ph.D. degree in Computer Engineering at Stevens Institute of Technology in 2011. His research interests include cyber security and mobile computing, with an emphasis on wireless security, smartphone security and applications, location systems, mobile healthcare and vehicular applications. For his first current project, Professor Yang will seek to exploit the capabilities of WiFi technology in order to capture changes in the environment and human beings. These capabilities open the door for a range of monitoring including things such as human breathing, heart rates, and daily activities. This is research that can have a substantial impact in healthcare, as it frees the individual from active monitoring by a license professional or other forms of wearable monitoring systems. Something as complicated as detecting the onslaught of a disease can be as simple as a few innovations to existing WiFi infrastructures. As Yang states, \u201cThe proposed WiFi-enabled wellbeing monitoring not only advances and extends the applications that could be supported by WiFi networks but also enables easy and large-scale deployment in non-clinical settings due to the proliferation of WiFi networks.\u201d The 2nd award is to finish the third year of a three year project to find new ways to deliver securable data across hostile military environments. This all to prevent eavesdropping from oppositional forces in combat along with other potential uses. Once again Yang states, \u201cThe proposed research work highlights the importance of new paradigms for securing wireless systems that takes advantage of unique physical properties to thwart security threats without requiring overhead to wireless devices.\u201d Once again congratulations to Dr. Yang for his outstanding research efforts.", "document_id": 287902}]}, {"paragraphs": [{"qas": [{"question": "What does Shayok Chakraborty research?", "id": 200159, "answers": [{"answer_id": 229416, "document_id": 287917, "question_id": 200159, "text": " Computer Vision and Machine Learning", "answer_start": 390, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}, {"question": "What topics does Piyush Kumar research?", "id": 200169, "answers": [{"answer_id": 229426, "document_id": 287917, "question_id": 200169, "text": "Algorithms with applications to Computational Geometry, Computer Graphics, Pattern Recognition, and Machine Learning", "answer_start": 1273, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}, {"question": "What topics does Chris Mills research?", "id": 200173, "answers": [{"answer_id": 229430, "document_id": 287917, "question_id": 200173, "text": "Software Engineering, Artificial Intelligence, and Large Scale Data Analytics.", "answer_start": 1591, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}, {"question": "What topics does Gary Tyson research?", "id": 200175, "answers": [{"answer_id": 229432, "document_id": 287917, "question_id": 200175, "text": "Computer Architecture, Compiler Optimizations, Mobile Computing, Bioinformatics", "answer_start": 1776, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}, {"question": "What topics does Weikuan Yu research?", "id": 200180, "answers": [{"answer_id": 229437, "document_id": 287917, "question_id": 200180, "text": "Structured and Unstructured Database Systems, Data Mining, Big Data Analytics, Social Network, Parallel Computer Systems and Architecture, High Speed Interconnects, Cloud Computing, Computational Biology and Climate Modeling, Storage Systems, Networking, Scientific Computing ", "answer_start": 2131, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "Graduate Faculty Research Areas | Graduate Faculty Research Areas Sudir Aggarwal : Computer Networks, Cybersecurity, Distributed and Real-time Systems, Search Engines, Modeling and Simulation Mike Burmester : Security, Cryptography, Privacy/Anonymity, Pervasive/Ubiquitous Systems, Lightweight Cryptographic Applications, RFIDs and Sensor Applications, Trust Management Shayok Chakraborty : Computer Vision and Machine Learning Zhenhai Duan : Computer Networks, Multimedia Applications, Routing, Network Security, Wireless Networks Grigory Fedyukovich : Automated software verification and synthesis, Equivalence checking, and Applications of relational verification to analyzing software security. David Gaitros : Software Engineering Xifeng Gao : Computer Graphics, Computer Vision, Visualization, Robotics, and Fabrication. Michael Gubanov : Data Science, Large-scale Data Management, Scalable Machine/Deep Learning, Web-search, and Mobile Computing. Sonia Haiduc : Software Engineering, Software Maintenance and Evolution, Program Comprehension, Source Code Search Lois Hawkes : Computer Networks, High Performance Computing, Fault-tolerance Viet Tung Hoang : Cryptography and Algorithms Alan Kuhnle : Optimization, Machine Learning, and Network Science Piyush Kumar : Algorithms with applications to Computational Geometry, Computer Graphics, Pattern Recognition, and Machine Learning Xiuwen Liu : Computer Vision, Pattern Recognition Xian F. Mallory : Bioinformatics and Cancer Genomics Michael Mascagni : Stochastic Computing, Monte Carlo Methods and their Applications Chris Mills : Software Engineering, Artificial Intelligence, and Large Scale Data Analytics. Daniel Schwartz : Mathematical Logic, Fuzzy Logic, Formal Methods in Artificial Intelligence Gary Tyson : Computer Architecture, Compiler Optimizations, Mobile Computing, Bioinformatics An-I Andy Wang : File Systems, Operating Systems Zhi Wang : Operating System Security, Virtualization Security, Mobile Security David Whalley : Compilers, Computer Architecture, Embedded Systems, Performance Evaluation Jie Yang : Cybersecurity, Mobile Computing Weikuan Yu : Structured and Unstructured Database Systems, Data Mining, Big Data Analytics, Social Network, Parallel Computer Systems and Architecture, High Speed Interconnects, Cloud Computing, Computational Biology and Climate Modeling, Storage Systems, Networking, Scientific Computing Xin Yuan : Computer Networks, Software Defined Networks, Interconnection Networks, Parallel Computer Architecture and Systems, High Performance Computing Jiawei Zhang : Data Fusion, Data Mining, and Machine Learning Zhenghao Zhang : Computer Networks, Network Security Systems, Scheduling, Performance Analysis, Wireless Access Networks, Cross-layer Design, Optical Networks, Wireless Sensor Networks Peixiang Zhao : Database Systems, Data Mining, Data-intensive Computation and Analytics", "document_id": 287917}]}, {"paragraphs": [{"qas": [], "context": "Sonia Haiduc | Computer Science\n\nSonia Haiduc\nAssociate Professor\nOffice:\n251B Love Building\nTelephone:\n(850) 645-0727\nE-Mail:\nshaiduc [ at cs dot fsu dot edu ]\n Visit Personal Page\nResearch\nDr. Haiduc\u2019s research interests are in software engineering, including software maintenance and evolution, program comprehension, source code search, and applications of information retrieval and natural language processing for solving software engineering tasks. Her work has been published in several highly selective software engineering venues, including the IEEE/ACM International Conference on Software Engineering. She serves on the Program Committee of several international conferences on software evolution and program comprehension and is a reviewer for journals such as the IEEE Transactions in Software Engineering, Journal of Software: Evolution and Process, and Automated Software Engineering.\n", "document_id": 164083}]}, {"paragraphs": [{"qas": [], "context": "Department Bylaws | Computer Science\n\nDepartment Bylaws\nBylaws of the Department of Computer Science\nFlorida State University\nApproved an adopted by the faculty by unanimous vote in October 1984. Revised and re-adopted by vote of the faculty in April 2006. Amended by vote of the faculty in November 2007, September 2008, December 2008, January 2009, and September 2009, and October 2014. Approved December, 2014 by a two-thirds majority of the faculty via a secret ballot. Amended by vote of the faculty\nin October 2015. Amended by vote of the faculty via a secret ballot in November 2019.\nAmended by vote of the faculty via a secret ballot in February 2020.\nPreamble\nThe faculty of the Florida State University Department of Computer Science has drafted and adopted these Bylaws in order to define a set of principles, organizational structures, and procedures that will enable the smooth and effective operation of the department in furtherance of its mission.\nThe department bylaws adhere to and are consistent with University policies found in the FSU Constitution, the BOT-UFF Collective Bargaining Agreement, the Faculty Handbook, and annual Promotion and Tenure letter.\nEach faculty member has an equal responsibility in furthering the academic goals and in maintaining the academic excellence of our department. This will be achieved in an atmosphere of collegiality and constructive cooperation.\nIn modifying departmental operations, faculty and staff members are expected to be familiar with and follow the Florida State University Substantive Change Policy as found on the FSU Regulations web site.\n1 Voting Membership\nThe Computer Science faculty is defined as follows:\nTenure-track faculty: consisting of those employees having tenure in the Department of Computer Science or those who are earning time creditable towards tenure in the Department of Computer Science;\nSpecialized faculty: consisting of those individuals in faculty classifications that are not tenured and not earning time creditable towards tenure, who are appointed as full-time employees of the department or are full-time employees of the FSU Panama City Campus primarily teaching Computer Science courses.\nThe Voting Membership of the department is defined as the Department Chair and all the members of the Computer Science Faculty for whom the Department Chair approves the annual Assignment of Responsibilities (AoR) and Annual Evaluation. In addition, any other members of the Computer Science Faculty who hold tenure in the department are entitled to vote on matters related to promotion and tenure, including tenure criteria and recommendations to grant promotion and tenure, and on amendments to the Bylaws.\n2 Faculty Meetings and Voting\nFaculty meetings are typically called by the department chair, but may also be called by petition to the department chair of four voting members. In the latter case, the meeting is to be held within one month. Minutes will be kept and shall be made available to members. At the request of any voting member, Robert\u2019s Rules of Order shall be invoked.\nExcept where these Bylaws specify a different procedure, decisions made by the faculty will be by a vote conducted at a faculty meeting, by letter ballot, or by e-mail ballot. For a faculty meeting, one half of the Voting Membership that are eligible to vote on the measure under consideration constitutes a quorum, and passage of a measure requires a majority of the Voting Membership that is present and eligible to vote on the measure. Passage of a letter or e-mail ballot requires a majority of the Voting Membership that is eligible to vote on the measure. Except where these Bylaws specify differently, all the Voting Membership is eligible to vote.\nIn addition to whatever other matters are proposed for vote at a faculty meeting, the following matters shall be subject to approval by vote of the faculty as described:\nCurricular changes involving creation, deletion, and modifications of requirements for majors, certificate programs, and degree programs.\nThe entire Voting Membership is eligible to vote on these issues, except that for graduate curriculum issues only members with graduate teaching status are eligible to vote.\nCreation and termination of degree programs and their majors require approval by a two-thirds supermajority of the eligible Voting Membership.\nPrior to sending the Dean of the College a recommendation for an offer of new employment in a faculty position, the department chair will conduct a poll of the Voting Membership. For tenure track positions, only members of the tenure-track faculty are eligible to vote in the poll. \nIn addition, recommendations regarding offers of new employment with tenure, and offers of new employment at the ranks of Associate Professor or Professor, shall be subject to the same balloting processes specified in 4.1 (Promotion and Tenure Committee) for internal candidates for tenure and promotion to the respective ranks.\n3 Administrative Officers\n3.1 Department Chair\nThe department chair is the chief administrator of the department. The department chair shall be appointed by the Dean of the College. All other department administrative positions and committees will be appointed by the department chair, with the exception of the Faculty Evaluation Committee, the Promotion and Tenure Committee, and the Department Chair Selection Committee, which are formed in accordance with the provisions as described in Section 4. The department chair will ensure that all department members are informed on matters of policy.\nThe chair is responsible for annually making and signing Assignments of Responsibilities, and writing Annual Evaluation letters. The Annual Evaluation by the chair will take into account the results of the peer evaluation performed by the Faculty Evaluation Committee and the contents of the FEC binder. Each year, the chair shall write a progress towards promotion letter for each faculty member who is not promoted to his/her highest rank when such a letter\nis not provided by the P & T committee. The progress towards promotion letters may be combined with the Annual Evaluation letters.\nThe term of the department chair is three years. In the third year of a department chair\u2019s term a Department Chair Selection Committee will be elected and will recommend to the Dean a slate of department chair candidates for the next term, as described in 4.2.2 (Department Chair Selection Committee). If the department chair position becomes vacant before the end of a term, the same process will be invoked as needed to fill the vacancy.\nThe department faculty may recommend to the Dean that the department chair be removed from office. Such action must be taken according to the following procedure. (a) A petition calling for removal must be signed by a majority of the tenured faculty members and submitted to the Dean. (b) The Dean or his/her representative shall preside at a meeting of the faculty to consider the petition. The department chair will not attend. Two weeks notice shall be given for this meeting. (c) To be adopted, a motion for removal must be supported by 2/3 of the members eligible to vote for the department chair in a secret ballot. This process shall be conducted by the department executive committee (without the department chair), which shall report the vote to the faculty and to the Dean.\n3.2 Other Administrative Officers\nOther faculty may be appointed by the department chair to assist the department chair in administration of the department, and given responsibilities delegated by the department chair. In performance of such delegated responsibilities, these faculty members shall act with the administrative authority of the department chair.\n4 Administrative Committees\nThese Bylaws establish and define the responsibilities of certain committees. Some of these committees are elected by the faculty; the others are appointed by the department chair. In addition to these committees, the department chair may create and appoint additional administrative committees for specific purposes. Except as specified otherwise in these Bylaws, committee members will come from the Voting Membership of the department. The chair of an elected committee is elected by the committee members. The chair of an appointed committee is appointed by the department chair.\n4.1 Promotion and Tenure Committee\nRecommendations for faculty promotion and tenure are made by the Promotion\nand Tenure (P & T) Committee. The Promotion and Tenure (P & T)\ncommittee\nconsists of all faculty members who are voting members in the department\nand who are eligible to vote in some promotion and/or tenure\ncases as described in the following. For tenure cases, only tenured\nfaculty vote. For tenure-track faculty promotion to a given rank, only\nthe faculty at that rank or above vote. For specialized faculty\npromotion to a given rank, only tenured faculty and the specialized faculty\nat that rank or above vote. Some common cases are the following. For\npromotion to Associate Professor, only Associate Professors and Full\nProfessors shall vote; for promotion to Full Professor, only Full\nProfessors shall vote; for promotion to Teaching Faculty II,\nonly tenured faculty,\nTeaching Faculty II, and Teaching Faculty III shall vote;\nfor promotion to Teaching Faculty III, only tenured faculty and\nTeaching Faculty III shall vote.\nEach year, eligible voting members of the P & T committee\nwill consider all faculty who are eligible for promotion, or tenure, or\nboth, if applicable. A\nfaculty member is encouraged to ask the P & T Committee at the\nbeginning of\nthe Spring semester to provide advice regarding whether or not\nhe/she should\ngo forward\nfor promotion and/or tenure. The P & T Committee will use\nthe FEC Binders\n(see 4.2.3) for purposes of providing this advice. The preparation of the\nnomination binder is initiated as per FSU University policies and\nprocedures.\nThis binder is reviewed by the P & T Committee who will vote on a\nrecommendation decision before the binder leaves the department.\nThe P & T Committee will elect a chair from their members who must be a\ntenured full professor. The P & T committee is responsible for the required\npre-tenure reviews. The P & T chair will be responsible for soliciting\nletters if required for pretenure reviews of assistant professors and for\nwriting the actual review that will be submitted for approval by a majority\nof P & T Committee members.\n4.2 Elected Committees and Offices\nThe elected committees are the Department Chair Selection Committee, the Executive Committee, and the Faculty Evaluation Committee.\n4.2.1 Committee Election Procedure\nElection of committee members for the Department Chair Selection Committee, the Executive Committee, and the Faculty Evaluation Committee shall be conducted at a meeting of the faculty. All the voting members of the department are entitled to vote in the election of these committees, unless specified otherwise in these Bylaws. Elections shall be conducted by a faculty member chosen to serve as Secretary for the occasion by the department chair. Voting shall be done by secret ballot in a meeting of the faculty called by the department chair and announced to the faculty at least two weeks in advance.\nElection of members of the committee shall be one at a time in the following manner: The Secretary calls for nominations from the faculty. Once nominations are made, a vote is taken to elect one member of the committee from those nominated. A member of the committee must be elected by a majority vote of the faculty present at the meeting. This process is repeated sequentially for each of the membership slots. In case no nominee obtains a majority, a runoff is held between the nominees with the highest two vote counts (not necessarily distinct) on the previous ballot. If, after repeated ballots, the tie still holds, the tie is resolved as follows: The person who has served most recently on the committee loses (i.e., is not elected for membership); secondarily, the person of lower academic rank loses; tertiarily, the person with fewer years of employment at FSU loses. In cases where these rules do not resolve a tie, the Secretary may attempt to elect committee members by unanimous agreement among himself or herself and the faculty members involved in the tie.\n4.2.2 Department Chair Selection Committee\nA new committee is elected either early in the final year of a term of a sitting department chair, or when the department chair position becomes vacant before the end of a term.\nFour members of the Department Chair Selection Committee shall be elected from the Computer Science faculty. The election procedure is specified in 4.2.1 (Committee Election Procedure). The committee will comprise these four members together with the outside member appointed by the Dean.\nThis committee will recommend a slate of candidates to the faculty for ratification. The minimum number of candidates will be as requested by the Dean. It is permitted that this slate include the incumbent. A two-thirds majority of the Voting Membership is required for ratification of the slate. When a recommendation is ratified, it will be forwarded to the Dean of the College.\n4.2.3 Faculty Evaluation Committee\nThe Faculty Evaluation Committee (FEC) is responsible for annual peer evaluations of faculty, which shall be used as input to the annual evaluation performed by the department chair. In addition, the FEC is responsible for working with the department chair as specified in the FEC procedures regarding salary increases. The department chair, in consultation with the FEC, is responsible for departmental recommendations for awards and other opportunities for special recognition of merit and achievement within the university.\nThis committee has four members from the Voting Membership, elected by the faculty according to the procedures in 4.2.1 (Committee Election Procedure). All of the Voting Members that are subject to evaluation by this committee are eligible to vote on the committee membership. At most one non-tenured faculty member shall serve in any year.\nThe document \u201cProcedures and Criteria for Evaluation and Promotion, Tenure, and Salary Increase Recommendations\u201d (FEC Procedures) shall detail the FEC procedures and the FEC Binder contents and format, and shall be approved by the faculty and be posted with the Bylaws on the Department\u2019s Web site as they are referenced in the Bylaws and hence considered part of them. Evaluations are based on the FEC binders, the criteria defined in the FEC procedures, and evidence as to degree of satisfaction of these criteria, relative to the mission of the University and the Department and the duties assigned to the person being evaluated.\nAn augmented Specialized Faculty Evaluation committee will evaluate the performance of specialized faculty. This committee shall consist of the FEC and two members elected from the ranks of specialized faculty in the department by the voting membership of the Computer Science department.\n4.2.4 Executive Committee\nThe Executive Committee shall advise the chair on general matters and have approval authority for decisions made by the department chair that are listed below. In conjunction with the department chair, the committee shall seek to promote the stature, image, and support of the department, both within the university and on state, regional, and national levels.\nThe committee shall be comprised of three tenured faculty members. The department chair shall select one of the committee members and the other two shall be elected each year by the voting membership of the department.\nThe Executive Committee is responsible for granting approval for department chair decisions that can significantly impact the department. This includes approving:\nappointed standing committee assignments.\ngeneral space allocation policies.\nfocus areas for faculty hiring.\nIf the Executive Committee and the department chair cannot reach a resolution, then the decision can be approved by a majority of the Voting Membership when such a vote is solicited by the department chair. Without approval of the Executive Committee or the Voting Membership the department\u2019s chair decision will not be sanctioned.\nThe Executive Committee is also responsible for advising the chair on other important matters, such as staff hiring and any large departmental budgetary expenditures, which includes equipment purchases, renovations, and general strategies for OPS, Expense, and Foundation expenditures, etc.\nThe Executive Committee is also responsible for developing the general computing infrastructure policies (along with the systems group manager and the department chair) subject to ratification of the Voting Membership. Computing infrastructure includes the computing network, servers and workstations (in offices, classrooms, teaching laboratories and research laboratories), and the supporting staff and budget resources. Appropriate areas of policy include reliability, privacy, security, licensing, accessibility, usage, allocation of existing resources, and priority-setting for acquisition of new resources. The committee will solicit input from all appropriate sources, including the faculty, the staff, the curriculum committees, and student groups recognized by the department. The department\u2019s system and network administration support staff (Systems Group) is responsible for implementing department policies related to the computing infrastructure. The manager of the Systems Group will be called upon to advise and inform the Executive Committee on matters related to computing infrastructure.\n4.2.5 Senators\nDepartmental representatives and alternates for the University\u2019s Faculty Senate shall be elected by a majority of the voting members of the department. The Department Chair shall solicit nominations for senate positions whenever a departmental senator reaches the end of his or her term or a position otherwise becomes open. The ballot may be conducted by letter or at a department meeting.\n4.3 Appointed Standing Committees\nEach standing committee appointed by the department chair is required to have a charter that is available online to the department. The original charter and subsequent amendments to the charter shall be approved by the faculty. It is the responsibility of each committee chair to call meetings and to meet as frequently as necessary for the committee to fulfill its responsibilities.\nThe department chair shall appoint the following standing committees, subject to the restriction that membership in committees charged with matters limited to the graduate program be limited to members of the graduate faculty.\n4.3.1 Undergraduate Curriculum Committee\nThis committee is responsible for oversight of the undergraduate curriculum, including approval of new course proposals, modifications to existing courses, and textbook choices for all undergraduate courses. The committee is also responsible for proposing degree program requirements and new undergraduate degree and certificate programs to be approved by the faculty. The chair will appoint a non-voting member from the Panama City campus.\n4.3.2 Graduate Curriculum Committee\nThis committee is responsible for oversight of the graduate curriculum, including approval of new course proposals and modifications to existing courses. The committee is also responsible for proposing degree program requirements and new graduate degree and certificate programs to be approved by the faculty.\n4.3.3 PhD Portfolio Review Committee\nThis committee is responsible for oversight of the progress of all Ph.D. students. The committee consists of a core that is appointed by the department chair, together with any other Department faculty with graduate faculty status who elect to participate. Meetings of the committee should be announced to all the CS faculty. The Portfolio Evaluation Committee determines whether or not students should continue in the program. The duties and procedures are further described in the FSU Graduate Bulletin.\n4.3.4 Graduate Financial Aid & Admissions Committee\nThis committee is responsible for evaluating applications for graduate admission and financial aid, determining which students are admitted and which are offered financial aid. The committee maintains a ranked list of students who have applied for financial aid. When an E&G funded assistantship becomes available, the rank order list is used to help decide which student should receive the appointment. The committee may be called upon by the department chair to resolve disputes about the hiring and firing of E&G funded assistants.\nThis committee is also responsible for recruiting graduate students, and generally working to continually improve the caliber and numbers of our graduate student population. The committee is expected to take initiative and exercise creativity in accomplishing its mission.\nDepartmental procedures on the hiring and firing of E&G assistants must adhere to and be consistent with the Graduate Assistant United \u2013 Collective Bargaining Agreement and HR policies.\n4.3.5 Faculty Recruiting Committee\nThis committee is responsible for recruiting faculty in years during which positions will be filled. Responsibilities include actively seeking strong faculty candidates, reviewing and ranking applications, selecting candidates for interviews, and arranging for hosts for the visits of candidates.\n5 Bylaws Revision and Reaffirmation Process\nThe department bylaws adhere to and are consistent\nwith University policies found in the FSU Constitution,\nthe BOT-UFF Collective Bargaining agreement, the Faculty Handbook, and the annual Promotion and Tenure letter. This document can be amended by a two-thirds majority of the Voting Membership. Ballots for modification to this document shall be by written secret ballot with at least two weeks allowed for response. The ballots shall be conducted in such a manner so as to indicate whether or not a person has voted. The ballots shall be tallied independently by at least two people. Consideration of motions for revisions of the bylaws shall be placed on the agenda of the first faculty meeting of the year.\nIn order for this document to remain in force, if a period of five (5) years elapses without approval of any amendment the document shall be reaffirmed by written secret ballot of a majority of the Voting Membership. Before such a reaffirmation ballot, an opportunity shall be provided for members of the faculty to propose amendments and have them considered for inclusion in the ballot.\n\u00a9 2006, 2007, 2008, 2009, 2014, 2015, 2019 FSU Dept of Computer Science\n", "document_id": 164050}]}, {"paragraphs": [{"qas": [], "context": "Zhenhai Duan | Computer Science\n\nZhenhai Duan\nAssociate Professor\nOffice:\n162 Love Building\nTelephone:\n(850) 645-1561\nE-Mail:\nduan [ at cs dot fsu dot edu ]\n Visit Personal Page\nResearch\nDr. Duan\u2019s research interests are broadly in computer networks, multimedia applications, and modeling and performance analysis of computer systems. Currently he is focusing on the scalable QoS control and management in the Internet, Internet routing protocols and service architectures, networking security, and wireless networks.\n", "document_id": 164061}]}, {"paragraphs": [{"qas": [], "context": "Grigory Fedyukovich | Computer Science\n\nGrigory Fedyukovich\nAssistant Professor\nOffice:\n106C MCH Building\nTelephone:\n(206) 475-8585\nE-Mail:\ngrigory [ at cs dot fsu dot edu ]\n Visit Personal Page\nResearch\nDr. Fedyukovich\u2019s research interests are: \nSynthesis of inductive invariants for verification of program safety and termination\nRelational verification and its applications to security analysis and automated parallelization\nFunctional (Skolem) synthesis via lazy quantifier elimination and programming by example\nIncremental verification using function summaries and simulation relations.\nDr. Fedyukovich is looking for motivated students to work on a number of projects:\n\u2013 Automated program synthesis from relational specifications,\n\u2013 Repairing buggy programs using counterexamples,\n\u2013 Proving program correctness by discovering of inductive invariants.\n", "document_id": 164062}]}, {"paragraphs": [{"qas": [{"question": "Where is Mike Burmester's office?\n", "id": 98546, "answers": [{"answer_id": 113022, "document_id": 164060, "question_id": 98546, "text": "268 Love Building", "answer_start": 68, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "Mike Burmester | Computer Science\n\nMike Burmester\nProfessor\nOffice:\n268 Love Building\nTelephone:\n(850) 644-6410\nE-Mail:\nburmeste [ at cs dot fsu dot edu ]\n Visit Personal Page\nResearch\nMain research interest is securing distributed applications. Particular topics include: privacy/anonymity, pervasive/ubiquitous systems, lightweight cryptographic applications, RFIDs and sensor applications, trust management, and group key exchange. Recent work focuses on modularity and composability for secure lightweight cryptographic applications.\n", "document_id": 164060}]}, {"paragraphs": [{"qas": [], "context": "David Gaitros | Computer Science\n\nDavid Gaitros\nSenior Teaching Faculty\nOffice:\n105D Love Building\nTelephone:\n(850) 644-5832\nE-Mail:\ngaitrosd [ at cs dot fsu dot edu ]\n Visit Personal Page\n", "document_id": 164063}]}, {"paragraphs": [{"qas": [], "context": "Xifeng Gao | Computer Science\n\nXifeng Gao\nAssistant Professor\nOffice:\nTelephone:\nE-Mail:\ngao [ at cs dot fsu dot edu ]\n Visit Personal Page\nResearch\nDr. Gao has wide research interests in fields related to Geometry Computing, such as Computer Graphics, Computer Vision, Visualization, Robotics, and Fabrication.\n", "document_id": 164064}]}, {"paragraphs": [{"qas": [{"question": "Who is Michael Gubanov?", "id": 157613, "answers": [{"answer_id": 222023, "document_id": 164065, "question_id": 157613, "text": "Assistant Professor", "answer_start": 52, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "Michael Gubanov | Computer Science\n\nMichael Gubanov\nAssistant Professor\nOffice:\nTelephone:\nE-Mail:\ngubanov [ at cs dot fsu dot edu ]\n Visit Personal Page\nResearch\nDr. Gubanov\u2019s research is in Data Science, Large-scale Data Management, Scalable Machine/Deep Learning, Web-search, and Mobile Computing.\n", "document_id": 164065}]}, {"paragraphs": [{"qas": [], "context": "Lois Wright Hawkes | Computer Science\n\nLois Wright Hawkes\nProfessor and Senior Associate Dean\nOffice:\n0110 Longmire Building\nTelephone:\n(850) 644-1083\nE-Mail:\nhawkes [ at cs dot fsu dot edu ]\n Visit Personal Page\nResearch\nDr. Hawkes research interests relate to the development of fault-tolerant protocols that will support reliable, large data transfers over high-speed WANs. This is in response to the increasing need for high-performance disaster-tolerant networks that allow for the use of backup sites at a significant distance from the main site, thus ensuring a single disaster will not take down both sites. Included in this work are the development of fault-tolerant network protocols, quality of service issues, and reliability in end-to-end performance for the transfer of very large data sets. The corresponding infrastructure must be both cost-effective and robust.\n", "document_id": 164066}]}, {"paragraphs": [{"qas": [{"question": "What is Dr. Zhang's email?", "id": 157628, "answers": [{"answer_id": 222037, "document_id": 164067, "question_id": 157628, "text": "jzhang [ at cs dot fsu dot edu ]", "answer_start": 125, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}, {"question": "What is Jaiwei Zhang's phone number?", "id": 157623, "answers": [{"answer_id": 222033, "document_id": 164067, "question_id": 157623, "text": "(850)645-2174", "answer_start": 103, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}, {"question": "What is Jaiwei Zhang's email address?", "id": 157626, "answers": [{"answer_id": 222035, "document_id": 164067, "question_id": 157626, "text": "jzhang [ at cs dot fsu dot edu ]", "answer_start": 125, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "Jiawei Zhang | Computer Science\n\nJiawei Zhang\nAssistant Professor\nOffice:\n171 Love Building\nTelephone:\n(850)645-2174\nE-Mail:\njzhang [ at cs dot fsu dot edu ]\n Visit Personal Page\nResearch\nDr. Zhang\u2019s research interests span the fields of Data Fusion, Data Mining, and Machine Learning. The research projects in IFM Lab directed by Dr. Zhang include knowledge discovery from online social networks, text data, knowledge graphs, enterprise context data, human brain images with traditional machine learning and deep learning techniques. His research works focus on fusing multiple large-scale information sources of diverse varieties together, and carrying out synergistic data mining tasks across these fused sources in one unified analytic.\n", "document_id": 164067}]}, {"paragraphs": [{"qas": [], "context": "Jie Yang | Computer Science\n\nJie Yang\nAssociate Professor\nOffice:\n251C Love Building\nTelephone:\n(850) 645-0417\nE-Mail:\njieyang [ at cs dot fsu dot edu ]\n Visit Personal Page\nResearch\nDr. Yang\u2019s research interests include cyber security and mobile computing, with an emphasis on network security, smartphone security and applications, security in cognitive radio and smart grid, location systems and vehicular applications. Dr. Yang\u2019s current research projects are supported by National Science Foundation (NSF) and Army Research Office (ARO) grants, including wireless security, security in cognitive radio networks, and mobile safety systems.\n", "document_id": 164068}]}, {"paragraphs": [{"qas": [{"question": "What does Alan Kuhnle do research on?", "id": 98574, "answers": [{"answer_id": 113054, "document_id": 164069, "question_id": 98574, "text": "Dr. Kuhnle\u2019s works generally focuses on the design and analysis of algorithms to solve optimization problems arising from machine learning, network science, and bioinformatics", "answer_start": 172, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}, {"question": "What is Dr. Kuhnle's office number?", "id": 157643, "answers": [{"answer_id": 222051, "document_id": 164069, "question_id": 157643, "text": "106A", "answer_start": 72, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "Alan Kuhnle | Computer Science\n\nAlan Kuhnle\nAssistant Professor\nOffice:\n106A MCH Building\nTelephone:\nE-Mail:\nkuhnle [ at cs dot fsu dot edu ]\n Visit Personal Page\nResearch\nDr. Kuhnle\u2019s works generally focuses on the design and analysis of algorithms to solve optimization problems arising from machine learning, network science, and bioinformatics. Particular interests currently include scalable optimization of submodular functions, fast evolutionary algorithms with theoretical guarantees, and succinct data structures for representing genomics data.\n", "document_id": 164069}]}, {"paragraphs": [{"qas": [], "context": "R. Christopher Lacher | Computer Science\n\nR. Christopher Lacher\nEmeritus Professor\nOffice:\n206 Love Building\nTelephone:\nE-Mail:\nlacher [ at cs dot fsu dot edu ]\n Visit Personal Page\n", "document_id": 164070}]}, {"paragraphs": [{"qas": [], "context": "Stephen Leach | Computer Science\n\nStephen Leach\nProfessor\nOffice:\nTelephone:\nE-Mail:\nsleach [ at pc dot fsu dot edu ]\n", "document_id": 164072}]}, {"paragraphs": [{"qas": [], "context": "Randolph Langley | Computer Science\n\nRandolph Langley\nSenior Computer Scientist\nOffice:\n103 Carothers Building\nTelephone:\n(850) 645-1225\nE-Mail:\nlangley [ at cs dot fsu dot edu ]\n Visit Personal Page\n", "document_id": 164071}]}, {"paragraphs": [{"qas": [], "context": "Hilbert Levitz | Computer Science\n\nHilbert Levitz\nEmeritus Professor\nOffice:\n206A Love Building\nTelephone:\n(904) 352-8201\nE-Mail:\nlevitz [ at cs dot fsu dot edu ]\n Visit Personal Page\n", "document_id": 164073}]}, {"paragraphs": [{"qas": [], "context": "Chris Mills | Computer Science\n\nChris Mills\nTeaching Faculty I\nOffice\nLOV 105-B\nTelephone:\nE-Mail:\ncmills [ at cs dot fsu dot edu ]\n Visit Personal Page\n", "document_id": 164078}]}, {"paragraphs": [{"qas": [], "context": "Sarp Oral | Computer Science\n\nSarp Oral\nAffiliated Faculty\nOffice:\n\u00a0ORNL Remote\nTelephone:\n(865)574-2173\nE-Mail:\noralhs [at ornl dot gov]\n Visit Personal Page\n", "document_id": 164080}]}, {"paragraphs": [{"qas": [{"question": "Who is Dr. Srinisavan?", "id": 157585, "answers": [{"answer_id": 221995, "document_id": 164057, "question_id": 157585, "text": "Affiliated Professor", "answer_start": 54, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "Ashok Srinivasan | Computer Science\n\nAshok Srinivasan\nAffiliated Professor\nOffice:\nDepartment of Computer Science, University of West Florida\nTelephone:\n(850) 644-0559\nE-Mail:\nasriniva [ at cs dot fsu dot edu ]\n Visit Personal Page\nResearch\nThe primary research interests of Dr. Srinivasan include Scientific and High Performance Computing, Applications, Parallel Algorithms, Mathematical Software, Stochastic techniques for linear algebra, and Computational nanotechnology. His research is funded by NSF and DoD. Dr. Srinivasan developed the SPRNG Scalable Parallel Random Number Generation software, which is used by major organizations worldwide.\n", "document_id": 164057}]}, {"paragraphs": [{"qas": [{"question": "Where is Melina Myers' office?", "id": 98593, "answers": [{"answer_id": 113077, "document_id": 164077, "question_id": 98593, "text": "105B Love Building", "answer_start": 94, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "Melina Myers (Vastola) | Computer Science\n\nMelina Myers (Vastola)\nTeaching Faculty II\nOffice:\n105B Love Building\nTelephone:\n(850) 645-0900\nE-Mail:\nmelina [ at cs dot fsu dot edu ]\n Visit Personal Page\n", "document_id": 164077}]}, {"paragraphs": [{"qas": [{"question": "What is Bob Myer's office number?", "id": 157694, "answers": [{"answer_id": 222102, "document_id": 164079, "question_id": 157694, "text": "105C", "answer_start": 75, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}, {"question": "What is Bob Myer's email address?", "id": 157696, "answers": [{"answer_id": 222104, "document_id": 164079, "question_id": 157696, "text": "myers [ at cs dot fsu dot edu ]", "answer_start": 128, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "Bob Myers | Computer Science\n\nBob Myers\nAssociate Teaching Faculty\nOffice:\n105C Love Building\nTelephone:\n(850) 644-0972\nE-Mail:\nmyers [ at cs dot fsu dot edu ]\n Visit Personal Page\n", "document_id": 164079}]}, {"paragraphs": [{"qas": [{"question": "Who is Viet Tung Hoang?", "id": 157733, "answers": [{"answer_id": 222141, "document_id": 164087, "question_id": 157733, "text": "Assistant Professor", "answer_start": 52, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}, {"question": "What is Dr. Hoang's email?", "id": 157736, "answers": [{"answer_id": 222144, "document_id": 164087, "question_id": 157736, "text": "tvhoang [ at cs dot fsu dot edu ]", "answer_start": 117, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "Viet Tung Hoang | Computer Science\n\nViet Tung Hoang\nAssistant Professor\nOffice:\n261 Love Building\nTelephone:\nE-Mail:\ntvhoang [ at cs dot fsu dot edu ]\n Visit Personal Page\n", "document_id": 164087}]}, {"paragraphs": [{"qas": [], "context": "Policy on Textbook Choice | Computer Science\n\nPolicy on Textbook Choice\nThe choice of textbook in undergraduate courses is made by the department\u2019s Curriculum Committee. An instructor who wants to change textbook from what was used the prior term should submit a proposal to the Curriculum Committee, identifying the new book, and explaining why the new book is believed to be better than the old one.\nThe choice of textbook in graduate courses is made by the faculty member who teaches the course.\n", "document_id": 144196}]}, {"paragraphs": [{"qas": [{"question": "What is Dr. Whalley's email address?", "id": 157754, "answers": [{"answer_id": 222160, "document_id": 164089, "question_id": 157754, "text": "whalley [ at cs dot fsu dot edu ]", "answer_start": 103, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}, {"question": "What is David Whalley's email?", "id": 157755, "answers": [{"answer_id": 222161, "document_id": 164089, "question_id": 157755, "text": "whalley [ at cs dot fsu dot edu ]", "answer_start": 103, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "David Whalley | Computer Science\n\nDavid Whalley\nProfessor\nOffice:\n160 Love Building\nTelephone:\nE-Mail:\nwhalley [ at cs dot fsu dot edu ]\n Visit Personal Page\nResearch\nDr. Whalley\u2019s research interests include compilers, computer architecture, embedded systems, and performance evaluation. Over the years he has developed compiler optimizations, techniques for predicting the worst-case execution time of real-time tasks, fast methods for obtaining performance measures, and a number of compilation tools to ease the process of developing and enhancing a compiler. He recently has investigated both architectural and compilation issues involving embedded systems.\n", "document_id": 164089}]}, {"paragraphs": [{"qas": [{"question": "What does Dr. Yuan study?", "id": 98631, "answers": [{"answer_id": 113115, "document_id": 164090, "question_id": 98631, "text": "Dr. Yuan\u2019s research interests are in Computer Networks, Computer Systems, and High Performance Computing (HPC). ", "answer_start": 170, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}, {"question": "What is Dr. Yuan's email address?", "id": 157763, "answers": [{"answer_id": 222169, "document_id": 164090, "question_id": 157763, "text": "xyuan [ at cs dot fsu dot edu ]", "answer_start": 108, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "Xin Yuan | Computer Science\n\nXin Yuan\nProfessor\nOffice:\n168 Love Building\nTelephone:\n(850) 644-9133\nE-Mail:\nxyuan [ at cs dot fsu dot edu ]\n Visit Personal Page\nResearch\nDr. Yuan\u2019s research interests are in Computer Networks, Computer Systems, and High Performance Computing (HPC). His most recent efforts have concentrated on the design and evaluation of high-performance interconnection networks for extreme-scale high-performance computing systems and data centers, and on applying the software defined networking technology to improve communication subsystems for both HPC systems and data centers. His research is funded by the National Science Foundation, NSA, Department of Energy, and Los Alamos National Laboratory.\n", "document_id": 164090}]}, {"paragraphs": [{"qas": [], "context": "Xiaonan Zhang | Computer Science\n\nXiaonan Zhang\nAssistant Professor\nOffice:\nTelephone:\nE-Mail:\n xzhang [ at cs dot fsu dot edu ]\n Visit Personal Page\n", "document_id": 164091}]}, {"paragraphs": [{"qas": [{"question": "Where is Dr. Zhao's office located?", "id": 98641, "answers": [{"answer_id": 113134, "document_id": 164094, "question_id": 98641, "text": "262 Love Building", "answer_start": 76, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "Peixiang Zhao | Computer Science\n\nPeixiang Zhao\nAssociate Professor\nOffice:\n262 Love Building\nTelephone:\n(850) 645-0346\nE-Mail:\nzhao [ at cs dot fsu dot edu ]\n Visit Personal Page\n", "document_id": 164094}]}, {"paragraphs": [{"qas": [], "context": "Zhi Wang | Computer Science\n\nZhi Wang\nAssociate Professor\nOffice:\n166 Love Building\nTelephone:\n(850) 645-0476\nE-Mail:\nzwang [ at cs dot fsu dot edu ]\n Visit Personal Page\n", "document_id": 164095}]}, {"paragraphs": [{"qas": [], "context": "James Wang | Computer Science\n\nJames Wang\nResearch Specialist\nOffice:\n208B Carothers Building\nTelephone:\nE-Mail:\nyuwang [ at cs dot fsu dot edu ]\n Visit Personal Page\nYu Wang is the manager of the Systems Group. He also plans, architects, and manages the department\u2019s computing systems and network.\n", "document_id": 164093}]}, {"paragraphs": [{"qas": [{"question": "Who should a TA contact to set up office hours?", "id": 157810, "answers": [{"answer_id": 222215, "document_id": 164105, "question_id": 157810, "text": "To find out what shared spaces are available for holding office hours in any given semester, ask your faculty supervisor, the Laboratory Manager, the Associate Chair, or the Department Chair.", "answer_start": 7486, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "Teaching Assistants | Computer Science\n\nTeaching Assistants\nTeaching Handbook\nTable of Contents\nIntroduction\nRelationship of Teaching Assistant to Faculty Supervisor\nProgram for Instructional Excellence Conferences\nOffice Hours\nSUSSAI (Teaching Evaluation Forms)\nVideotaping\nSupervisor Evaluation of Teaching Assistants\nTeaching Assistant Ranks & Responsibilities\nResources for Teaching Assistants\nProblems that TAs Encounter\nSyllabus\nIntroduction\nTeaching computer science at FSU is a challenging yet rewarding experience. Graduate teaching assistants are given a wide variety of responsibilities and duties in their assistantships. This handbook will attempt to introduce the new TA to the computer science department as well as to provide the experienced TA with a set of resources to aid in teaching classes at FSU.\nRelationship of Teaching Assistant to Faculty Supervisor\nEvery teaching assistant is assigned a supervisor. In the case of TA\u2019s who are grading, teaching recitation sections, or serving as mentor for a distance learning section, that supervisor will be the\u00a0lead instructor\u00a0for the course. If the course has only one lecture, the lead instructor will be the lecturer for that course. If the course has multiple lectures, one of the lecturers is designated as the lead instructor for the entire course.\nThe relationship between TA and supervisor depends on the whether the TA is is a grader, a recitation instructor, or a full-responsibility classroom teacher.\nGrader:\nSupervisor writes course syllabus and sets grading policies.\nSupervisor schedules TA office hours, to coordinate with other sections of the same course and to fit the available office hour space time slots.\nSupervisor introduces TA to class, and includes TA contact info. on syllabus.\nSupervisor plans the assignments, perhaps in collaboration with the TA.\nSupervisor goes over answers and grading scheme with the TA prior to grading.\nSupervisor spot-checks TA grading results.\nSupervisor checks that TA keeps reasonable office hours, and gets work back to students in a timely fashion.\nSupervisor may ask TA to attend lectures and take attendance at lectures.\nSupervisor calculates and assigns final grade.\nTA grades work, and submits it to supervisor (sorted by grade).\nTA assists supervisor in proctoring examinations\nRecitation Instructor:TA is responsible for all of the items for Grader. In addition, the following apply:\nSupervisor discusses a lesson plan for each recitation meeting with the TA.\nSupervisor attends and critiques some sample of the recitation sections, say at least 1/4 of them.\nSupervisor checks that TA arrives on time for all recitation meetings.\nTA is required to attend all lectures given by the Supervisor.\nRecitation instructors should approach their supervising instructor, before the start of the term, to inquire about the instructor\u2019s wishes as to the content and form of the recitation. The department does not expect any recitation to consist of simple question and answer sessions, and under no circumstances should the TA decide to cancel a recitation or allow the students to leave early because the TA has \u201cnothing to do\u201d. Unless the Supervisor specifically commands otherwise, all TAs should prepare a semi-formal presentation emphasizing the difficult and/or important points covered in recent lectures. The format can be quite varied, of course (whatever works); e.g. problems to go over, having the students write collective code, re-stating concepts etc. If you feel you are not getting appropriate guidance from the supervising instructor, please approach the instructor first, then come and see the Associate Chair.\nOn the first meeting of each class, both the supervising instructor (or lecturer, if the course has multiple lecturers) and the TA should be present to be introduced to the class.\nFull-Responsibility Classroom Teacher:TA is responsible for all of the items for Recitation Instructor. In addition, the following apply:\nTA writes syllabus, prior to start of each term, and seeks approval from supervisor.\nTA writes all homework assignments and examinations, and submits them to supervisor for approval, prior to giving them to the class.\nTA calculates and assigns final grades, and submits them to supervisor for review and approval.\nSupervisor reviews syllabus with TA prior to start of term.\nSupervisor meets with class once at the start of the term, to be introduced by the TA as the person to whom students should address any disputes with the TA.\nSupervisor reviews and approves all homework assignments and examinations, before they are given.\nSupervisor attends and critiques at least one class meeting.\nFor the relationship between the faculty supervisor and the teaching assistant to be most effective, discussions concerning the course should begin several weeks before the beginning of the semester. (Remember: TA\u2019s and faculty are on the payroll for at least two weeks prior to the start of every term, and are expected to use that time for class preparation and organization.) The discussion of the course should include the syllabus, the policies of the course, how students will be evaluated, etc.. Since faculty members are typically very busy, the responsibility for initiating the discussion will fall on the shoulders of the TA.\nAs a TA gains more experience teaching a given course and establishes a working relationship with a given faculty supervisor, the supervisory relationship may be \u201cloosened\u201d, at the discretion of the faculty supervisor. However, ?he TA should be prepared to accept closer supervision and direction if assigned to a new course and/or supervisor.\nProgram for Instructional Excellence Conferences\nTeaching assistants are required to attend one of the Program for Instructional Excellence teaching conferences each year. PIE attempts to offer workshops that will benefit both the new and the returning TA. These conferences are held in the Fall and the Spring semesters, a few days before the beginning of each semester. For more information regarding these conferences, contact the\u00a0Program for Instructional Excellence, 408 Westcott, 644-8844.\nOffice Hours\nAll teaching assistants\u00a0must\u00a0set up office hours and be available during those hours for student meetings. Typically, for every hour spent in the classroom, the TA will have one office hour. Therefore, if the TA teaches a three credit hour class, she will schedule three hours in her office during the week. It is best to stagger these times somewhat to allow students with varying schedules to be able to drop by. If there are students who have conflicts with the scheduled hours, the TA should be flexible in setting up alternative meeting times. Failure to hold office hours, or failure to show up is a very serious matter.\nNormally, the department provides individual desks for TA\u2019s, in shared offices, in convenient locations. However, we cannot always do that. Recently, the entire university population has been growing faster than new buildings are being constructed, so we find ourselves very cramped for space. Therefore, for Fall term 2001, most TA\u2019s (especially graders) will be required to share a desk with another TA, and nearly all will have their offices in a bullpen area. In such cases, since conversations in a shared area would be disturbing to other occupants of the office, TAs are encouraged to hold office hours in one of the department\u2019s teaching labs or other space set up by the department for office hours. To find out what shared spaces are available for holding office hours in any given semester, ask your faculty supervisor, the Laboratory Manager, the Associate Chair, or the Department Chair.\nFor courses with multiple sections, the supervising instructor of the course (there is only one per course) is responsible for assigning office hours to TA\u2019s so that the hours of different TA\u2019s do not overlap. For such courses, all TA\u2019s will hold offices hours in a single place, designated by the supervising instructor. All TA\u2019s will be responsible for answering questions of students from any section of the course.\nSUSSAI\nAny TA who spends time in the classroom is required to administer the SUSSAI (student evaluation of teaching) forms EVERY semester that they teach. For courses with different people doing the lectures and recitations, the forms must be administered separately, for both recitations and lecturers.\nVideotaping\nTA\u2019s who spend time in the classroom are required to be videotaped. Arrangements can be made through the department\u2019s Teaching Associate. Once videotaped, the TA may request that the Teaching Associate, someone from PIE or someone else from the department view the videotape and make constructive suggestions concerning improvements that may be made.\nSupervisor Evaluation of Teaching Assistants\nEach teaching assistant will be observed in the classroom environment by the faculty member supervising the course. The faculty supervisor will fill out an evaluation form and should discuss that form with the TA after the observation. In addition, all TAs with classroom responsibility are required to administer SUSSAI for every semester of teaching. The SIRS forms are not returned to the TA until the following semester and will be examined by the Associate Chair of the department at that time. The Associate Chair is available for discussion of SUSSAI forms. Because these forms are not returned until after the end of the semester, they are of little use in correcting problems the TA may be currently experiencing. The Program for Instructional Excellence offers Teaching Analysis By Students (TABS), which are similar to SUSSAI, but are administered at midterm and returned within a week. To find out more about TABS, contact the Teaching Associate or PIE (644-8844).\nThe department uses the faculty supervisor evaluation forms and SUSSAI to select recipients of the Departmental Outstanding Teaching Assistant Awards. Students who meet all of the following requirements are eligible:\nMust be in good standing with the University;\nMust be currently enrolled and actively pursuing a graduate degree in computer science at FSU;\nMust have had full classroom teaching responsibility for a class offered by the computer science department in the previous spring and/or fall semester.\nThe TA evaluation committee (comprised of department faculty) will form a ranking of the eligible TAs by composite SIRS from the previous spring and fall, use supervisor evaluation forms to confirm the ranking formed above, seeking additional supervisor input as needed, present the rankings with supporting data to the TA evaluation committee for discussion and approval, and choose the top candidate(s) from this ranking for Outstanding Teaching Awards. At least one award is to be given each year, and up to 25% of the eligible TA\u2019s in a given year may be chosen for awards. Note that those who have graduated or left the University since the teaching was performed are not eligible for awards. TAs may receive multiple Departmental Outstanding Teaching Assistant awards throughout their tenure at FSU. There is no distinction among new TAs, TAs with longer teaching records, Masters students or PhD students. Therefore, all eligible TAs compete as equals for the awards.\nThe University also presents a number of Outstanding Teaching Assistant awards each year, through the Program for Instructional Excellence. The TAs must be nominated by either their students or members of their departments. They are then asked to fill out an award application and submit letters of recommendation from their peers, students and graduate professors as well as sample SIRS forms and a copy of a syllabus. Nominees\u2019 applications are rated on how well the TAs organize their subject matter, how available and accessible they are to their students and if there is evidence that they show respect for their students regardless of race, religion, and sex. A TA may receive only one University-wide Outstanding Teaching Assistant award in his or her tenure at FSU.\nTeaching Assistant Ranks & Responsibilities\nTeaching assistants in computer science may receive appointments which require a variety of tasks. A TA may be a lead TA, that is, assigned primary classroom responsibility for a particular course. The TA may be assigned to teach the recitation sections of a programming class. Finally, a TA may be assigned grading duties under the guidance of a faculty member. TA\u2019s assigned to grading duty are typically required to also monitor one of the undergraduate computer labs in the department. The standard appointment for an assistantship is twenty hours per week, although at times, TA\u2019s may be asked to do more than this. If the TA is a lead TA, twenty hours per week translates to two three-hour classes (usually 2 sections of the same class).\nJob descriptions for each level of assistantship along with the compensation for that level is listed below.\nThree-tier Assistantship Model\nThe department currently has a graduated scale where pay amount is based on experience, level of responsibility, and other factors. The three main classifications of graduate stude?t assistants are described below.\n1. Lead TA \u2013 Full Responsibility Classroom Teacher\nQualifications: At least 18 hours graduate work and preferably a M.S. degree in CS. One year of teaching experience in CS.\nResponsibilities: Full classroom responsibility, supervised by Department Chair or Associate Chair (typically two sections of the same 3-hr course), or senior system administrator (must have two years system manager experience).\n2. TA \u2013 Recitation Instructor\nQualifications: Degree in CS or another field with at least 18 hrs in CS at the junior or senior level.\nResponsibilities: One of the following:\ntwo 2-hr recitation sections of same course, including grading for that course, plus supplemental grading or lab hours (5 hrs/week). High level of faculty supervision.\ntwo 1-hr recitation sections of same course (including grading) plus supplemental lab hours (8 hrs/week). High level of faculty supervision.\nsystem administrator\nDepartmental project assignment, supervised by Associate Chair\n3. Graduate Assistant \u2013 Grader\nQualifications: Bachelor\u2019s degree in some field with at least 12 hrs in CS at the junior or senior level.\nResponsibilities: Twenty hrs per week of grading/lab work, where a grading assignment for a course counts as 5 hrs/week.\nSince there are only a certain number of slots of each category available, it is possible that a person qualified for a lead TA or a TA position may be offered a lower position. If this is the case, the compensation and the duty assignment would correspond to that lower position.\nIf a person is in a TA position and is asked to perform lead-TA duties, pay will be given at the higher rate for that term with no implication that the student will stay at the higher rate permanently. In continuing years, students will be considered for upward moves in the 3-tier plan without any formal application process. Evaluations by the Chair, the Associate Chair, and the TA Evaluation Committee will play a significant role.\nIf there are no recitation sections available for a TA, the student will be given the option of taking pay at the lower level and performing grad assist duties, or the student may elect to provide additional service to maintain the higher rate of pay. Examples would be as follows:\n20 hrs/lab plus one grading, or\n13 hrs/lab plus two gradings\nOccasional special assignments may require adjustments in assignments and pay, but a student will never be forced to take less pay than was originally offered by the assistantship.\nResources for Teaching Assistants\nCopying\nThe department has a variety of equipment and other resources available for use by teaching assistants. At the beginning of each semester, TA\u2019s with classroom responsibility will receive a course id number that may be used on the copy machine located in the computer science office. All copies to be made for a class can be done using this id and will be charged to that particular course. This copier id can also be used to print materials on the various laser printers around the department so that the TA\u2019s personal page count (200 pages per semester) is not exhausted by materials for the course.\nOverheads\nThere are several overhead projectors that can be reserved for use in the classroom. There is a reservation sign-up sheet inside the department administrative office suite, 203 Love. One can also get blank overhead slides that will work in the photocopy machine from the office staff for preparing your lectures.\nThe department also has cart-mounted portable computer and projection machine available for use in order to do application demonstrations in classes that do not have such equipment built in. These materials can?be reserved by contacting the Systems Group (system@cs.fsu.edu).\nVideos\nMany of the classes that are taught by teaching assistants may benefit from the showing of videotapes on a wide variety of topics. For example, the department has the PBS series \u201cThe Machine that Changed the World\u201d available on videotape. To reserve a tape (or to peruse the list of tapes available), see Jennifer Reed in 203 Love.\nSyllabi of Previous Classes\nThe department maintains a book of syllabi prepared for classes in the past. Teaching assistants are invited to look at these to get ideas about what the department expects in a syllabus and also to get ideas about what is to be covered in a particular course. See Martha Snyder to take a look at past syllabi. It should be noted at this point that all syllabi for the department are required to contain a statement announcing that reasonable accommodations can be made for students with disabilities and particular needs. If you have questions about this statement, see the Teaching Associate or Associate Chair.\nCS Department Web Site\nThe department maintains much information online at\u00a0http://www.cs.fsu.edu/. Lists of faculty and their office hours, software and hardware available on the department system as well as information about funding, jobs and fellowships can be accessed on the web site.\nBooks on Teaching\nThe Program for Instructional Excellence has a large library of books and other materials concerning all aspects of teaching. These books are available for borrowing to all teaching assistants. To find out more about these materials, contact the Departmental Teaching Associate. In addition, the department has some materials available for perusal. To see these, contact Jennifer Reed in 207 Love.\nEvaluation Services\nTeachers can administer bubble sheets for testing and have them graded by Evaluation Services in the Johnson Building. This service allows analysis of individual questions according to the number of students who got the question right or wrong and how well they did on the rest of the test.\nIn addition, Evaluation Services provides a free electronic gradebook program. One can receive a copy of this program by simply bringing a disk to Evaluation Services to put the copy on. If the teacher then decides to use the bubble sheet testing, student grades can be recorded on disk by Evaluation Services and then loaded directly into the electronic gradebook.\nWorkshops\nThe department maintains a close relationship with the Program for Instructional Excellence. PIE offers a variety of workshops concerning various aspects of teaching at FSU. These workshops include those offered at the University-wide Fall and Spring Teaching Conferences as well as others offered throughout the year. Topics in the past have included: Active Learning, Retaining Minority Students in the Sciences, and Writing to Learn. TAs in the computer science department are required to attend one of the two teaching conferences each year and are strongly encouraged to attend the other teaching workshops.\nTeaching Associate\nIn conjunction with PIE, the department may have a Teaching Associate available for consultation with TAs. The Teaching Associate provides a wide variety of services including videotaping, office hours for discussion of teaching issues, organization of the peer observation program and planning meetings to discuss various aspects of teaching within the department. For more information about becoming a Teaching Associate contact the Associate Chair.\nProblems That TAs Encounter\nTeaching assistants in every department will encounter some difficulties during the course of their duties. Some of difficulties will be unique to the department while others are fairly universal. The list of potential problems presented b?low is by no means a comprehensive list but attempts to prompt the TA to think about some problems and how to deal with them before the problems arise.\nCheating\nCheating is an uncommon but extremely difficult problem. In computer science, it can be especially difficult to deal with on program assignments. It is relatively easy for someone to simply copy another student\u2019s program, change a few variable names and pass the program in as one\u2019s own. If the program works correctly, this is extremely difficult to detect. It is even more difficult to detect cases where a student has a friend or hired tutor work on the program.\nIf you think you have detected a case of similar-looking programs you should ask the student to meet with you. If this is your first time dealing with cheating, you may want to first seek advice from the Associate Chair or Department Chair. You should explain the situation and ask the student to explain why the two programs are so similar. Many times, the problem is simply one of misunderstanding. Students do not realize that working so closely on the program is cheating whereas discussing ideas and approaches to solutions is encouraged. It will be up to your judgement to determine whether to treat the infraction as a formal case of cheating or to just give the student a warning.\nIn any case where cheating is suspected, you should always preserve all the evidence, in case the case needs to be treated as a formal honor code violation or in case the student ignores a warning and continues the behavior.\nCheating on homework, including programming assignments, is sometimes hard to to detect. However, it will generally result in the student not achieving the learning objectives of the assignment. Examinations should be written in a way that if undetected cheating on programs does occur on an out-of-class assignment, and the learning objectives of the assignment are not met, the student will not pass the examination.\nFurther, it is a departmental policy for courses involving programming assignments or other out-of-class work that are taught by TA\u2019s that the final course grade cannot be higher than \u201cD+\u201d unless the supervised (examinations and supervised in-class exercises) grade average is \u201cC-\u201d or higher. The course syllabus should state this clearly.\nThe department\u2019s formal policy for dealing with any type of cheating when it is detected is to ask the student to sign a letter acknowledging that she or he has violated the academic honor code, accepting a specified academic penalty, and accepting the warning that any further violation for this course will result in a specific academic penalty. A typical academic penalty for a clear case of intentional cheating is reduction of one letter grade for the course. The principle to keep in mind in deciding on a penalty is that it must be severe enough to serve as a disincentive for cheating. Thus, for example, if a student\u2019s grade would have been \u201cF\u201d anyway, it would be no penalty at all if you just assign a final grade of \u201cF\u201d; instead you may stipulate that the student also is not to retake the course with the grade forgiveness option.\nIf the student signs the letter, it should be delivered to the Associate Chair or Department Chair. If a student is not willing to accept the academic penalty, the case should be sent up to the Associate Chair or Department Chair to start formal proceedings.\nIf one student comes to the teaching assistant to accuse another student of cheating, the accusing student must be made aware that in order for any action to be taken on the accusation, that student must be willing to have his or her name known to the accused student. Without this acknowledgement, the department and the University have no choice but to drop the matter, unless the instructor is able to find other, independent, evidence of the cheating.\nFinally, you should\u00a0stress\u00a0the department\u2019s resolve?to come down very hard on cheating and your own resolve to check for cheating, on the first day of class and whenever thereafter you feel is appropriate. Cases of cheating must be brought to either the Chair or Associate Chair of the department, and you should tell your students that even if the TA chooses to simply give a 0, for example, the department may on its own institute formal proceedings.\nExaminations for Students with Disabilities\nThe\u00a0only\u00a0condition under which students will be allowed to take examinations in the SDRC (Student Disability Resource Center) for courses given by this department is if there is an employee of the department (faculty, TA, or staff) present to proctor the exam. It will be the responsibility of the student to arrange a time that is convenient for the instructor for the student to take the exam.\nDrop & Add Period\nThe Department has a policy of dropping students who did not attend the first class of a term. At the first meeting of the term you should take roll, compare the roll against the official class roster (obtainable on the department\u2019s computer system) and pass on to the Academic Coordinator a list of the students who did not attend the first class.\nDuring the drop/add period (the first four days of the semester), many students will beg, plead, cajole, do whatever they can to get into some of the classes taught by the computer science department. If the course has a cap on the number of students, the teaching assistant has final say as to whether to raise that cap. TAs should bear in mind that some caps cannot be raised because there are fire code limits on the number of people allowed in certain classrooms. Other caps are in place because a course will be partially taught in one of the computer labs and there are a limited number of PCs in these labs. These caps may be raised at the discretion of the TA but bear in mind that, for example, although there are a given number of PCs in each literacy lab, at any given time, several of them are not working. Raising the cap of a computer literacy class beyond the number of PCs in the lab, then, will make the class difficult for all involved.\nProbably the easiest way to deal with students attempting to add a class is to take a list of names on the first day of class, allowing students to mention any extenuating circumstances (graduating senior, etc.). Instruct the students to then check with the Academic Coordinator of the department about trying to get into the class. Give the list to the Academic Coordinator and advise her if there are students on the list that you think should definitely be in the class if there are openings. After those students are allowed into the class, the rest of the openings should be filled on a first come, first served basis (that is, first to come to the Academic Coordinator).\nSyllabus\nThe syllabus is the most important piece of paper(s) the TA will hand out all semester. It represents a contract between the students and the TA. As a result, the syllabus should contain as much information about the course as possible. All policies for the course should be explicitly stated in the syllabus including how students will be evaluated. A list of textbooks and other materials needed for the course should be included. The TA should include his/her office hours on the syllabus as well as a phone number where she/he can be contacted. In the computer science department, it is useful to also include an e-mail address. Important dates, such as for the midterm and final examinations, should be listed. In short, if the syllabus is a good one, it will head off many potential problems by laying the rules out for?everyone to see at the beginning of the semester. It is also a good idea to verbally highlight the important points on the first or second day of class. Information that is communicated in two ways is more likely to be retained than if it is communicated in only one way.\nEach teaching assistant is required to have her/his syllabus reviewed by his/her supervisor, and then file two copies of his or her syllabus with the Academic Coordinator (as of last editing, this is Jennifer Clark) in the computer science office prior to the start of classes each semester. These syllabi will be available for review in future semesters by other TA\u2019s teaching the same course.\nThere are several specific items that must be included in the syllabus, including the following:\ninstructor\u2019s name, office location, telephone number, e-mail address, and office hours\nthe textbook(s) and any other required reference materials: The choice of textbook must be approved by the departmental curriculum committee. If a TA believes the textbook for a course should be changed, the TA should bring the matter up with the Associate Chair or Department Chair.\ndates of examinations, include the final examination: It is a departmental policy that final examinations are required in all undergraduate courses. It is university policy that final examinations shall be given only during the final examination time specified for the course in the Schedule of Classes. Note that this rules out \u201ctake home\u201d final examinations.\nsummary or outline of the educational objectives and topics to be covered by the course: Two different things are required. The objectives are different from topics. Objectives are stated in terms of what the student should be able to do to pass the course. For example, \u201crecognize, define, and correctly use, the terminology of operating systems\u201d and \u201capply commonly used synchronization primitives to write correct multithreaded systems\u201d might be objectives of an OS course, and and \u201cdesign, code, document, test, and debug an Internet application program written in Java\u201d might be an objective for a course in Java programming. In contrast, topics are more like the titles of lectures or textbook chapters. For example, \u201cvirtual and hierarchical memory\u201d, \u201cprocess scheduling\u201d, and \u201csynchronization primitives\u201d might be topics in an OS course.\nstatement of attendance policy: The FSU General Bulletin says: \u201cStudents are expected to attend all of their scheduled University classes. The University reserves the right to deal at any time with individual cases of nonattendance. The effect of absences upon grades is determined by the instructor. Arranging to make up work missed because of legitimate class absence is the responsibility of the student. A student reported for excessive absence in any course may be required by the academic dean to drop the course with the grade of \u201cF\u201d. Students reported absent for a period of two weeks or more may be readmitted only by permission of their academic dean. Upon readmission the dean may require a reduction of the academic load.\u201d The Faculty Handbook amplifies this policy: \u201cThe faculty member is expected to check attendance in all classes. The faculty member is expected to make some allowance for absence occasioned by illness, by trips for the University, or by authorized field trips. Any arrangement to make up work because of class absence is the responsibility of the student. The effect of absence upon grades is determined by the instructor; at the beginning of the term the faculty member explains the grading policy to the students. Class attendance for student athletes will be monitored by BOR rule and verified to the Registrar\u2019s Office.\u201d For lower level courses it may be especially beneficial to base a portion of the grade \u2014 as much as 10% \u2014 on attendance, ? so as to discourage students from skipping class.\nstatement of grading policy: This should be consistent with the departmental policy about out-of-class work not making the difference between a passing (C- or better) and failing (D+ or lower) grade.\nstatement on accommodation for disabilities: This should be the standard \u201cboiler plate\u201d provided by the department, which as of the last editing of this handbook was as follows:Students with disabilities needing academic accommodations should:\nRegister with and provide documentation to the Student Disability Resource Center (SDRC).\nBring a letter to the instructor from the SDRC `indicating you need academic accommodations. This should be done within the first week of class.\nThis syllabus and other class materials are available in alternative format upon request.\nFor more information about services available to FSU students with disabilities, contact the Assistant Dean of Students:\nStudent Disability Resource Center\n08 Kellum Hall\nFlorida State University\nTallahassee, FL 32306-4066\ne-mail:\u00a0sdrc@admin.fsu.edu\nphone: (850) 644-9566.\nstatement on honor code violations and penalties: This should be consistent with the Student Handbook and departmental policies. For example, the following text is acceptable:As in any class at F.S.U., it is your responsibility to read, understand, and conform to the\u00a0Academic Honor Code\u00a0as set forth in the University General Bulletin and the Student Handbook. Any violation of these policies, especially involving plagiarism or the giving or receiving of help on any assignment, will result in severe penalties. Penalties include a grade of F with no provision for retaking the course under the forgiveness policy, and proceedings before the honor court.By turning in work for a grade in this course you are representing it as being entirely your own individual work. Unless otherwise specified in writing, all homework and programming projects are individual work. If any assignment permits teamwork, it will be explicitly stated so in the assignment, and then the work is required to be only the work of the people on the team.What does \u201cindividual work\u201d mean? An intelligent person searches publications (including the web) for information, ideas, and code. If you use information or ideas obtained from the work of another person you must at least give credit via comments in your code stating what you have used, where you obtained it, and who is the person to whom credit is due. If you use any code written by another person you must first obtain permission from the author or copyright owner, then mark the beginning and end of the quoted code using appropriate comments, and include a comment giving where you found the code and the the name of the author or copyright holder. Failure to follow these rules will be considered a violation of the Academic Honor Code.Every\u00a0test, quiz, computer program or other project turned in by a student\u00a0must\u00a0include the following affidavit (this is to forcefully remind each student of the policy). Modify it as shown for tests/programs.I hereby attest that I have neither given or received any assistance (in the completion of this project, or during this test). I fully understand that with regard to any work done at this university, the violation of this policy can result in a zero on the (project, or test), an F in the course, and possible expulsion from the university.\u00a0\n_________________________\nSignature?\nstatement on classroom decorum: Include a statement about behavior in the classroom. In particular, emphasize that disruptions are cause for expulsion from the classroom.Side conversations, cell phone use, and other disruptive or distracting behavior are not permitted in the classroom. Violators may be expelled from the room, and repeat violators may be expelled permanently.\nIf this is your first time writing a syllabus, check with your faculty supervisor for assistance.\n", "document_id": 164105}]}, {"paragraphs": [{"qas": [{"question": "What obstacles do women in computer science face?", "id": 157073, "answers": [{"answer_id": 221224, "document_id": 144212, "question_id": 157073, "text": "W", "answer_start": 0, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}, {"question": "What GPA is required to join WiCS?", "id": 157074, "answers": [{"answer_id": 221225, "document_id": 144212, "question_id": 157074, "text": "Have a 2.7 or higher GPA", "answer_start": 3721, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "Women in Computer Science | Computer Science\n\nApply to be a Mentor \u00a0Apply to be a Mentee\nOverview:\nBeginning in Spring 2018, the Computer Science department will be addressing the issue of low representation of women in Computer Science through a series of departmental initiatives. The primary initiative is the creation of Women in Computer Science (WiCS). This organization is a social and professional group geared at helping to advance women in the department and the field at large through a departmental mentorship program, creating a network to connect students to alumni, and hosting monthly guest speaker and student social events designed to help support and connect students.\nThe Need:\nIn Fall 2017, there were 24.9% undergraduate females and 75.1% undergraduate males enrolled in the Computer Science department at Florida State University, or about a 1:3 ratio of undergraduate females to males. While this number is low, it is higher than the national average 17.9% of women who graduated with a Computer Science bachelor\u2019s degree in 2016 (Zweben and Bizot, 2016). While the Computer Science field is booming, the number and proportion of Computer Science degrees earned by women has decreased in the past 10 years (National Science Foundation, 2017). In the Computer Science department at Florida State University, we do not settle for higher than the national average, and we are making equal representation in Computer Science a priority in our department. The underrepresentation of women in Computer Science raises the possibility that the field functions in a way that may prevent or hinder women from becoming a part of it (Pearl et al., 2002). Thus, it is pivotal that departments and organizations evaluate their internal practices to ensure women are receiving the support they need to enter and advance in the field.\nWomen in Computer Science (WiCS):\nAll students are welcome to join WiCS, even if they would not like to be a mentor or mentee. Monthly socials and guest speaker sessions will occur the second Wednesday of every month. Please keep up-to-date with the latest WiCS news by following us on Social Media (Facebook).\nWiCS Student Council:\nThe Student Council is a group of undergraduate and graduate students interested in leading WiCS. The Student Council creates the agenda for monthly socials and guest speakers and helps to make executive decisions for the group. The WiCS Student Council also monitors and controls the Social Media pages for WiCS.\nMentorship:\nRationale:\nResearch suggests there are four primary, interrelated obstacles for women in Computer Science: difficulties with self-esteem (imposter syndrome), lack of mentoring and role models, gender discrimination, and difficulties balancing career and family responsibilities (Pearl et al., 2002). It is well documented that mentorship programs help students to excel in STEM fields like Computer Science (Dennehy & Dasgupta, 2017), and are used at many colleges and universities that have higher-than-average women in Computer Science, like Carnegie Mellon (Frieze and Blum, 2002).\nProcess:\nMentees are paired with their mentors by the mentorship coordinator. Mentors are expected to reach out to their mentees within the first two weeks of receiving their mentees\u2019 contact, and are expected to meet with their mentees at least once a month outside of the monthly WiCS meeting. The goal of these meetings are to build a rapport and offer support and resources to the mentee.\nWho can be a mentor or mentee?\nStudents interested in becoming a mentor must meet the following requirements:\nBe an undergraduate or graduate, main campus student in the Computer Science department\nTaking or passed COP 4530, Data Structures\nHave a 2.7 or higher GPA\nBe willing to devote the time to being a mentor (estimated ten hours a month for a semester)\nStudents interested in becoming a mentee must be within their first two years of the program, and not have taken COP 4530, Data Structures. In other words, students may be freshmen/sophomores or transfer students in their first year.\nMentorships last for one semester. After this, mentors and mentees may opt out of the program or offer to extend their mentorship.\nStudents of any sex or gender identity are welcome to apply.\nHow to Become a Mentor or Mentee:\nDownload the application on the website and email it to the program coordinator at advisor@cs.fsu.edu by the deadline printed on the application.\nMentors will also need to complete an interview. Selected Mentors will be notified within a week of the interview if selected.\nReferences:\nPearl, A., Pollack, M.E., Riskin, E., Thomas, B., Wolf, E., & Wu, A. (2002.) Becoming a computer scientist. SIGCSE Bull. 34, 2 (June 2002), 135-143. DOI=http://dx.doi.org/10.1145/543812.543847\nFrieze, C. & Blum, L. (2002). Building an effective computer science student organization: the Carnegie Mellon women@SCS action plan. SIGCSE Bull. 34, 2 (June 2002), 74-78. DOI: https://doi.org/10.1145/543812.543835\nDennehy, T.C. & Dasgupta, N. (2017). Female peer mentors early in college increase women\u2019s positive academic experiences and retention in engineering. Proceedings of the National Academy of Sciences of the United States of America, 114 (23). Doi: 10.1073/pnas.1613117114\nNational Science Foundation, National Center for Science and Engineering Statistics. 2017. Women, Minorities, and Persons with Disabilities in Science and Engineering: 2017. Special Report NSF 17-310. Arlington, VA. Available at www.nsf.gov/statistics/wmpd/.\nZweben, S. and Bizot, B. (2017). Generation CS continues to produce record undergrad enrollment; graduate degree production rises at both master\u2019s and doctoral levels. Computing Research News, 29 (5). Available at https://cra.org/crn/wp-content/uploads/sites/7/2017/05/2016-Taulbee-Survey.pdf\nCreated Fall 2017, Kimberly Pack\n", "document_id": 144212}]}, {"paragraphs": [{"qas": [], "context": "Additional Requirements for Students Seeking Admission to the Computer Science Department from Other FSU Departments | Computer Science\n\nAdditional Requirements for Students Seeking Admission to the Computer Science Department from Other FSU Departments\nPreviously Enrolled in CS: Students who enrolled in the CS Graduate Program within the past seven years will need to complete an application for readmission.\nPreviously Enrolled in Another FSU Graduate Program: Students who enrolled in another FSU graduate program within the past seven years at FSU must do the following:\nAn application for readmission must be completed.\nAcademic qualifications must meet or exceed the CS Minimum Admission Criteria described above.\nIf the student is wishing to transfer departments without completing their degree program or concurrently pursue a second degree in CS, a signed and sealed letter must be sent from the student\u2019s current department at FSU to the CS Department, giving the student permission to do so.\n", "document_id": 144218}]}, {"paragraphs": [{"qas": [{"question": "What is the FSU Graduate email?", "id": 89268, "answers": [{"answer_id": 99408, "document_id": 144219, "question_id": 89268, "text": "FSU Graduate Admissions e-mail: graduateadmissions@admin.fsu.edu", "answer_start": 3716, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}, {"question": "How much does the graduate application fee cost?", "id": 157084, "answers": [{"answer_id": 221235, "document_id": 144219, "question_id": 157084, "text": "Application Processing Fee of $30.00.", "answer_start": 944, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "Applying to FSU Computer Science Department Graduate Programs: Instructions for International Students | Computer Science\n\nApplying to FSU Computer Science Department Graduate Programs: Instructions for International Students\nPlease see the Admissions page for deadlines and minimum admission requirements for different degree programs.\nApplication instructions:\n1. Submit the Florida State University Online Application: https://admissions.fsu.edu/gradapp/ with the required attachments (See 2-4 below).\n2. Statement of Purpose \u2013 Must be uploaded in the Online Application.\n3. Resume or Curriculum Vitae \u2013 Must be uploaded in the Online Application.\n4. Three Letters of Recommendation \u2013 Within the Online Application, there is a section where applicants will input the names and contact information of those who will be writing the letters. Recommenders will receive e-mails asking them to upload their letters directly to the application.\n5. Application Processing Fee of $30.00. You will receive an e-mail from the Office of Graduate Admissions requesting the fee within two business days after submitting your application.\n6. Official Graduate Records Exam (GRE) scores. The minimum GRE scores required for admission are a 145 on the verbal section and a 150 on the quantitative section. For the old scoring system, the minimum GRE score required for admission is a 1100 (Verbal and Quantitative combined) with a minimum of 650 on the Quantitative. Please request ETS to send your official test scores to the university. Our institution code is 5219.\n7. Official Test of English as a Foreign Language (TOEFL): A minimum score of 80 (internet-based) is the minimum requirement for graduate admission to the Computer Science Department. However, the Computer Science Department considers a score of 100-105 competitive, especially when students are seeking assistantships. The ability to lecture in English will be a major consideration in the selection of students for Teaching Assistantships. International applicants whose native language is not English must submit official TOEFL results in order to be admitted to the Computer Science graduate program. Students with a 4-year Bachelor\u2019s or a graduate degree from an accredited university in an English-speaking country can be exempt from the TOEFL for admissions purposes. However, exempted students are strongly encouraged to submit TOEFL scores if they seek support from the department. Please request for ETS to send your test scores directly to the university. Our institution code is 5219. The department code is not required.\nFree TOEFL practice tests can be found at the following: http://www.testpreppractice.net/TOEFL/Default.aspx and http://www.testpreppractice.net/TOEFL/Free-Online-TOEFL-Practice-Tests.aspx **Please note that we will accept an IELTS score (minimum 6.5) for admission consideration. However, we do not award any assistantships based on an IELTS score.\n8. One official or certified of all transcript(s), diploma(s), and/or degree certificate(s) from every college or university attended. Transcripts are considered official when they are sent directly from a college or university to the FSU Office of Admissions and contain an official seal and/or signature. All academic records that are not in English must be accompanied by a certified English translation. If you are an FSU undergraduate and all of your transcripts from previous institutions are on file, then you will not need to request transcripts. Transcripts should be mailed directly to the FSU Office of Admissions at the following address:\nOffice of Graduate Admissions\nFlorida State University\n314 Westcott Bldg.\nTallahassee, FL. 32306-1410\nUSAPhone: (850) 644-3501\nFSU Graduate Admissions e-mail: graduateadmissions@admin.fsu.edu\nURL: http://admissions.fsu.edu/\n9. The Certificate of Financial Responsibility (CFR) & Photocopy of Passport. The CFR must be completed after submitting your application, even if your available funds are $0.00. The form is available on the FSU Center for Global Engagement website\n(http://www.cge.fsu.edu/forms/CFR_GradStudentForm.pdf).\nThe CFR and passport photocopy should be mailed directly to the Center for Global Engagement.\nContact information for the Center for Global Engagement is available on the CFR document.\nAll supporting documents MUST be submitted via the Online Application, with the exception of official transcripts (mailed to the Office of Admissions), test scores (sent from ETS to the Office of Admissions). After a determination has been issued from the department the Certificate of Financial Responsibility and copy of Passport can be e-mailed to cge-newstudents@admin.fsu.edu. An application must be complete before it can be considered for admission which includes the receipt of all official supporting documentation. Unofficial transcripts and scores uploaded through the FSU application are not considered a suitable place holder. \n", "document_id": 144219}]}, {"paragraphs": [{"qas": [], "context": "Load Requirements for Graduate Students | Computer Science\n\nLoad Requirements for Graduate Students\nRules of the College and University\nCertain rules are imposed on the department from higher authorities.\nStudents in the thesis master\u2019s program or a Ph.D. program must register for thesis/dissertations credits each term in which a substantial amount of work is being done on the thesis/dissertation, even if the minimum of six (6) semesters hours of thesis has already been met. Students who have left the campus must register for at least two (2) semester hours of thesis or dissertation credit per term \u201cso long as they are receiving faculty supervision.\u201d [page 72 of the Graduate Bulletin]\n\u201cReturning students who \u2026 have been out of school for two or more consecutive terms (including the summer term) must submit an application for readmission to the readmissions section of the Office of the University Registrar. This application must be submitted at least 60 days prior to the beginning of the term for which readmission is desired.\u201d [Graduate Bulletin\u00a0]\nAny international student on a visa who still claims to be a student is required by the US Immigration and Naturalization Service to be a full time student except on their last semester, and they can only have one last semester.\n\u201cTwelve (12) semester hours per semester constitutes a full-time load for graduate students and fellowship holders. A student who wishes to register for fewer than twelve (12) semester hours must have written approval from the academic dean prior to registration.\u201d [Graduate Bulletin]\n\u201cNine (9) semester hours is defined as a full-time load for graduate assistantship holders on a quarter-time appointment or larger. Academic deans may grant exceptions to this policy for teaching assistants in those departments which conform to national course load policies in their disciplines. To satisfy the residence requirement, however, a doctoral student must be enrolled for twenty-four (24) semester hours during any period of 12 consecutive months.\u201d [Graduate Bulletin]\n\u201cThe [maximum] number of hours which a graduate student may carry without special permission is fifteen (15). A heavier load may be permitted by the academic dean.\u201d [Graduate Bulletin]\n\u201cStudents must register for at least one (1) semester hour of thesis or dissertation credit in the final term in which a degree is granted. Nonthesis-type master\u2019s program students who have not previously registered for the comprehensive examination must do so the final term.\u201d [\u00a0Graduate Bulletin]\n\u201cTo be eligible for Matriculation and Out of State waivers this summer, TAs and RAs must carry the following minimum course loads during the terms indicated:\n13-week Session A\n9 hours\n6-week Sessions B or C (must be appointed for .50 FTE)\n5 hours\nCombination of A & B or A & C terms\n9 hours\n\u201d [Memo from the Dean of Arts & Sciences, 8 March 2002]\nAdditional Departmental Rules\nThe Department of Computer Science imposes the following additional student course load requirements. Since Summer 1997, the department checks registrations of graduate students, and cancels them if they do not meet the department\u2019s requirements.\nThe department extends the University policy about thesis/dissertation hours to include students who are working on a master\u2019s project. That is, a student who is using University resources or taking up the time of a faculty member is required to register for at least 2 hours of thesis, dissertation, project, or DIS.\nThe department formally recognizes only three categories of registration: Full Time, Part Time, and FEOTABD (means \u201cFully Employed, Out of Town, and All But Document\u201d, see definitions below).\nIn short, only full-time students are entitled to any of the following departmental resources:\nSpace allocation of any kind\nTelephone service\nWorkstation (dedicated or shared)\nPrinting service\nCopy service\nAccess to departmental expense funds, for example to support travel\nPartial relaxation of this policy (items 1, 2, 3 on an as-available basis and items 4, 5 only for research-related material) may occur in summer, as long as the resources are otherwise unused, and for FEOTABD PhD students returning to finish a dissertation.\nThe three categories, the required loads of students, and the privileges of students in each category are explained in more detail below.\nThe Categories\nFull Time\nThis category consists of all graduate students who are not in either of the other two categories. All TAs and RAs are in this category.\nPart Time\nThis category consists of graduate students who have been formally admitted to part time status. The admitting paperwork must reside in the student\u2019s advising folder.\nTo be admitted to part time status, the student must submit a memorandum to the department chair, in writing or email, containing the following items :\nA request to be admitted to Part Time status\nA statement that the applicant is employed full time as a computer professional\nThe name of the employing entity and location\nThe employment supervisor\u2019s name, address and phone number\nFEOTABD\nThis category, \u201cFully Employed, Out of Town, and All But Document\u201d, consists of graduate students who meet ALL of the following criteria:\nAll requirements for the degree have been completed, except for the defense of the document (Dissertation, Thesis, or Project)\nNo on-campus services will be used, except for interaction with university personnel on the day (or two) of the defense\nComputing facilities may be accessed remotely, but no on-campus services such as printing, library, major professor office or other space use, etc, are expected to be used.\nThe Requirements\nFull Time students must register for nine (9) hours of graduate computer science credits each Fall and Spring semester and five (5) hours each summer semester in which they are using FSU facilities.\nPart Time students must register for three (3) hours of graduate computer science credits each semester in which they are using FSU facilities.\nFEOTABD students must register for one (1) hour of Dissertation, Thesis, or Project every semester.\nOne Exception\nIn the\u00a0last\u00a0semester, a student may register for as little as two hours. Note, however, that a student may have\u00a0only one last semester. In the event that the student invokes this exception one semester and does not complete that semester, it\u00a0cannot\u00a0be repeated the following semester.\nFellows\nMany fellowships have load requirements that are higher than our departmental requirements. In such cases, the fellowship rules supersede those of the department.\nSpecial Rules for Summer Only\nIf you are not on assistantship/fellowship, then\nIf you are not using ANY university resources (including access to faculty), then you are not required to register at all. Most people who are in the middle of a thesis, project, or dissertation are not likely to be in this category since you will be continuing your contact with your major professor.\nIf you are using some type of resources, then you need to register for something. If working on a thesis or dissertation, you should register for at least 2 hrs of thesis/diss. If working on a project, you should register for at least one hour of project. If not doing any of the above, you should register for something (e.g., a class or maybe a DIS). This could be as little as 1 hr. In particular, this means it is OK if you want to just sign up for one course this summer (if not on waivers).\nRemember that if it\u2019s your last term, it is OK to register for as little as 1 hr (1 hr of thesis, diss, or project) \u2026 plus only whatever else you need to graduate.\nIf you have any questions about this, please contact the Director of Graduate Studies.\n", "document_id": 144175}]}, {"paragraphs": [{"qas": [{"question": "What core competencies does the BA in Computer science develop? ", "id": 154648, "answers": [{"answer_id": 218455, "document_id": 144155, "question_id": 154648, "text": "This major develops core competencies in programming, database structure, computer organization, and operating systems.", "answer_start": 1286, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "FSU | Academic Program Guide\nSkip to main content\nFlorida State University\n This is your Donation message.\nLog In\nThis Site\nFSU\nSubmit\nAcademics\nAdmissions\nResearch\nFaculty\nStudents\nAlumni and Friends\nVeterans\nGiving\nAcademic Program Guide\nToggle navigation\nSite Menu\nHome\nMinors\nMajor Comparisons\nCertificates/Specialized Studies\nBachelors/Masters Programs(current)\nLiberal Studies\n  A-Z List\nComputer Science (BA)  College: Arts and Sciences Degree: BA Limited Access: Yes  Contact: Lauren Higbee  (Main campus) Address: 203 Love Building Tallahassee, FL 32306-4530 Phone: (850) 644-8700 Email: advisor@cs.fsu.edu Contact: Distance Learning - FSU Panama City Advising Address: C117 Holley Academic Center, Panama City, FL 32405 Phone: (850) 770-2288 Email: advising@pc.fsu.edu Description of Major                                                                                                                                                                                                                 This major provides a broad-based background sufficient for entry to a career in computing. It provides a systems view of computing, emphasizing the interdependence of design, object orientation, and distributed systems and networks, from basic software through systems design. This major develops core competencies in programming, database structure, computer organization, and operating systems. It allows opportunities to study a range of other aspects of computer and information science, such as information security, data communication/ networks, computer and network systems administration, theoretical computer science, and software engineering. Every student can expect to become proficient at programming in C , C++, and Assembly Language. Additionally, students will be exposed to other languages such as Java, C#, Ada, Lisp, Scheme, Prolog, Perl, and HTML. This major is available on campus or through Distance Learning.\nThe CS/BA program is intended to allow students flexibility in combining computing with other interests. The BA program requires 9 hours of humanities/history beyond General Education requirements. Students in this program should meet with an advisor to select a minor from an approved list. The CS/BA is not ABET/CAC accredited and is not intended to provide sufficient preparation in computer science theory for graduate work in computer science.   \nNote to prospective transfer students: Prospective transfer students should contact as-admissions@fsu.edu (Arts & Sciences Admissions) with specific questions about admission and mapping requirements. \nInternet Supported Distance Learning\nThe programs available through internet-supported distance learning are degree programs that enable students with an Associate in Arts (A.A.) degree from a Florida public institution to earn an FSU bachelor\u2019s degree without moving to Tallahassee. The programs are designed for part time study. Each student receives access to a course Web site and the e-mail addresses of everyone associated with the class. A unique feature of the distance learning programs is the support FSU provides through an assigned Mentor. Mentors serve as learning guides, helping to facilitate each individual student\u2019s success. Students interact with each other, their Mentors, and their instructors via e-mail, Web-based discussion pages, and telephone calls. Students interested in Distance Learning should contact the Office of Distance Learning (ODL). For more information contact (877) FLSTATE or visit the web at https://distance.fsu.edu  .      Prerequisite Coursework                 MAC X140 (3) Precalculus Algebra\nMAC X114 (3) Trigonometry\nMAC X311 (4) Calculus I \nNote: State-wide common prerequisites are always under review. For the most current information and for acceptable alternative courses, visit the \u201cCommon Prerequisites Manual.\u201d This is available from the \u201cStudent Services\u201d section of http://www.flvc.org .                 Requirements  \nRequirements for graduation in the College of Arts and Sciences include:\nThe College of Arts and Science requires proficiency in a foreign language through the intermediate (2220 or equivalent) level or sign language through the advanced (2614 or equivalent) level. Foreign language courses are not available via distance learning at FSU.\nAdmissions/Continuation Requirements to the Major Program of Studies \nStudents should complete the prerequisite coursework with a grade of C minus or higher to be considered for entrance to the major program of study. Students must also have completed a minimum of 52 hours of credit and at least half the required hours in General Education requirements, including required two English and two mathematics, or an A.A degree.\nDistance Learning students must complete the A.A. from a Florida public institution, required prerequisites, and a Supplemental Admissions Application prior to admission. Distance Learning students should also complete the oral competency requirement and the College of Arts and Sciences foreign language requirement prior to admissions. In accordance with the University residency rule, degree requirements not available online must be completed prior to the final 30 hours of the degree.\n*The undergraduate programs in computer science are limited access*, requiring a minimum 2.65 all college-level work attempted GPA for formal admission. All State Common Program Prerequisites listed as Term 1-4 milestones must be completed with a \"C\" range (C minus, C, or C+) grade or better. Students earning less than the necessary grade in any of these courses will be required to retake those courses until the standard is met.\nNote: retaking a course may delay graduation and incur increased fee liability (i.e., repeat course surcharge and excess credit surcharge).\nUpon formal admission into the program, the student must:\n\u2022\tcomplete all courses required for the major with a grade of \"C minus\" or better;\n\u2022\tmaintain a 2.50 all-college-level-work-attempted GPA, excluding the Term 1-4 State Common Prerequisites milestone courses;\n\u2022\tnot receive more than 3 unsatisfactory grades combined in Programming I (COP3363 or COP3014) and Programming II Data Structures I \n       (COP3330);\n\u2022\tnot accumulate more than 5 unsatisfactory grades (U, F, D minus, D, D+) in courses required for the major, excluding Term 1-4 State \n       Common Prerequisites milestone courses, taken after entering the program.\nMajor Program of Studies at FSU: (51-52 hours)\nComputer Science courses: (22-23 hours)\nCOP 3363 (3) Introduction to C++ for majors OR both COP 3014 (3) Programming I and COP 3353 (1) Introduction to UNIX  \nCOP 3330 (3) Data Structures, Algorithms, and Generic Programming I\nCEN 4020 (3) Software Engineering I\nCEN 4090L (1) Software Engineering Capstone\nCDA 3100 (3) Computer Organization I\nCOP 4610 (3) Operating Systems & Concurrent Programming\nCOP 4530 (3) Data Structures, Algorithms, and Generic Programming II\nCOP 4521 (3) Secure Parallel & Distributed Computing w/ Python\nComputer Science electives: (17 hours)\nAt least seventeen semester hours of computer science electives, at least twelve of which must be at the 4000 level, where up to two hours can be from CIS 4900.\nAdditional courses required for the BA program in Computer Science: (12 hours)\nMAD 2104 (3) Discrete Mathematics I, plus\nNine (9) hours in the fields of humanities and/or history, in addition to the General Education requirements and the Arts and Sciences foreign language requirement.\nMinor: CS/BA majors must complete a minimum of 12 hours in an approved minor area.\nComputer Skills Competency: 0 hours beyond major. \nCOP 3363 (3) Intro to Programming or COP 3014 (3) Programming I \nOral Communication Competency: 0-3 hours. \nStudents must demonstrate the ability to orally transmit ideas and information clearly. This requirement is met through a college-level approved course, such as SPC 1017 or SPC 2608 (3). Students taking CIS 3250 or any GE Ethics course may take CIS 3250L (1) Ethics & CS lab to satisfy this requirement.\nMinimum Program Requirements \u00adSummary\nTotal Hrs. Required 120\nGeneral Education 36*\nBA Prerequisite Coursework 10*\nBA Major Coursework 51-52\nMinor Coursework 0-12 or more\nForeign Language 0-12 (depending on placement)\nComputer Skills 0 beyond major\nOral Communication Competency 0-3\nElectives to bring total hours to 120\n*Note: Some prerequisite coursework may also be applied to General Education requirements in math and science. Mapping                                                                                                                                                                                                                                                                                                                                                                                                                                 Mapping is FSU\u2019s academic advising and monitoring system. Academic progress is monitored each Fall and Spring semester to ensure that students are on course to earn their degree in a timely fashion. Transfer students must meet mapping guidelines to be accepted into their majors. You may view the map for this major at www.academic-guide.fsu.edu.                 Remarks                                                                                                                                                                                                                                                                                                                                                                                                                                 1. A minimum of 45 hours at the 3000 level or above, 30 of which must be taken at this University.\n2. Half of the major course semester hours must be completed in residence at this University.\n3. The final 30 hours must be completed in residence at this University.\n4. The B. A. degree requires nine (9) additional hours in the fields of history and humanities.                 Employment Information  Salary Information: For more information go to: National Association of Colleges and Employers (www.naceweb.org) or the Occupational Outlook Handbook (www.bls.gov/ooh/home.htm) provided by the U.S. Bureau of Labor Statistics.\nRepresentative Job Titles Related to this Major: Programmer (Scientific, Business, Systems), Technical Writer, Systems Analyst, Operations-Research analyst, Software Engineer, Webmaster, Teacher of High School, Technical support Representative, Manager, Data Processing System Manager, Network Administrator, Sales Representative for Computer or Software Manufacturers.\nRepresentative Employers: Computer Firms, High Schools, Colleges and Universities, Financial Firms, Private Industry, Governmental Agencies.                View Computer Science (BA) Academic Map\n\u00a9 2015 Florida State University\n\t\t\t600 W. College Avenue\n\t\t\tTallahassee, FL 32306\nQuestions or Comments\nPrivacy Policy\nCopyright\nFSU Directory Assistance:\n\t\t\t850-644-2525\n", "document_id": 144155}]}, {"paragraphs": [{"qas": [{"question": "How do you get an Information Security Specialist Certificate from FSU?", "id": 89210, "answers": [{"answer_id": 99350, "document_id": 144185, "question_id": 89210, "text": "This major also includes the award of the Information Security Specialist Certificate.", "answer_start": 2392, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}, {"question": "How many semester hours do you need for an MS in computer science?", "id": 89212, "answers": [{"answer_id": 99352, "document_id": 144185, "question_id": 89212, "text": "t most, one course outside the department at the 5000 or 6000 level can also count towards the 30 hours if approved by the department chair after the major professor justifies why the outside course is important for the student\u2019s research.", "answer_start": 330, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}, {"question": "What courses are offered which fulfill core requirements?", "id": 156972, "answers": [{"answer_id": 221106, "document_id": 144185, "question_id": 156972, "text": "Software\nCOP 5570 Concurrent, Parallel, and Distributed Programming (3)\nCOP 5621 Compiler Construction (3)\nCOP 5725 Database Systems (3)\nSystems\nCDA 5155 Computer Architecture (3)\nCNT 5505 Data and Computer Communications (3)\nCOP 5611 Advanced Operating Systems (3)\nTheory\nCOT 5310 Theory of Automata and Formal Languages (3)\nCOT 5405 Advanced Algorithms (3)\nCOT 5507 Analytical Methods (3)", "answer_start": 867, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "MS in Computer Science | Computer Science\n\nMS in Computer Science\nThe number of hours for the graduate degree as described in this web page will be effective in Summer 2018.\nIn all majors, a student must complete thirty semester hours in computer science courses numbered 5000 or above, including approved CIS 5930 and CIS 6930. At most, one course outside the department at the 5000 or 6000 level can also count towards the 30 hours if approved by the department chair after the major professor justifies why the outside course is important for the student\u2019s research. Supervised teaching, supervised research, seminars, directed individual study, internship, and courses with prefix CGS are excluded. \nFor the Computer Science and Cybersecurity majors, at least one course from each of the following three core areas must be taken to satisfy the area requirements:\nSoftware\nCOP 5570 Concurrent, Parallel, and Distributed Programming (3)\nCOP 5621 Compiler Construction (3)\nCOP 5725 Database Systems (3)\nSystems\nCDA 5155 Computer Architecture (3)\nCNT 5505 Data and Computer Communications (3)\nCOP 5611 Advanced Operating Systems (3)\nTheory\nCOT 5310 Theory of Automata and Formal Languages (3)\nCOT 5405 Advanced Algorithms (3)\nCOT 5507 Analytical Methods (3)\nComputer Science Major\nMS CS students must complete the undergraduate prerequisites in the following page before graduating, and will likely have to complete a subset of these courses before being admitted to the program.\nUndergraduate Pre-requisites for MS CS degree.\nCybersecurity Major\nCybersecurity students must complete the undergraduate prerequisites in the following page before graduating, and will likely have to complete a subset of these courses before being admitted to the MS Cybersecurity major.\nUndergraduate Pre-requisites for MS Cybersecurity degree.\nA student in the Cybersecurity major is required to take the following courses, some of which (*) also satisfy the area requirements:\nCIS 5370 Computer Security (3)\nCIS 5371 Cryptography (3)\nCNT 5412 Network Security, Active and Passive Defenses (3)\nCNT 5505 Data and Computer Communications* (3)\nCNT 5605 Computer and Network Administration (3)\nplus one of the following courses:\nCOP 5570 Concurrent, Parallel, and Distributed Programming* (3)\nCOP 5611 Operating Systems* (3)\nCOT 5310 Theory of Automata and Formal Languages* (3)\nCOT 5405 Advanced Algorithms* (3)\nThis major also includes the award of the Information Security Specialist Certificate. Students are not required to apply to the general CS MS degree beforehand, and are allowed to directly apply into the Information Security MS program.\nComputer Network and System Administration Major\nCNSA students must complete the undergraduate prerequisites in the following page before graduating, and will likely have to complete a subset of these courses before being admitted to the MS CNSA major.\nUndergraduate Prerequisites for the MS CNSA Degree Program\nThe following courses are the core requirements for the MS CNSA degree.\nRequired Computer Science Courses for the MS CNSA Degree Program\nCDA 5155 Computer Architecture (3)\nCNT 5412 Network Security, Active and Passive Defenses (3)\nCNT 5505 Data and Computer Communications (3)\nCNT 5605 Computer and Network Administration (3)\nCOP 5611 Advanced Operating Systems (3)\nCOP 5570 Concurrent, Parallel, and Distributed Programming (3)\nIn addition to the required courses, the CNSA program has an experience requirement, and students are required to complete system administration intern-ship(s) to complete this requirement. The CNSA program works with various departments and colleges on the FSU campus to provide local system administration intern-ships for students.\nIt is possible for the MS CNSA students to obtain an NSA-approved training certificate, which facilitates graduates from the program in getting employment with a federal government agency or a government contractor after they graduate. The MS CNSA student can use two of the available elective courses to take COP 5725, Database Systems and CIS 5370, Computer Security to fulfill the requirements. However, this certificate is limited to U.S. citizens only. A description of the training certificate is available at http://www.cs.fsu.edu/academics/certificate and in the section of Requirements for NSA Training Certificate\u009d below.\n", "document_id": 144185}]}, {"paragraphs": [{"qas": [], "context": "FSU | Academic Program Guide\nSkip to main content\nFlorida State University\n This is your Donation message.\nLog In\nThis Site\nFSU\nSubmit\nAcademics\nAdmissions\nResearch\nFaculty\nStudents\nAlumni and Friends\nVeterans\nGiving\nAcademic Program Guide\nToggle navigation\nSite Menu\nHome\nMinors\nMajor Comparisons\nCertificates/Specialized Studies\nBachelors/Masters Programs(current)\nLiberal Studies\n  A-Z List\nComputer Programming and Applications (BA) Academic MAP (Effective Summer 2021 and after)\nThis map is a term-by-term sample course schedule. The milestones listed to the right of each term are designed to keep you on course to graduate in four years. The Sample Schedule serves as a general guideline to help you build a full schedule each term. The General Education and Elective courses must be selected to satisfy all area, lab, and multicultural requirements unless your program meets these requirements with major courses. Milestones are courses and special requirements necessary for timely progress to complete a major. Missing milestones will result in one of two types of map registration stops. The first level (Degree Map Off-track) is placed following grade posting if the student has missed a milestone (course and/or GPA) for the first time in the major. If a student is in non-compliance with milestones for two (2) consecutive semesters (excluding summers), a Major Change Required stop is placed on the student's registration.\n Mapping Coordinator: Shellie Camp  Email: scamp@fsu.edu Sample Schedule Term 1 hrs ENC1101 Freshman Composition3MAC1105 College Algebra or higher3GE Core Social Science3GE Natural Science3GE Core Humanities3Milestones 1Complete ENC 1101 ( \u2265C minus)Complete MAC 1105 or higher math ( \u2265 C minus )Term 2 hrs ENC2135 Research, Genre, and Context 3MAC1140 Pre-Calculus Algebra 3GE History3GE Core Natural Science and Lab4Milestones 2Complete ENC 2135 ( \u2265C minus )Complete MAC 1140 ( \u2265 C minus )Recommend GPA \u2265 2.50Term 3 hrs COP3363 Introduction to C++ for majors or COP3014 Programming I3COP3353 Intro to UNIX (if COP 3014 is taken instead of COP3363)1MAC1114 Analytic Trigonometry3GE Ethics3Minor course3Milestones 3Recommend Minimum GPA \u2265 2.65Term 4 hrs MAC2311 Calculus I 4CS Elective 3GE Elective                      3Minor Course 3Milestones 4Complete MAC 2311 ( \u2265 C minus )Recommend Overall GPA \u2265 2.65Term 5 hrs COP 3330 Data Structures, Algorithms, and Genetic Programming I3MAD 2104 Discrete Mathematics I3Foreign Language I4Minor Course 3Milestones 5Complete COP 3014 or COP 3363 ( \u2265 C minus )Civic Literacy requirementRecommend Overall GPA \u2265 2.50Term 6 hrs CDA 3100 Computer Organization I3CS Elective 3Foreign Language II4Minor Course 3Milestones 6Complete COP 3330 ( \u2265 C minus )Recommend Overall GPA \u2265 2.50Term 7 hrs COP 4530 Data Structures, Algorithms, and Generic Programming II3CS Elective 3CS Elective 3Foreign Language III4Milestones 7Pre-Graduation CheckRecommend Overall GPA \u2265 2.50Term 8 hrs CEN 4020 Software Engineering I3CEN 4090L Software Eng. Capstone3CS Elective 3CS Elective 3CS Elective 3Milestones 8Apply for Graduation in 1st two weeksRecommend Overall GPA \u2265 2.50 Employment Information Representative Job Titles Related to this Major: Programmer (Scientific, Business, Systems), Technical Writer, Systems Analyst, Operations-Research analyst, Software Engineer, Webmaster, Teacher of High School, Technical support Representative, Manager, Data Processing System Manager, Network Administrator, Sales Representative for Computer or Software Manufacturers.\nRepresentative Employers: Computer Firms, High Schools, Colleges and Universities, Financial Firms, Private Industry, Governmental Agencies.\nInternational Opportunities: International study is available for all students and may include opportunities for internships or taking course work towards various majors and minors. International study may have an impact on the MAP; therefore, it is important to consult with the academic advisor before participating. Interested students can find information about international study, research, internships, and service opportunities at: global.fsu.edu/undergraduate-students/going-abroad. \nThis Map is not a contract, either expressed or implied, between the University and the student, but represents a flexible program of the current curriculum which may be altered from time to time to carry out the academic objectives of the University. The University specifically reserves the right to change, delete or add to any Map at any time within the student\u2019s period of study at the University\nView Computer Programming and Applications (BA) Program Guide\n\u00a9 2015 Florida State University\n\t\t\t600 W. College Avenue\n\t\t\tTallahassee, FL 32306\nQuestions or Comments\nPrivacy Policy\nCopyright\nFSU Directory Assistance:\n\t\t\t850-644-2525\n", "document_id": 144159}]}, {"paragraphs": [{"qas": [{"question": "What minimum GPA is required to enroll in the Education degree?", "id": 154696, "answers": [{"answer_id": 218503, "document_id": 144163, "question_id": 154696, "text": "In order to be admitted for the second major in Education, students must have an overall 2.50 or higher GPA", "answer_start": 1805, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "FSU | Academic Program Guide\nSkip to main content\nFlorida State University\n This is your Donation message.\nLog In\nThis Site\nFSU\nSubmit\nAcademics\nAdmissions\nResearch\nFaculty\nStudents\nAlumni and Friends\nVeterans\nGiving\nAcademic Program Guide\nToggle navigation\nSite Menu\nHome\nMinors\nMajor Comparisons\nCertificates/Specialized Studies\nBachelors/Masters Programs(current)\nLiberal Studies\n  A-Z List\nFSU -Teach Computer Science-Math ACADEMIC MAP (Effective Summer 2021 and after)\nThis map is a term-by-term sample course schedule. The milestones listed to the right of each term are designed to keep you on course to graduate in four years. The Sample Schedule serves as a general guideline to help you build a full schedule each term. The General Education and Elective courses must be selected to satisfy all area and multicultural requirements unless your program meets these requirements with major courses. Milestones are courses and special requirements necessary for timely progress to complete a major. Missing milestones will result in one of two types of map registration stops. The first level (Degree Map Off-track) is placed following grade posting if the student has missed a milestone (course and/or GPA) for the first time in the major. If a student is in non-compliance with milestones for two (2) consecutive semesters (excluding summers), a Major Change Required stop is placed on the student's registration. \nThe CS-Math/FSU-Teach major is designed for students who wish to teach Math and/or Computer Science at the middle and/or secondary education levels. Students are strongly encouraged to have credit for College Algebra (MAC1105) prior to enrolling as freshman in the CS-Math/FSU-Teach major. This degree should not be used by someone planning to do graduate work in computer science.\nIn order to be admitted for the second major in Education, students must have an overall 2.50 or higher GPA, and satisfy the teacher education admission requirements noted here: https://education.fsu.edu/teacher-ed-admissions\nThis program is limited access. Students must earn a 2.50 GPA to be accepted into the program.\n Mapping Coordinator: Shellie Camp Email: scamp@fsu.edu Sample Schedule Term 1 hrs ENC 1101 Freshman Comp3MAC 2311 Calculus I4GE Humanities & Cultural Practice3GE Social Science Core3SMT1043 Step 1: Inquiry Approaches to Teaching1Milestones 1Complete ENC1101 ( \u2265 C minus )Complete 1st GE Mathematics ( \u2265 C minus )Term 2 hrs ENC 2135 Research, Genre, and Context 3MAC 2312 Calculus II4COP 3363 Intro to Programming\t3GE Ethics3SMT1053 Step 2: Inquiry-Based Lesson Design1Milestones 2Complete ENC2135 ( \u2265 C minus )Complete 2nd GE Math ( \u2265 C minus )Minimum Overall GPA \u2265 2.50Term 3 hrs STA 2122 Applied Statistics3COP 3330 Data Structures, Algorithms, and Genetic Programming I3GE Elective/E-series3GE Natural Science Core\t3GE Natural Science Core Lab1SMT 3100 Knowing and Learning 3Milestones 3Complete General Knowledge FTCEApply for formal admission to STEMinimum Overall GPA \u2265 2.50Term 4 hrs GE History3Foreign Language I4MAD 2104 Discrete I3CDA 3100 Computer Organization I3GE Elective/Diversity3Milestones 4Complete MAC 2311 ( \u2265 C minus )Minimum Overall GPA \u2265 2.50Summer hrs Foreign Language II4COP 3252 Java Programming3Term 5 hrs COP4530 Data Structures, Algorithms, and Generic Programming II3MAS 3105 Linear Algebra3CS 4000-level Elective3SMT 4301 Classroom Interactions3HIS3505 Perspectives on Science and Mathematics3Milestones 5Complete COP3363 or COP3014 ( \u2265 C minus)Complete SMT 3100Recommend beginning Foreign Language requirementCivic Literacy RequirementMinimum Overall GPA \u2265 2.50Term 6 hrs MAT 3503 Functions and Modeling3MTG 4212 College Geometry3CEN 4020 Software Engineering\t3RED4335 Content Area Reading for Secondary School Teachers3ISC 3523C Research Methods3..Summer.TSL4324 ESOL Instruction in the Content Area3GE Elective3Milestones 6Complete MAD2104 ( \u2265 C minus )Complete CDA3100  ( \u2265 C minus )Overall GPA \u2265 2.50....Term 7 hrs SMT4664 Project Based Instruction (meets Oral Communication)3CS 4000-level Elective3BA History/Humanities3BA History/Humanities 3CEN 4090L Software Engineering Capstone1Milestones 7Complete SMT4664 ( \u2265 C minus )Complete SMT4301 ( \u2265 C minus )Complete a Pre-Graduation CheckProfessional Ed. & Subject Area FSCETerm 8 hrs SMT 4930 and SMT 4945 Apprenticeship Teaching 6Milestones 8Apply for graduation in 1st two weeksOverall GPA \u2265 2.50 Employment Information Representative Job titles Related to this Major: Middle School/High School Advanced Placement Mathematics Teacher, Middle School/High School Advanced Placement Computer Science Teacher, Programmer, Technical Support Representative, Manager, Sales Representative for Computer or Software Manufacturers, Technical Writer, Systems Analyst, Operations-Research analyst, Software Engineer, Webmaster, Data Processing System Manager, Network Administrator.\nRepresentative Employers: Public and private schools, government organizations, private industry, computer firms. \nInternational Opportunities: International study is available for all students and may include opportunities for internships or taking course work towards various majors and minors. International study may have an impact on the MAP; therefore, it is important to consult with the academic advisor before participating. Interested students can find information about international study, research, internships, and service opportunities at: global.fsu.edu/undergraduate-students/going-abroad.\nThis Map is not a contract, either expressed or implied, between the University and the student, but represents a flexible program of the current curriculum which may be altered from time to time to carry out the academic objectives of the University. The University specifically reserves the right to change, delete or add to any Map at any time within the student\u2019s period of study at the University.\nView FSU -Teach Computer Science-Math Program Guide\n\u00a9 2015 Florida State University\n\t\t\t600 W. College Avenue\n\t\t\tTallahassee, FL 32306\nQuestions or Comments\nPrivacy Policy\nCopyright\nFSU Directory Assistance:\n\t\t\t850-644-2525\n", "document_id": 144163}]}, {"paragraphs": [{"qas": [{"question": "Who is the director of graduate studies?", "id": 89145, "answers": [{"answer_id": 99285, "document_id": 144165, "question_id": 89145, "text": "Director of Graduate Studies\u00a0(Whalley)", "answer_start": 875, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}, {"question": "Who is the Distance Learning Liason?", "id": 154707, "answers": [{"answer_id": 218514, "document_id": 144165, "question_id": 154707, "text": "Distance Learning Liaison (ODDL)\u00a0(Lacher)", "answer_start": 5125, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}, {"question": "What does the colloquium chair do? ", "id": 154708, "answers": [{"answer_id": 218515, "document_id": 144165, "question_id": 154708, "text": "This person is responsible for organizing and overseeing the departmental colloquium colloquium series. Because this is also a course offered for credit, the job involves both service and teaching.", "answer_start": 7375, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "Departmental Service Positions and Charges | Computer Science\n\nDepartmental Service Positions and Charges\nFaculty Service Assignments\nFaculty are assigned to the following departmental service positions by the department chair, and delegated appropriate authorities, in order to share responsibility for the welfare and functioning of the department.\nDirector of Undergraduate Studies\u00a0()\nchairs undergraduate curriculum committee\ncoordinates undergraduate curriculum\ncoordinates undergraduate advisors\nalso serves as Course Scheduling Manager\nworks with advisors to estimate student demands in undergraduate courses\ncreates course and room schedule for\u00a0all\u00a0courses\nimplements teaching assignments from Chair\ncoordinates schedule with faculty\nworks with program assistant (McNealy) to enter data\nrepresents department on Statewide Common Course Numbering Discipline Committee\nDirector of Graduate Studies\u00a0(Whalley)\nreviews incoming transcripts, after students are admitted and agree to come to FSU\nevaluates transfer credit\nreviews prerequisites\nplaces students\nassigns incoming students to faculty advisors\ngraduation checks\nholds graduate student orientation meetings each semester\nchairs graduate curriculum committee\nDirector of Graduate Admissions\u00a0(Mascagni)\nmanages graduate admissions & financial aid committee\nreviews all applications\napplies criteria agreed upon by admissions/financial aid committee to screen out unqualified cases\npasses qualified cases to admissions/financial aid committee for ranking and decision on offers of admission & financial aid\nallocates assistantships\nsends offer letters to students\nis assisted by program assistant (McNealy) and undergrad student assistants\nAssociate Chair\u00a0(Gaitros)\nadministrative supervisor of TAs\nTA/adjunct duty assignments\nTA English language certifications\nTA/adjunct training, coordinates with PIE\nTA/adjunct evaluation: SUSSAI & visitations\nTA/adjunct office assignments\nCoordinates with department secretary (Rico) on key/lock authorizations\nManages OPS budget, working with program assistant (Snyder)\nManages tuition waiver budget\nCoordinates with Director of Graduate Admissions to determine number of assistantships we can afford to offer\nOversees course offerings taught by TAs\nCoordinates with client departments on service course requirements\nOther\u00a0ad hoc\u00a0duties assigned by the department chair\nDirector of Internship Programs\u00a0()\nManages internship program\nMakes contacts with employers\nReviews and approves applications\nSupervises student interns, assigns grades\nDirector of Software Engineering Program\u00a0()\nAdministers master\u2019s track in SE\nChairs SE oversight committee\nReceives and processes applications for track\nCorresponds or meets as necessary with employers to certify on-the-job experiences to satisfy experience checklist\nCalls committee meetings to approve applications for track\nInitiates further development of SE curriculum\nCoordinates with Director of Graduate Studies to certify completion of experience requirement\nCoordinates with Director of Graduate Admissions to ensure incoming students do not bypass the track admission process\nDirector of CNSA Program\u00a0()\nAdministers master\u2019s track in CNSA\nChairs CNSA oversight committee\nReceives and processes applications for track\nCorresponds or meets as necessary with employers to certify on-the-job experiences to satisfy experience checklist\nCalls committee meetings to approve applications for track\nInitiates further development of CNSA curriculum\nCoordinates with Director of Graduate Studies to certify completion of experience requirement\nCoordinates with Director of Graduate Admissions to ensure incoming students do not bypass the track admission process\nPortfolio Review Committee Chair\u00a0()\nChairs PhD Portfolio Review Committee\nCalls students to update portfolios annually\nConvenes committee for annual portfolio reviews\nConvenes committee in response to student requests for special admission to candidacy reviews\nWrites letters to students, copied to Director of Graduate Studies, reporting on results of portfolio reviews.\nWorks with program assistant (McNealy) to keep portfolios on file.\nComputer & Network Administrator\u00a0(Yu Wang)\nManages equipment inventory\nManages/administers computer systems\nManages teaching lab facilities\nManages/administers software licenses\nManages/administers departmental network\nManages support staff for teaching labs, network, and computer systems\nAdministers user accounts and on-line documentation\nFaculty Senator\u00a0(Tyson)\nThe Senator is responsible for representing the department in the FSU Faculty Senate.\nFaculty Senate Alternate\u00a0(elected)\nThe Alternate is responsible for covering meetings at which the Senator is unable to attend.\nACM Advisor (ACM)\u00a0(Yuan)\nThis individual is responsible for advising the student ACM chapter. This generally includes meeting periodically with the ACM officers to plan their activities.\nHonors Day Organizer (Honors )\u00a0()\nThis individual is responsible for organizing the annual departmental Honors Day activity each spring. This should be held near the end of the spring term, before the end of classes.\nDistance Learning Liaison (ODDL)\u00a0(Lacher)\nThis individual is responsible for ensuring that the department is kept informed of developments at ODDL, and vice versa. In situations that call for representing the position of the department on a particular issue, the Liaison should consult with the department chair, who may in turn call a faculty meeting or e-mail poll, in order to develop a departmental position on the issue.\nComputer Engineering Liaison (Eng)()\nThis individual is responsible for ensuring that the department is kept informed of developments in the Computer Engineering Program of the FSU/FAMU COE, and vice versa. In situations that call for representing the position of the department on a particular issue, the Liaison should consult with the department chair, who may in turn call a faculty meeting or e-mail poll, in order to develop a departmental position on the issue.\nLibrary Liaison (Lib)\u00a0()\nThis individual is responsible for ensuring that the department is kept informed of developments with respect to the Library, and vice versa. (This generally includes dealing with periodic requests for us to cut our journal subscriptions.) In situations that call for representing the position of the department on a particular issue, the Liaison should consult with the department chair, who may in turn call a faculty meeting or e-mail poll, in order to develop a departmental position on the issue.\nCampus Computing-Related Committee Representatives (CIRC)()\nThese individuals are responsible for ensuring that the department is kept informed of developments with respect to the activities of the Computing and Information Resources Committee and the Campus Networking Committee of the Faculty Senate, and vice versa. In situations that call for representing the position of the department on a particular issue, the Liaison should consult with the department chair, who may in turn call a faculty meeting or e-mail poll, in order to develop a departmental position on the issue.\nScience Area Representative for Promotion & Tenure (PTRep)\u00a0()\nThis individual represents the department on the Science Area Promotion and Tenure Committee, and may be asked to serve on higher level committees also.\nColloquium Chair (Colloq)\u00a0(TBD)\nThis person is responsible for organizing and overseeing the departmental colloquium colloquium series. Because this is also a course offered for credit, the job involves both service and teaching.\nAn important guiding principal is that the buck stops with the colloquium chair. To the extent that one delegates, one has to be vigilant that the delegated duties are carried out. For example, if a speaker shows up at the airport and no one is there to greet him, the department gets a black eye and the colloquium chair is responsible.\nCollect info from faculty about desired speakers to invite.\nInvite speakers.\nNotify the publication STATE so the talk will be given publicity. An e-mail address for such is in STATE (the FSU newsletter).\nArrange overnight accommodations.\nArrange for speaker to be picked up and returned to the airport.\nArrange a room for the talk.\nIf there is an honorarium to be paid, work with the CS office manager well in advance of the visit to fill out forms to arrange for that.\nWell in advance of the visit, have the CS staff person in charge of travel forms make up a TAR form to cover the speakers expenses.\nSend e-mail to faculty and grads announcing the talk the end of the week before the talk, and the day of the talk.\nArrange for the speaker to be entertained. Typically this would involve getting up a group to take the speaker to lunch, and getting up a group to take the speaker to dinner. Sometimes a faculty member will volunteer to entertain the speaker at his/her home.\nWhile the speaker is here, take the speaker by the CS staff person responsible for travel to provide social security number and sign the reimbursement forms to receive payments for travel expenses.\nMaintain a Colloquium web page and arrange to have it linked off the CS dept pages. Example web pages from the Spring 2000 Colloquium series, done by Dr. Levitz, can be seen at\u00a0http://www.cs.fsu.edu/~baker/dept/colloquium_2000/index.html\nManage the Colloquium class; that is, the group of students taking Colloquium for credit. Guidelines for this can be found at the URL:\nhttp://www.cs.fsu.edu/~baker/dept/colloquium_2000/inst_to_students.html\n", "document_id": 144165}]}, {"paragraphs": [{"qas": [{"question": "How can I drop a course from the current semester?", "id": 154723, "answers": [{"answer_id": 218530, "document_id": 144167, "question_id": 154723, "text": "Courses can be dropped without grade liability until the 7th-week deadline. ", "answer_start": 2879, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "FAQ for Majors in the Computer Science Department | Computer Science\n\nFAQ for Majors in the Computer Science Department\nHolds:\n1.\tI have a hold on my account. How can I remove it?  \nA.\tAcademic advisors can lift map term off track and D/F holds.\ni.\tMap Term Off Track & D/F Warning Holds: Please schedule an appointment or attend drop-in advising.\nii.\tD/F Dismissal holds: Please change your major before emailing advisor@cs.fsu.edu to lift this hold. \nB.\tFor all other holds, click on the hold and read the details for instructions and contact information. For any questions, contact the department listed on the hold. \n2.\tI have a graduation progress check hold but am not graduating. Can an advisor lift it? \nA.\tAdvisors cannot lift these holds. Graduation Progress Check holds are just that\u2014a check to see where you are in terms of graduating and to see what you have left to graduate. It does not mean you are graduating right now. \nB.\tClick on the hold and follow the directions to remove it. Note that both the Registrar and College of Arts and Sciences put holds on student accounts for Graduation Progress Checks, so make sure to complete both to remove the holds.  \nEnrolling/Schedule Planning:\n1.\tCan I take this class pass/fail (S/U)? \nA.\tGenerally, CS majors will only take their foreign language courses as S/U. No major, minor, or Liberal Studies requirement courses may be taken S/U. \nB.\tSubmit the request online in Student Central by the 7th-week deadline. See instructions here: https://registrar.fsu.edu/training/su_grade_request.\n2.\tI am trying to enroll in an online CS course but received an error message. Can an advisor enroll me? \nA.\tCS Majors may not take CS Distance Learning courses. These courses are reserved for the Distance Learning program. Fall 2020 CS courses will have the \u201clocation\u201d listed as \u201cremote.\u201d CS major courses with a \u201clocation\u201d of \u201conline\u201d are reserved for Distance Learning. \n3.\tMy registration opened. Can an advisor tell me what to take?  \nA.\tYour academic advisor will be happy to advise you on course options if you attend drop-in advising or schedule an appointment.\nB.\tTo get started, however, students can also check these resources:\ni.\t  My Academic Requirements\nii.\t CS Major Flowcharts\niii.\tAcademic Program Guide\n4.\t(Upper-division students) I want to graduate soon. Can my advisor tell me what I have left to take? \nA.\tSure! First, refer to your College of Arts and Sciences Progress Check (pick it up from 010 Longmire or email as-progresscheck@fsu.edu) and your major\u2019s flowchart. Then, see an advisor. \n5.\tCan you tell me what CS electives are offered and when?  \nA.\tCS electives change every semester, so we email out the list to the majors listserv after the schedule posts each semester (February and October). Check your email or contact advisor@cs.fsu.edu.  \n6.\tHow can I drop a course from this semester? \nA.\tCourses can be dropped without grade liability until the 7th-week deadline. Courses can be (\u201clate\u201d) dropped with a W until the 12th-week deadline. Upper-division students are allowed ONE (1) late drop at FSU. Deadlines are posted on the Registrar\u2019s Academic Calendar each semester. First, double-check with FSU Financial Aid. Then, watch this video for instructions. \n7.\tHow can I sign up for the Foreign Language placement test? \nA.\tSign up here: https://www.registerblast.com/fsu/Exam/List\nB.\tMore information on Foreign Language Exemption & Placement: https://www.modlang.fsu.edu/students/undergraduate-advising/exemption-placement \nGraduation\n1.\tI didn\u2019t apply for graduation but am supposed to graduate this semester! How can I do that?  \nA.\tSee the upper division advisor for a Graduation Clearance form, then contact the College of Arts & Sciences at as-advising@fsu.edu to ask to be late-added to the graduation list. \n2.\tI applied for graduation. What am I supposed to do now? \nA.\tGo through the Graduation Checklist on the Registrar\u2019s page: http://registrar.fsu.edu/graduation/checklist/. Complete your Financial Aid exit interview and CS department exit surveys (part 1 and part 2) and you should be good to go. Complete your classes with a C- or better. \n", "document_id": 144167}]}, {"paragraphs": [{"qas": [{"question": "What do you learn with a Cyber Criminology degree?\n", "id": 89102, "answers": [{"answer_id": 99242, "document_id": 144157, "question_id": 89102, "text": "Cyber Criminology includes both how to use computers to facilitate the study of crime and the study of how crimes are accomplished through the use of computers.", "answer_start": 1111, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}, {"question": "What mathematics courses are required for the Cyber Criminology program?", "id": 154664, "answers": [{"answer_id": 218471, "document_id": 144157, "question_id": 154664, "text": "Required Mathematics Course (3)\nMAD 2104 (3) Discrete Mathematics", "answer_start": 4912, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "FSU | Academic Program Guide\nSkip to main content\nFlorida State University\n This is your Donation message.\nLog In\nThis Site\nFSU\nSubmit\nAcademics\nAdmissions\nResearch\nFaculty\nStudents\nAlumni and Friends\nVeterans\nGiving\nAcademic Program Guide\nToggle navigation\nSite Menu\nHome\nMinors\nMajor Comparisons\nCertificates/Specialized Studies\nBachelors/Masters Programs(current)\nLiberal Studies\n  A-Z List\nCyber Criminology (Computer Science)  College: Arts and Sciences  Degree: BS Limited Access: No  Contact: Lauren Higbee Address: 203C Love Bldg, FSU Tallahassee, FL 32306-4530 Phone: (850) 644-8700 Email: advisor@cs.fsu.edu Description of Major                                                                                                                                                                                 Criminology and Criminal Justice and Computer Science have collaborated to offer this new interdisciplinary degree in Cyber Criminology. Information-related crime, cyber-forensics, and computer/network security are significant issues that affect all levels of business, government, and academia. Cyber Criminology includes both how to use computers to facilitate the study of crime and the study of how crimes are accomplished through the use of computers. Students will be prepared to do graduate work and research in this area, or to be effective employees of government, law enforcement, and industry, thereby filling the pressing need for information technology specialists who can address these issues.\nNote to prospective transfer students. Prospective transfer students should contact as-admissions@fsu.edu (Arts & Sciences Admissions) with specific questions about admission and mapping requirements.                 Prerequisite Coursework  The following may also be used to meet General Education and/or major requirements\nCOP XXXX (3) Computer Programming\nMAC X105 (3) College Algebra\nMAC X140 (3) Precalculus\nMAC X114 (3) Trigonometry\nMAC X311 (4) Calculus I \nNote: State-wide common prerequisites are always under review. For the most current information and for acceptable alternative courses, visit the \u201cCommon Prerequisites Manual.\u201d This is available from the \u201cStudent Services\u201d section of http://www.flvc.org .\n Requirements  Requirements for Progression to the Upper-Division Major\nStudents must complete at least 52 hours of credit with a minimum grade point average of 2.00 and at least half the required General Education hours including two English and two mathematics or an A.A. Degree. Cyber Criminology is not limited access.\nContinuation in the major\nStudents must earn a C or better in CCJ 2020, CCJ 3011 and CCJ 4700 and a C minus better in all other courses that count toward the major and maintain a minimum cumulative GPA of 2.00. Students may choose to graduate through the Computer Science department in the College of Arts and Sciences or through the College of Criminology and Criminal Justice. Each of these colleges has special graduation and/or continuation requirements.\nRequirements for graduation in the College of Arts and Sciences\nThose choosing to pursue this major through Computer Science in the College of Arts and Sciences must meet the college\u2019s requirement for proficiency in a foreign language through the intermediate (2220 or equivalent) level or sign language through the advanced (2614 or equivalent) level. Those choosing to graduate through Criminology and Criminal Justice do not need a foreign language.\nContinuation/graduation requirements in the College of Criminology and Criminal Justice\nStudents electing to pursue this major through the College of Criminology and Criminal Justice who earn more than four grades below C minus  in Computer Criminology coursework and/or prerequisites, whether taken at Florida State University or elsewhere, whether repeated or not, will not be permitted to continue or graduate in this major.\nMajor Program of Studies at FSU: 52 hours\nRequired Computer Science Courses (25 hours)\nCOP 3014 (3) Programming I and COP 3353 (1) Introduction to UNIX or COP 3363 (3) Introduction to Programming in C++ for majors\nCOP 3330 (3) Data Structures, Algorithms, & Generic Programming I\nCIS 4360 (3) Computer Security Fundamentals\nCIS 4385 (3) Cybercrime Detection and Forensics (capstone course)\nComputer Science elective courses (12 hrs) selected from the approved list:\nCDA 3100, CEN 4020, CIS 3250, CNT 4406, CNT 4504, CNT 4603, COP 4342, COP 3252, COP 4530, COP 4610, COP 4710.\nRequired Criminology Courses (24 hours)\nCCJ 2020 (3) Introduction to Criminal Justice\nCCJ 3011 (3) Criminology\nCCJ 4700 (3) Introduction to Research Methods in Criminology\nCJE 3110 (3) Law Enforcement\nCCJ 4938 (3) CJ System Responses to Cybercrime (capstone course)\nAnd criminology elective courses (9 hrs) selected from the approved list:\nCCJ 3644, CCJ 3666, CCJ 4497, CCJ 4614, CJC 3010, CJE 4610, CJJ 4010, CJL 3510, CJL 4064.\nRequired Mathematics Course (3)\nMAD 2104 (3) Discrete Mathematics\nMinor:  a minor is not required.\nComputer Skills Competency: 0 beyond major: COP 3014 (3).\nOral Communication Competency: 0-3 hours.\nStudents must demonstrate the ability to orally transmit ideas and information clearly. This requirement may be met with an approved college-level course such as SPC 1017 or SPC 2608.\nMinimum Program Requirements - Summary\nTotal Hrs. Required 120\nGeneral Education 36*\nPrerequisite Coursework* 7 beyond other requirements\nMajor Coursework 52\nMinor Coursework 0\nForeign Language 0-12 (language proficiency required of Arts and Sciences students)\nComputer Skills 0 beyond major\nOral Competency 0-3 hours\nElectives to bring total hours to 120\n*Prerequisite courses in mathematics may also be counted as part of General Education and COP 3014, a required course in the major, may also be used to meet the computer programming prerequisite.              Mapping                                                                                                                                                 Mapping is FSU\u2019s academic advising and monitoring system. Academic progress is monitored each Fall and Spring semester to ensure that students are on course to earn their degree in a timely fashion. Transfer students must meet mapping guidelines to be accepted into their majors. You may view the map for this major at www.academic-guide.fsu.edu/. \n Remarks                                                                                                                                                                                 1. A minimum of 45 hours at the 3000 level or above, 30 of which must be taken at this University.\n2. Half of the major course semester hours must be completed in residence at this University.\n3. The final 30 hours must be completed in residence at this University.                 Employment Information  Salary Information: For more information go to: National Association of Colleges and Employers (www.naceweb.org) or the Occupational Outlook Handbook (www.bls.gov/ooh/home.htm) provided by the U.S. Bureau of Labor Statistics.\nGraduates of the program will be prepared to work either for law enforcement agencies as information crime specialists (sworn or unsworn) or within companies or organizations as network security specialists.                 View Cyber Criminology (Computer Science) Academic Map\n\u00a9 2015 Florida State University\n\t\t\t600 W. College Avenue\n\t\t\tTallahassee, FL 32306\nQuestions or Comments\nPrivacy Policy\nCopyright\nFSU Directory Assistance:\n\t\t\t850-644-2525\n", "document_id": 144157}]}, {"paragraphs": [{"qas": [{"question": "What does CGS stand for?", "id": 156854, "answers": [{"answer_id": 220988, "document_id": 144177, "question_id": 156854, "text": " Computer General Studies", "answer_start": 181, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}, {"question": "What is the prerequisite for CGS 5268?", "id": 89191, "answers": [{"answer_id": 99331, "document_id": 144177, "question_id": 89191, "text": "Prequisite: CDA 3100.", "answer_start": 6366, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}, {"question": "What is the prefix for Computer Engineering Software?", "id": 156863, "answers": [{"answer_id": 220997, "document_id": 144177, "question_id": 156863, "text": "CEN ", "answer_start": 140, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}, {"question": "What is the course number for Principles and Algorithms of Computer Vision?", "id": 156870, "answers": [{"answer_id": 221004, "document_id": 144177, "question_id": 156870, "text": "CAP 5415 ", "answer_start": 720, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "Graduate Courses | Computer Science\n\nGraduate Courses\nDefinition of Prefixes\nCAP \u2013 Computer Applications\nCDA \u2013 Computer Design/Architecture\nCEN \u2013 Computer Engineering Software\nCGS \u2013 Computer General Studies\nCIS \u2013 Computer and Information Systems (special topics)\nCNT \u2013 Computer Networks\nCOP \u2013 Computer Programming (languages, data structures, software systems, operating systems, compiling)\nCOT \u2013 Computer Theory\nSpecial Course Offerings\nThere are various special courses offered every term. Special topics courses may evolve into regularly offered courses if they are successful, but they may also be once-only offerings. The latter is especially true if the enrollment of the first offering is low.\n5000 Level Courses\nCAP 5415 Principles and Algorithms of Computer Vision (3). Prerequisites: COP 4530 This course covers the basic computational principles and algorithms to extract information from images and image sequences. Topics include imaging models, linear and non-linear filtering, edge detection, stereopsis and motion estimation, texture modelling, segmentation and grouping, and deformable matching for recognition.\nCAP 5605. Artificial Intelligence (3). Prerequisite: COP 4530. Introduction, representing knowledge, controlling attention, exploiting constraints, basic LISP programming, basic graph searching methods, game-playing and dealing with adversaries, understanding vision, theorem proving by computer, computer programs utilizing artificial intelligence techniques.\nCAP 5638. Pattern Recognition (3). Prerequisite: Knowledge of probability and at least one programming language. Application of mathematical tools, in particular, probabilistic, algebraic, and linguistic tools, to problems in pattern recognition and classification. Feature selection procedures, syntactic pattern recognition. Applications of fuzzy set theory to pattern recognition and classification.\nCAP 5726. Introduction to Computer Graphics (3). Prerequisite: COP 4530. This course covers fundamental principles and algorithms underlying computer graphics, and also provides a brief introduction to openGL. The course is intended for computer-science graduate students who are interested in computer-graphics related careers or in learning and applying computer-graphics techniques.\nCDA 5125. Parallel and Distributed Systems (3). Prerequisite: COP 4610. This course covers systems issues in parallel and distributed systems. Topics include parallel computer architectures, parallel system models, parallel programming paradigms, performance monitoring and optimization techniques, compilation techniques for parallel architectures, communication library implementations, and software/hardware fault tolerance techniques.\nCDA 5140. Fault Tolerance and Reliability (3). Prerequisite: CDA 5155. Basic definitions; self-checking circuits; error detection measures; interconnection networks; test generation and testability; distributed fault tolerance systems; software fault tolerance; fault tolerance and VLSI; error recovery.\nCDA 5155. Computer Architecture (3). Prerequisite:CDA 3100. Computer system components; microprocessor and minicomputer architecture; stack computers; parallel computers; overlap and pipeline processing; networks and protocols; performance evaluation; architecture studies of selected systems.\nCEN 5000. Knowledge Management and Data Engineering (3). Prerequisite: COP 5710. A survey of techniques and tools representing the transition from database management to knowledge management; database architecture and models; fuzzy databases; construction of knowledge bases.\nCEN 5035. Software Engineering (3). Prerequisites: COP 4020, COP 4530, CEN 4021. Survey of software engineering and detailed study of topics from requirement analysis and specification, programming methodology, software testing and validation, performance and design evaluation, software project management, and programming tools and standards.\nCEN 5055. Project Development (3). Prerequisites: CEN 5035. This course deals with the planning, design, validation and implementation of a large scale project using IEEE deliverables, state-of-the-art software engineering techniques, analysis and design project reviews and evaluations prior to implementation in the Graduate Software Project.\n CEN 5064. Advanced Software Design (3). Prerequisite: CEN 5035. This course concentrates on the design of software systems after requirements engineering has been completed. The course offers education in techniques such as architectural design, pattern integration, and re-factorings.\nCEN 5066. Software Engineering in Graphics (3). Prerequisite: CAP 4730. Software engineering techniques as applied to graphical concepts based on ISO 7942, the Graphical Kernel Systems (GKS). Particular topics include binding times, concept coupling, segments, transformations, passive/active graphics, clipping. A class project is required.\nCEN 5526. Wireless & Mobile Computing (3). Prerequisites: None. This course introduces students to the design, implementation, and analysis of mobile systems and applications in various domains, including urban sensing, mobile healthcare monitoring, security and privacy, location-aware services, and vehicular computing. Integral to the course will be the course projects in which students develop mobile applications on mobile devices. Through the course projects, students gain hands-on experience on building mobile applications and validate their research ideas in practice.\nCEN 5720. Computer-Human Interaction (3). Prerequisite: COP 4530. Systematic analysis of user needs and activities from the point of view of the actual user. Design and implementation of effective, user-friendly software. Methods of analysis. Performance and interface of programs. User anxiety and convenience.\nCGS 5267. Principles of Computer Organization (3). Corequisites: COP 3330 and MAD 2104.  For graduate non-majors and graduate majors needing foundational work in computer science; credit may not be applied towards a graduate degree in computer science. Basic computer structure and design, register transfer and micro operations, central processor organization, micro programming, arithmetic processor design, input-output, memory organization, virtual memory, microprocessors and microcomputer architecture.\nCGS 5268. Principles of Computer Organization II (3). Prequisite: CDA 3100. For graduate non-majors and graduate majors needing foundational work in computer science; credit may not be applied towards a graduate degree in computer science. Fundamental concepts in processor design, including datapath and control, pipelining, memory hierarchies, and I/O.\nCGS 5409. Object-oriented Programming in C++ for Non-majors (3). Prerequisite: COP 3014 -or a compatible course in C or C++ programming. Pre/co-requisite: COP 3353  For graduate non-majors and graduate majors needing foundational work in computer science; credit may not be applied towards a graduate degree in computer science. Topics include basics of C++ language, objects and classes, programming with classes, constructors and destructors, dynamic memory allocation, function and operator overloading, master classes, the class iostream, base and derived classes, and templates. May not be applied toward a degree in computer science.\nCGS 5425. Object-Oriented Programming with Data Structures (3).  Prerequisites: COP 3330, and MAD 2104. Pre/co-requisite: CDA 3100 . For graduate non-majors and graduate majors needing foundational work in computer science; credit may not be applied towards a graduate degree in computer science. Structured and object-oriented programming; invariant relations, stepwise refinement; text processing, internal sorting methods, linear tables, pointers and linked data structures, recursive programming and recursion elimination, sequential file processing; trees and graphs; program verification and running time analysis; application of concepts through programming projects.\nCGS 5426. Programming Language Concepts (3). Corequisite: COP 4530 . For graduate non-majors and graduate majors needing foundational work in computer science; credit may not be applied towards a graduate degree in computer science. A survey of programming languages and language features and an introduction to compilers. Languages to be discussed include FORTRAN, Pascal, Ada, PL/1, APL, and LISP. An oral presentation is required.\nCGS 5427. Algorithm Design and Analysis (3).  Prerequisites: COP 4530, MAD 3105-or-3107. Corequisites: STA4442, STA4321, or STA 3032. For graduate non-majors and graduate majors needing foundational work in computer science; credit may not be applied towards a graduate degree in computer science. Techniques for the analysis of computer algorithms; examples of well-designed algorithms and associated data structures; principles of algorithm design and application to programming projects.\nCGS 5428. Relational Database Theory (3).  Prerequisites: COP 3330 and MAD 2104. For graduate non-majors and graduate majors needing foundational work in computer science; credit may not be applied towards a graduate degree in computer science. Basic file organization methods, indexed files, multi-key processing; architecture of database management systems; relational, hierarchical network, and semantic database models; normalization; distributed databases and file systems; practical use of a DBMS and the building of a database application.\nCGS 5429. Introduction to Computer Theory (3). Prerequisites: MAD 3105. For graduate non-majors and graduate majors needing foundational work in computer science; credit may not be applied towards a graduate degree in computer science. Regular expressions; regular, context-free, context-sensitive, and unrestricted grammars; foundations of language theory; finite automata and linear grammars; pushdown automata; turing machines and non-solvability.\nCGS 5466. Programming for Non-Majors (3). Prerequisites: MAC 1140. For graduate non-majors and graduate majors needing foundational work in computer science; credit may not be applied towards a graduate degree in computer science. Fundamental concepts and skills of programming in a high-level language. Flow of control: sequence, selection, iteration, subprograms. Data structures: arrays, strings, structs, ADT lists and tables. Algorithms using selection and iteration (decision making, finding maxima and minima, basic searching and sorting, simulation, etc.). Good program design using a procedural paradigm, structure and style are emphasized. Interactive and file IO. Testing and debugging techniques.\nCGS 5765. Principles of Operating Systems (3). Prerequisites: CDA 3100, COP 4530. For graduate non-majors and graduate majors needing foundational work in computer science; credit may not be applied towards a graduate degree in computer science. Design principles of batch and multi-programming and time-sharing operating systems. Linking, loading, input-output systems, interacting processes, storage management, process and resource control, file systems.\nCGS 5935. Special Topics in Computer Science for Non-Majors (1-3). This course will offer special topics in Computer Science that are designed for non-Computer Science graduate students.\nISC 5228. Monte Carlo Methods (3). This course provides an introduction to probabilistic modeling and Monte Carlo methods (MCMs) suitable for graduate students in science, technology and engineering. It provides an introduction to discrete event simulation, MCMs and their probabilistic foundations, and the application of MCMs to various fields. In particular, Markov chain MCMs are introduced as are the application of MCMs to problems in linear algebra and the solution of partial differential equations.\nCIS 5370. Computer Security (3). Prerequisites: COP 4610 or consent of instructor. Covers threats and attacks (such as computer viruses and Trojan horses), access control, entity authentication, covert channels, inference and database security, secure operating systems, network security, legal and ethics aspects, administering security, physical security, and TEMPEST.\nCIS 5371 Cryptography (3). Prerequisites: MAD 3105.  This course addresses issues of modern cryptography covering theory and practice. Algorithms such as the RSA, EIGamal and the digital Signature Standard are covered in depth.\nCIS 5900r. Directed Individual Study (1-9). (S/U grade only) May be repeated to a maximum of twelve (12) semester hours.\nCIS 5910r. Supervised Research (1-5). (S/U grade only.) Cannot be applied to the master\u2019s degree. May be repeated to a maximum of five (5) semester hours.\nCIS 5915r. Graduate Software Project(1-12). (S/U grade only.) A minimum of six (6) semester hours of credit is required.\nCIS 5920r. Colloquium (1). (S/U grade only.) Series of lectures given by faculty and visiting computer scientists. May be repeated up to a maximum of ten (10) semester hours.\nCIS 5930r. Selected Topics in Computer Science (1-3). May be repeated to a maximum of twelve (12) semester hours.\nCIS 5940r. Supervised Teaching (1-5). (S/U grade only.) May be repeated to a maximum of five (5) semester hours.\nCIS 5970r. Master\u2019s Thesis (1-12). (S/U grade only.) A minimum of nine (9) semester hours of credit is required.\nCIS 5949r. Internship in Computer Science (0\u20139). (S/U grade only.) Prerequisite: COP 4610. This internship is a field placement in an approved industry or government entity having a significant information technology or computer science component. May be taken for variable credit and repeated with departmental approval. Credits do not count towards graduation. Successful completion requires satisfactory job evaluation and demonstration of educational value of placement via a paper. May be repeated to a maximum of thirty-six semester hours.\nCNT 5412. Network Security, Active and Passive Defenses (3).  Prerequisites: COP 4530, and MAD 2104, or consent of instructor. Course covers defense of computer networks, investigation of threats to computer networks, network vulnerabilities, techniques for strengthening passive defenses, tools for establishing an active network defense, and policies for enhancing forensic analysis of crimes and attacks on computer networks.\nCNT 5415. Applied Computer and Network Security (3). In this course, students familiarize themselves with current and emerging threats to the security of computer systems and networks, including viruses, worms, and network intrusion; and with techniques for the prevention, detection, and recovery from such attacks, such as firewalls, intrusion detection systems, secure coding practices, and others. Attack and defense mechanisms are studied in a systematic way to develop students\u2019 practical and analytical skills to identify and correct or mitigate threats to computer systems and networks.\nCNT 5505. Data and Computer Communications (3). Prerequisite: CDA 3100 and COP 4610. Overview of networks; data communications principles; data link layer; routing in packet switched networks; flow and congestion control; multiple access communication protocols; local area network protocols and standards; network interconnection; transport protocols; integrated services digital networks (narrowband and broadband); switching techniques and fast packet switching.\nCNT 5605. Computer and Network Administration (3). Prerequisite: COP 4610 . UNIX user commands and shell programming. Problem solving and diagnostic methods, system startup and shutdown, device files and installing devices, disk drives and file systems, NFS, NIS, DNS, send mail. Managing a WWW site, managing UNIX software applications, system security, performance tuning. Legal and professional issues, ethics and policies.\nCNT 5529. Wireless Networking (3). This course is intended to cover a wide spectrum of topics on wireless networks, including the physical layer, the medium access control layer, and the network layer. The focus is on understanding, implementing, and experimenting with various wireless networking technologies in different layers with software.\nCOP 5385. HSM and Reactive Systems (3). Prerequisites: COP 4530, COP 4610. Hierarchical state machines (HSM) are finite state machines with a behavioral inheritance hierarchy. HSM provide a theoretical model for event-driven (reactive) systems. The course studies this HSM model and introduces a framework for implementing reactive systems based on HSM models of systems. The use of HSM as an organizing principle for applications software, from desktop to real time, is studied. A range of applications is discussed and a student project is required.\nCOP 5517. Generic Programming (3). Prerequisite: COP 4530. Generic Programming Principles and Techniques, including most of the following topics: Generic Containers; Function and Predicate Objects; Generic Algorithms; Mediation between containers and algorithms with iterators; Containers and Algorithms in the C++ STL Vectors, Lists, and Deques; Stacks, Queues, Priority Queues, Ordered Sets and Maps, Hashed Sets and Maps, Iterators and Iterator Adaptors, General algorithms, Set algorithms, Heap algorithms, Search algorithms, and Sort algorithms; Extending the STL; Graphs, Digraphs, and Graph Algorithms; Policy Based Design; Partial template specialization; Traits; Typelists; Design Pattern Implementations: Singletons; Smart Pointers; Abstract Factory; and related special topics.\nCOP 5570. Concurrent, Parallel, and Distributed Programming (3). Prerequisite: COP 4610. UNIX and C standards, file I/O, file access and attributes, directories, the standard I/O library, systems administration files, the process environment, process control, process relationships, signals, terminal I/O, daemon processes, interprocess communication, and pseudo terminals.\nCOP 5611. Advanced Operating Systems (3). Prerequisites: CDA 3100, COP 4610, and introductory probability or statistics. Design principles of batch, multiprogramming, and time-sharing systems; distributed systems; problems of concurrency.\nCOP 5621. Compiler Construction (3). Prerequisites: CDA 3100, COP 4020, COT 4420 . Introduction to compiling, elements of language theory, syntax-directed translation, lexical analysis, symbol tables, backtrack parsing, precedence parsing, LR(k) parsing, LL(k) parsing, intermediate code generation, code optimization, code generation, error detection and recovery.\nCOP 5641. Kernel and Device Driver Programming (3). Prerequisite: COP 4610, COP 5570, or permission of instructor. Internals of the Linux operating system kernel, including virtual and physical memory management, scheduling, and device drivers. Kernel modules, hardware interfaces, char and block devices, kernel debugging, interrupt handling, memory mapping. Laboratory exercises modifying example modules, project developing a new device driver.\nCOP 5642. RealTime Systems Theory and Practice (3). Prerequisite: COP4610 or COP 5570. Theoretical foundations and practical techniques for the design and implementation of real time computer systems. Topics include applicable scheduling theory, the use of computers for controlling real time processes, the use of a real-time operating system. Laboratory work includes writing software to control a physical device with hard timing constraints, and analysis of scheduling performance by simulation. A term project is required.\nCOP5659. Mobile Programming (3). Prerequisite: COP 4530. This course teaches students how to program mobile devices. Students use event-based models to write and deploy an intent based application using a mobile computing software framework. May be repeated to a maximum of nine semester hours.\nCOP 5725. Database Systems (3). Prerequisites: COP 4710, COP 4610. Use of a generalized database management system; characteristics of database systems; hierarchical, network, and relational models; file organizations.\nCOP 5818. Distributed Applications Development (3).  Prerequisite: COP 3252. Programming of distributed web applications using Java database connectivity, servlets, Java server pages, remote method invocation, and enterprise Java beans; use of the Sun Microsystems Java 2 Enterprise Edition development platform either directly or through an integrated development environment such as IBM\u2019s websphere.\nCOP 6622. Advanced Topics in Compilation (3). Prerequisite: COP 5621. The course covers attribute grammars and attribute grammar processors, formal methods of semantic analysis, generalized tree transformers, code selection, analysis and optimization, as well as error analysis and recovery.\nCOT 5310. Theory of Automata and Formal Languages (3). Prerequisites: COP 4020, COT 4420. Formal models of computation; automata; formal languages, their relationships, decidable and undecidable problems.\nCOT 5315. Programming Language Foundations (3). Prerequisites:COP 4020, and MAD 3105 . Conceptual subtleties in programming languages; formal specification of syntax and semantics; issues in the design and implementation of programming languages.\nCOT 5405. Advanced Algorithms (3).  Prerequisites: COP 4530. Algorithms, formal proofs of correctness, and time complexity analysis for: network flow problems, approximation of NP hard combinatorial optimization problems, parallel algorithms, cache-aware algorithms, randomized algorithms, computational geometry, string algorithms, and other topics requiring advanced techniques for proof of correctness or time/space complexity analysis.\nCOT 5410. Complexity of Algorithms (3). Prerequisites: COP 4530, and COT 4420. Formal methods for the analysis of algorithm complexity, application to specific algorithms, lower bounds, asymptotically optimal algorithms, Reducibilities, NP completeness, and other classifications of \u201chard\u201d problems.\nCOT 5507. Analytical Methods in Computer Science (3). Prerequisite: COP 4530. This course teaches computer science students the fundamental discrete mathematics required for serious graduate work in Algorithms and Theoretical Computer Science. It specifically covers topics in recurrent problems, sums, integer functions, elementary number theory, binomial coefficients, special numbers, and generating functions.\nCOT 5540. Logic for Computer Science (3). Prerequisite: COT 4420. Syntax, semantics, and proof theory of propositional logic and first order languages; prenex normal form; Gentzen systems; resolution for propositional logic; elements of PROLOG and program verification.\nCOT 5715. Random Number Generation (3). Prerequisite: COT 4531. This course provides a graduate level examination of all aspects of random number generation as used in simulation. Specifically, the course concentrates on pseudorandom number generation and quasirandom number generation theory and practice.\nISC 5318. High Performance Computing (3). Prerequisites: COP 4020. This course introduces high-performance computing, the use of parallel supercomputers, computer clusters, as well as software and hardware in order to speed up computations. Students learn to write faster code that is highly optimized for modern multi-core processors and clusters, using modern software-development tools and performance analyzers, specialized algorithms, parallelization strategies, and advanced parallel programming constructs.\nISC 5228. Monte Carlo Methods (3). Prerequisites: ISC 5305, MAC 2311, and MAC 2312. This course provides an introduction to probabilistic modeling and Monte Carlo methods (MCMs) suitable for graduate students in science, technology, and engineering. It provides an introduction to discrete event simulation, MCMs and their probabilistic foundations, and the application of MCMs to various fields. In particular, Markov chain MCMs are introduced, as are the application of MCMs to problems in linear algebra and the solution of partial differential equations.\n6000 Level Courses\nCAP 6417. Theorectical Foundations of Computer Vision (3). Prerequisite: CAP 5415. This course covers theoretical foundations of computer vision. By formulating vision as an inference process, approaches to vision are presented and analyzed systematically. Topics include Marr\u2019s computational vision paradigm, regularization theory, Bayesian inference framework, pattern theory, and visual learning theories.\nCIS 6900r. Directed Individual Study (1-12). (S/U grade only.) May be repeated to a maximum of twenty-four (24) semester hours.\nCIS 6930r. Advanced Topics in Computer Science (1-3). May be repeated to a maximum of twelve (12) semester hours.\nCIS 6935r. Advanced Seminar in Computer Science(S/U grade only) (1). May be repeated to a maximum of eight (12) semester hours.\nCIS 6980r. Dissertation (1-12). (S/U grade only.)\nCOP 6622. Advanced Topics in Compilation (3). Prerequisite: COP 5621. In-depth study of the following topics: attribute grammars and attribute grammar processors, formal methods of semantic analysis, generalized tree transformers, code selection, analysis and optimization, and error analysis and recovery.\n8000 Level Courses\nCIS 8962r. Doctoral Qualifying Examination (0). (P/F grade only)\nCIS 8964r. Doctoral Preliminary Examination (0). (P/F grade only.)\nCIS 8966r. Master\u2019s Comprehensive Examination (0). (P/F grade only.)\nCIS 8974. Master\u2019s Project Defense (0). (P/F grade only.)\nCIS 8976r. Master\u2019s Thesis Defense (0). (P/F grade only.)\nCIS 8985r. Defense of Dissertation (0). (P/F grade only.)\n", "document_id": 144177}]}, {"paragraphs": [{"qas": [{"question": "What is the minimum GPA for a BS in Computer Science", "id": 89132, "answers": [{"answer_id": 99272, "document_id": 144161, "question_id": 89132, "text": "Students must achieve at least a 2.65 GPA in all college work attempted. ", "answer_start": 1628, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "FSU | Academic Program Guide\nSkip to main content\nFlorida State University\n This is your Donation message.\nLog In\nThis Site\nFSU\nSubmit\nAcademics\nAdmissions\nResearch\nFaculty\nStudents\nAlumni and Friends\nVeterans\nGiving\nAcademic Program Guide\nToggle navigation\nSite Menu\nHome\nMinors\nMajor Comparisons\nCertificates/Specialized Studies\nBachelors/Masters Programs(current)\nLiberal Studies\n  A-Z List\nComputer Science (BS) ACADEMIC MAP (Effective Summer 2021 and after)\nThis map is a term-by-term sample course schedule. The milestones listed to the right of each term are designed to keep you on course to graduate in four years. The Sample Schedule serves as a general guideline to help you build a full schedule each term. The General Education and Elective courses must be selected to satisfy all area and multicultural requirements unless your program meets these requirements with major courses. Milestones are courses and special requirements necessary for timely progress to complete a major. Missing milestones will result in one of two types of map registration stops. The first level (Degree Map Off-track) is placed following grade posting if the student has missed a milestone (course and/or GPA) for the first time in the major. If a student is in non-compliance with milestones for two (2) consecutive semesters (excluding summers), a Major Change Required stop is placed on the student's registration.\nThe Computer Science Department degree program provides a broad background in programming, theoretical computer science, hardware, mathematics, physics, and science. The Computer Science (BS) major is limited access. Students must achieve at least a 2.65 GPA in all college work attempted. Students must then maintain a 2.50 GPA to remain in good standing in the major. Students starting math at a level below calculus will graduate with more than the minimum 120 hours needed for the degree but will not be considered \"off-course\".  Students may want to consider full-time enrollment in summers to ease the academic pressures during the fall and spring terms. \n Mapping Coordinator: Shellie Camp  Email:  scamp@fsu.edu Sample Schedule Term 1 hrs ENC1101 Freshman Composition3MAC2311 Calculus with Analytic Geometry I4COP 3363 Introduction to C++ for majors or COP3014 Programming I      3COP3353 Intro to UNIX (if COP3014 is taken instead of COP3363)1GE Core Social Science3Milestones 1Complete ENC1101 ( \u2265 C minus )Complete 1st GE Mathematics ( \u2265 C minus )Term 2 hrs ENC2135 Research, Genre, and Context 3MAC2312 Calculus with Analytic Geometry II4COP 3330 Data Structures, Algorithms, and Genetic Programming I3GE Core Humanities/Cultural Practice3Milestones 2Complete ENC2135 ( \u2265 C minus )Complete 2nd GE Mathematics ( \u2265 C minus )Minimum Overall GPA \u2265 2.50Summer hrs PHY2048C General Physics A with lab 5GE Natural Science (for Majors)3/4Term 3 hrs PHY2049C General Physics B with lab5MAD2104 Discrete Mathematics I3CDA3100 Computer Organization I3GE History3CS Elective3Milestones 3Complete MAC2311 ( \u2265 C minus )Minimum Overall GPA \u2265 2.65Term 4 hrs COP4530 Data Structures, Algorithms, and Generic Programming II3MAD3105 Discrete Mathematics II3CIS3250 Ethics in Computer Science 3CS Elective3Milestones 4Complete MAC2312 ( \u2265 C minus )Complete Natural Science requirements for the majorMinimum Overall GPA \u2265 2.65Term 5 hrs COP4610 Operating Systems & Concurrent Programming3GE Humanities/Cultural Practice3Foreign Language I4CS Elective3Milestones 5Maintain GPA \u2265 2.50 after formally admitted.Complete COP3014 or COP3363 ( \u2265 C minus )Civic Literacy requirementTerm 6 hrs STA4442 Introduction to Probability 3COP 4521 Secure Parallel & Distributed Computing w/ Python3Foreign Language II4CS Elective3Milestones 6Overall GPA \u2265 2.50 Complete COP3330 ( \u2265 C minus )Complete MAD2104 ( \u2265 C minus )Term 7 hrs COT4420 Theory of Computation3Foreign Language III4CEN 4020 Software Engineering I3CS Elective3Milestones 7Overall GPA \u2265 2.50Complete CDA3100 ( \u2265 C minus )Complete COP4530 ( \u2265 C minus )Complete Pre-Graduation CheckTerm 8 hrs CEN 4090L Software Engineering Capstone1GE Social Science3CS Elective or Advanced Math Elective3CS Elective3CS Elective3Milestones 8Overall GPA \u2265 2.50Apply for Graduation in 1st two weeks Employment Information Representative Job titles Related to this Major: Programmer (Scientific, Business, Systems), Technical Writer, Systems Analyst, Operations-Research analyst, Software Engineer, Webmaster, Teacher of High School, College or University, Technical Support Representative, Manager, Data Processing System Manager, Network Administrator, Sales Representative for Computer or Software Manufacturers. \nRepresentative Employers: Computer Firms, High Schools, Colleges and Universities, Financial Firms, Private Industry, Governmental Agencies. \nInternational Opportunities: International study is available for all students and may include opportunities for internships or taking course work towards various majors and minors. International study may have an impact on the MAP; therefore, it is important to consult with the academic advisor before participating. Interested students can find information about international study, research, internships, and service opportunities at: global.fsu.edu/undergraduate-students/going-abroad. \n This Map is not a contract, either expressed or implied, between the University and the student, but represents a flexible program of the current curriculum which may be altered from time to time to carry out the academic objectives of the University. The University specifically reserves the right to change, delete or add to any Map at any time within the student\u2019s period of study at the University. \nView Computer Science (BS) Program Guide\n\u00a9 2015 Florida State University\n\t\t\t600 W. College Avenue\n\t\t\tTallahassee, FL 32306\nQuestions or Comments\nPrivacy Policy\nCopyright\nFSU Directory Assistance:\n\t\t\t850-644-2525\n", "document_id": 144161}]}, {"paragraphs": [{"qas": [{"question": "How do you become chair of the Graduate Curriculum Committee?", "id": 89182, "answers": [{"answer_id": 99322, "document_id": 144173, "question_id": 89182, "text": "The Department Chair will appoint The Chair of the Committee. ", "answer_start": 1872, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "Graduate Curriculum Committee Charter | Computer Science\n\nGraduate Curriculum Committee Charter\nGraduate Curriculum Committee\nOrganization and Charter\nApproved by GCC Vote October 7, 2009.\nCharter:\u00a0The purpose of the Graduate Curriculum Committee is to act as the executive body of the department in matters relating to the\u00a0graduate curriculum, its degree programs and courses.\u00a0The committee will proactively evaluate the\u00a0graduate curriculum, implement necessary changes and minor improvements, propose significant improvements for faculty decision, and respond to faculty, administration, staff and student issues on matters within its scope.\u00a0The authority and decision making ability of this committee is derived from the Chair of the department. The committee is responsible for oversight of the\u00a0graduate curriculum, including approval of new course proposals, modifications to existing courses and textbook choices for all\u00a0graduate courses. The committee is\u00a0also responsible for proposing changes to degree program requirements and for new\u00a0graduate\u00a0degree and certificate programs to be approved by the faculty.\nOrganization:\u00a0The committee will be comprised of members of the faculty and staff of the Department of Computer Science. The Chair of the Department will appoint members to the committee and assign a Chair. Committee members will solicit and gather issues for discussion from faculty, staff and students and call meetings on an \u201cas-needed\u201d basis. Minutes will be kept and recommendations made to the Chair of the Department in writing. All proposed curriculum changes, other than those that are truly minor, shall be published to the Computer Science Faculty for consideration, discussion, and voting at a CS faculty meeting. Minority reports may be attached to committee proposals by any member of the committee.\nMember Responsibilities:\nCommittee Chair:\u00a0The Department Chair will appoint The Chair of the Committee. The Committee chair shall call meetings, assign individuals to sub-committees, and establish procedures and guidelines for the assessment of individual topics assigned to the subcommittees.\nCommittee Members:\u00a0Each person assigned as a member of the committee shall participate in meetings called by the Chair of the Committee. It is the responsibility of each member to make recommendations to the committee on potential curriculum modifications and to keep abreast of current computer science and university curricula. Each committee member shall have voting rights on items of debate during committee meetings. Each committee member shall be afforded an equal opportunity to discuss matters during regular committee meetings. A majority vote of all members of the committee is required on all actions recommended for adoption by the department, except that 2/3 supermajority of all members of the committee is required to modify this Organization and Charter document.\nPolicy Generation:\u00a0In order to foster respect for the proposals generated by this committee, the following procedural guidelines will be followed:\nThe committee will maintain a well publicized method via which members of the department may make requests and recommendations regarding curriculum changes. Specifically, a textbook change request form will be provided on the department web site. Faculty may send email to the chair of the committee with suggestions for curriculum changes. Committee meeting times and locations will be announced to the faculty and advising staff via email well in advance of such meetings and attendance is open to all.\nPrior to the formal submission of proposed significant changes to the Chair and faculty for consideration, the committee will publish to the faculty and advising staff, in a regular and well publicized manner, a draft proposal or proposals. The committee shall then allow a minimum of 10 working days for consideration and comment. Thereafter, a further meeting shall be held to discuss the concerns of the Computer Science community and, if possible, a final vote taken.\nCoincident with the submission (in writing) of formal proposals (and any minority reports) to the Chair and faculty for consideration, the formal proposal shall be published to the advising staff and student ACM representative for consideration and comment.\nOther Committee Duties and Responsibilities:\u00a0Apart from addressing ongoing concerns brought up by the Department Chair and faculty regarding the\u00a0graduate curriculum, the committee shall also have routine responsibilities as described below:\nYearly Review:\u00a0Each year, the committee will meet within the first 30 days of the fall term and review the current state of the\u00a0graduate curriculum, with a a focus on currency of the program within the context of the ever-changing field of computer science. Discussion of any proposed curriculum changes by the committee itself and of faculty suggestions of which committee members are aware will also be brought forward at this time.\n", "document_id": 144173}]}, {"paragraphs": [{"qas": [], "context": "FSU | Academic Program Guide\nSkip to main content\nFlorida State University\n This is your Donation message.\nLog In\nThis Site\nFSU\nSubmit\nAcademics\nAdmissions\nResearch\nFaculty\nStudents\nAlumni and Friends\nVeterans\nGiving\nAcademic Program Guide\nToggle navigation\nSite Menu\nHome\nMinors\nMajor Comparisons\nCertificates/Specialized Studies\nBachelors/Masters Programs(current)\nLiberal Studies\n  A-Z List\nComputer Programming and Applications (BA)  College: Arts and Sciences Degree: BA Limited Access: Yes  Contact: Lauren Higbee (Main campus) Address: 203C Love Building Tallahassee, FL 32306-4530 Phone: (850) 644-8700 Email: advisor@cs.fsu.edu Contact: Distance Learning - FSU Panama City Advising Address: C117 Holley Academic Center, Panama City, FL 32405 Phone: (850) 770-2288 Email: advising@pc.fsu.edu Description of Major  \nThis major provides a broad-based background sufficient for entry to a career in computing. It provides an applications view of computing, emphasizing the interdependence of programming, object orientation, and software design and engineering. This major develops core competencies in programming, data structures, software engineering, and computer organization. It allows opportunities to study a range of other aspects of computer and information science, such as web programming, mobile programming, cybersecurity, digital forensics, databases and data engineering, data communication and networks, computer and network systems administration, computer systems, and theoretical computer science. Every student can expect to become proficient at programming in C++/C, and Assembly Language. Additionally, students may be exposed to other languages such as Java, Python, C#, Objective-C, SQL, JavaScript, PHP, CSS, HTML, and Scheme. This major is available on the Tallahassee campus only.\nThis major is intended to allow students flexibility in combining computing with other interests. This major requires 9 hours of humanities/history beyond General Education requirements. Students in this program should meet with an advisor to select a minor from an approved list. The Computer Programming and Applications major is not ABET/CAC accredited and is not intended to provide sufficient preparation in computer science theory for graduate work in computer science. \n*Note to prospective transfer students: Prospective transfer students should contact as-admissions@fsu.edu (Arts & Sciences Admissions) with specific questions about admission and mapping requirements.\nInternet Supported Distance Learning\nThe programs available through internet-supported distance learning are degree programs that enable students with an Associate in Arts (A.A.) degree from a Florida public institution to earn an FSU bachelor\u2019s degree without moving to Tallahassee. The programs are designed for part time study. Each student receives access to a course Web site and the e-mail addresses of everyone associated with the class. A unique feature of the distance learning programs is the support FSU provides through an assigned Mentor. Mentors serve as learning guides, helping to facilitate each individual student\u2019s success. Students interact with each other, their Mentors, and their instructors via e-mail, Web-based discussion pages, and telephone calls. Students interested in Distance Learning should contact the Office of Distance Learning (ODL). For more information contact (877) FLSTATE or visit the web at https://distance.fsu.edu. Prerequisite Coursework  \nMAC X311 (3) Calculus I \nNote: State-wide common prerequisites are always under review. For the most current information and for acceptable alternative courses, visit the \u201cCommon Prerequisites Manual.\u201d This is available from the \u201cStudent Services\u201d section of http://www.flvc.org . \n Requirements \nRequirements for graduation in the College of Arts and Sciences include:\nThe College of Arts and Science requires proficiency in a foreign language through the intermediate (2220 or equivalent) level or sign language through the advanced (2614 or equivalent) level.\nAdmissions/Continuation Requirements to the Major Program of Studies:\nStudents should complete the prerequisite coursework with a grade of C minus or higher to be considered for entrance to the major program of study. Students must also have completed a minimum of 52 hours of credit and at least half the required hours in General Education requirements, including required two English and two mathematics, or an A.A degree.\n*The undergraduate programs in computer science are limited access*,requiring a minimum 2.65 all college-level work attempted GPA for formal admission. All State Common Program Prerequisites listed as Term 1-4 milestones must be completed with a \"C\" range (C minus, C, or C+) grade or better. Students earning less than the necessary grade in any of these courses will be required to retake those courses until the standard is met.\nNote: retaking a course may delay graduation and incur increased fee liability (i.e., repeat course surcharge and excess credit surcharge).\nUpon formal admission into the program, the student must:\n\u2022\tcomplete all courses required for the major with a grade of \"C minus\" or better;\n\u2022\tmaintain a 2.50 all-college-level-work-attempted GPA, excluding the Term 1-4 State Common Prerequisites milestone courses;\n\u2022\tnot receive more than 3 unsatisfactory grades combined in Programming I (COP 3363  or COP 3014) and Data Structures I (COP3330);\n\u2022\tnot accumulate more than 5 unsatisfactory grades (U, F, D minus, D, or D+) in courses required for the major, excluding the Term 1-4 State \n        Common Prerequisites milestone courses, taken after entering the program.\nMajor Program of Studies at FSU: (52 hours)\nComputer and math courses: (16-17 hours)\n COP 3363 (3) Introduction to C++ for majors OR both COP 3014 (3) Programming I and COP 3353 (1) Introduction to UNIX \nCOP 3330 (3) Data Structures, Algorithms, and Generic Programming I\nCOP 4530 (3) Data Structures, Algorithms, and Generic Programming II\nCDA 3100 (3) Computer Organization I\nCEN 4020 (3) Software Engineering I\nCEN 4090L (1) Software Engineering Capstone\nComputer Science electives: (24 hours)\nIncluding 6 hours of an upper-division programming language elective (not presented in the required course offerings) and at least 21 hours numbered above 3000. Elective courses must be taken through the Department of Computer Science.\nAdditional courses required for the major: (12 hours)\nMAD 2104 (3) Discrete Mathematics I, plus\nNine (9) hours in the fields of humanities and/or history, in addition to the General Education requirements and the Arts and Sciences foreign language requirement.\nMinor: Students must complete a minimum of 12 hours in an approved minor area.\nComputer Skills Competency: 0 hours beyond major. \nCOP 3363 or COP 3014 meets this requirement for majors \nOral Communication Competency: 0-3 hours. \nStudents must demonstrate the ability to orally transmit ideas and information clearly. This requirement is met through a college-level approved course, such as SPC 1017 or SPC 2608.\n Students taking CIS 3250 or any GE Ethics course may take CIS 3250L (1) Ethics & CS lab to satisfy this requirement\nMinimum Program Requirements - Summary\nTotal Hrs. Required 120\nGeneral Education 36*\nPrerequisite Coursework 4*\nBA Major Coursework 52\nMinor Coursework 0-12 or more\nForeign Language 0-12 (depending on placement)\nComputer Skills 0 beyond major\nOral Communication Competency 0-3\nElectives to bring total hours to 120\n*Note: Some prerequisite coursework may also be applied to General Education requirements in math and science.\n Mapping                                                                                                                                                                    Mapping is FSU\u2019s academic advising and monitoring system. Academic progress is monitored each Fall and Spring semester to ensure that students are on course to earn their degree in a timely fashion. Transfer students must meet mapping guidelines to be accepted into their majors. You may view the map for this major at www.academic-guide.fsu.edu.                Remarks                                                                                                                                                                 1. A minimum of 45 hours at the 3000 level or above, 30 of which must be taken at this University.\n2. Half of the major course semester hours must be completed in residence at this University.\n3. The final 30 hours must be completed in residence at this University.\n4. The B. A. degree requires nine (9) additional hours in the fields of history and humanities. \n Employment Information  Salary Information: For more information go to: National Association of Colleges and Employers (www.naceweb.org) or the Occupational Outlook Handbook (www.bls.gov/ooh/home.htm) provided by the U.S. Bureau of Labor Statistics.\nRepresentative Job Titles Related to this Major: Programmer (Scientific, Business, Systems), Technical Writer, Systems Analyst, Operations-Research analyst, Software Engineer, Webmaster, Teacher of High School, Technical support Representative, Manager, Data Processing System Manager, Network Administrator, Sales Representative for Computer or Software Manufacturers.\nRepresentative Employers: Computer Firms, High Schools, Colleges and Universities, Financial Firms, Private Industry, Governmental Agencies. \nView Computer Programming and Applications (BA) Academic Map\n\u00a9 2015 Florida State University\n\t\t\t600 W. College Avenue\n\t\t\tTallahassee, FL 32306\nQuestions or Comments\nPrivacy Policy\nCopyright\nFSU Directory Assistance:\n\t\t\t850-644-2525\n", "document_id": 144154}]}, {"paragraphs": [{"qas": [{"question": "What will I learn with the Computer Science BS?", "id": 154654, "answers": [{"answer_id": 218461, "document_id": 144156, "question_id": 154654, "text": "It allows opportunities to study a range of other aspects of computer and information science, such as information security, data communication/ networks, computer and network systems administration, theoretical computer science, and software engineering.", "answer_start": 1183, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "FSU | Academic Program Guide\nSkip to main content\nFlorida State University\n This is your Donation message.\nLog In\nThis Site\nFSU\nSubmit\nAcademics\nAdmissions\nResearch\nFaculty\nStudents\nAlumni and Friends\nVeterans\nGiving\nAcademic Program Guide\nToggle navigation\nSite Menu\nHome\nMinors\nMajor Comparisons\nCertificates/Specialized Studies\nBachelors/Masters Programs(current)\nLiberal Studies\n  A-Z List\nComputer Science (BS)  College: Arts and Sciences Degree: BS Limited Access: Yes  Contact: Lauren Higbee Address: 203 Love Building Tallahassee, FL 32306-4530 Phone: (850) 644-8700 Email: advisor@cs.fsu.edu Contact: Distance Learning - FSU Panama City Advising Address: C117 Holley Academic Center, Panama City, FL 32405 Phone: (850) 770-2288 Email: advising@pc.fsu.edu Description of Major This major provides a broad-based background sufficient for entry to a career in computing. It provides a systems view of computing, emphasizing the interdependence of design, object orientation, and distributed systems and networks, from basic software through systems design. This major develops core competencies in programming, database structure, computer organization, and operating systems. It allows opportunities to study a range of other aspects of computer and information science, such as information security, data communication/ networks, computer and network systems administration, theoretical computer science, and software engineering. Every student can expect to become proficient at programming in C, C++, and Assembly Language. Additionally, students may be exposed to other languages such as Java, C#, Ada, Lisp, Scheme, Perl, and HTML. This major is available on campus or through Distance Learning.\nThe coursework required for this major includes a collateral interdisciplinary minor. It is ABET/CAC accredited and is intended to be sufficient for entry to a graduate program in computer science.    \nNote to prospective transfer students. Prospective transfer students should contact as-admissions@fsu.edu (Arts & Sciences Admissions) with specific questions about admission and mapping requirements.  \nInternet Supported Distance Learning\nThe programs available through internet-supported distance learning are degree programs that enable students with an Associate in Arts (A.A.) degree from a Florida public institution to earn an FSU bachelor\u2019s degree without moving to Tallahassee. The programs are designed for part time study. Each student receives access to a course Web site and the e-mail addresses of everyone associated with the class. A unique feature of the distance learning programs is the support FSU provides through an assigned Mentor. Mentors serve as learning guides, helping to facilitate each individual student\u2019s success. Students interact with each other, their Mentors, and their instructors via e-mail, Web-based discussion pages, and telephone calls. Students interested in Distance Learning should contact the Office of Distance Learning (ODL). For more information contact (877) FLSTATE or visit the web at https://distance.fsu.edu  .            Prerequisite Coursework  \nBS program in Computer Science\nThe following must be completed with a grade of C minus or higher. \nThese courses may be taken as part of General Education requirements or as general electives:\nCOP XXXX (3) Introductory Programming in C, C++, JAVA or equivalent language (C++ preferred)\nXXX XXXX (2-4) One science course for science majors (contact department for a list of acceptable courses)\nMAC X311 (4) Calculus I\nMAC X312 (4) Calculus II\nOne of the following series:\nPHY X048C (4-5) General Physics A with lab and PHY X049C (4-5) General Physics  B or with lab, or\n* BSC X010 (3) and BSC X011(3) and CHM X045C (4)\n* Students selecting this option may satisfy the \u201cOne science course\u201d requirement by completing BSC X010L and BSC X011L.\nNote: State-wide common prerequisites are always under review. For the most current information and for acceptable alternative courses, visit the \u201cCommon Prerequisites Manual.\u201d This is available from the \u201cStudent Services\u201d section of http://www.flvc.org .                 Requirements  \nRequirements for graduation in the College of Arts and Sciences include: \nThe College of Arts and Science requires proficiency in a foreign language through the intermediate (2220 or equivalent) level or sign language through the advanced (2614 or equivalent) level. Foreign language courses are not available via distance learning at FSU.\nAdmissions/Continuation Requirements to the Major Program of Studies \nStudents should complete the prerequisite coursework with a grade of C minus or higher to be considered for entrance to the major program of study. Students must also have completed a minimum of 52 hours of credit and at least half the required hours in General Education requirements, including required two English and two mathematics, or an A.A degree.\nDistance Learning students must complete the A.A. from a Florida public institution, required prerequisites, and a Supplemental Admissions Application prior to admission. Distance Learning students should also complete the oral competency requirement and the College of Arts and Sciences foreign language requirement prior to admissions. In accordance with the University residency rule, degree requirements not available online must be completed prior to the final 30 hours of the degree.\n*The undergraduate programs in computer science are limited access*, requiring a minimum 2.65 all college-level work attempted GPA for formal admission. All State Common Program Prerequisites listed as Term 1-4 milestones must be completed with a \"C\" range (C minus, C, or C+) grade or better. Students earning less than the necessary grade in any of these courses will be required to retake those courses until the standard is met.\nNote: retaking a course may delay graduation and incur increased fee liability (i.e., repeat course surcharge and excess credit surcharge).\nUpon formal admission into the program, the student must:\n\u2022\tcomplete all courses required for the major with a grade of \"C minus\" or better;\n\u2022\tmaintain a 2.50 all-college-level-work-attempted GPA, excluding the Term 1-4 State Common Prerequisites milestone courses;\n\u2022\tnot receive more than 3 unsatisfactory grades combined in Programming I (COP3363 or COP3014) and Data Structures I (COP3330);\n\u2022\tnot accumulate more than 5 unsatisfactory grades (U, F, D minus, D, D+) in courses required for the major, excluding Term 1-4 State Common Prerequisites milestone courses, taken after enrolling entering the program.\nMajor Program of Studies at FSU: (60 hours)\nComputer Science courses: (28-29 hours)\nCOP 3363 (3) Introduction to C++ for majors OR both COP 3014 (3) Programming I and COP 3353 (1) Introduction to UNIX \nCOP 3330 (3) Data Structures, Algorithms, and Generic Programming I\nCDA 3100 (3) Computer Organization I\nCEN 4020 (3) Software Engineering I\nCEN 4090L (1) Software Engineering Capstone\nCIS 3250 (3) Ethics in Computer Science \nCOP 4610 (3) Operating Systems & Concurrent Programming\nCOP 4530 (3) Data Structures, Algorithms, and Generic Programming II\nCOP 4521(3) Secure Parallel & Distributed Programming w/ Python\nCOT 4420 (3) Theory of Computation\nComputer Science electives: (23 hours)\nAt least twenty-three semester hours of computer science electives (up to two semester hours can be CIS 4900r), at least fifteen of which must be at the 4000 level (excluding CIS 4900r). \nOne of the 4000-level computer science electives may be replaced with an advanced math elective (which must be a mathematics or statistics course with Calculus II (MAC 2312) or Discrete Mathematics II (MAD 3105) as a prerequisite). \nAdditional courses required for the BS program in Computer Science: (9 hours)\nMAD 2104 (3) Discrete Mathematics I\nMAD 3105 (3) Discrete Mathematics II\nSTA 4442 (3) Introduction to Probability (may substitute STA 4321 or STA 3032)\nMinor: (0 hours beyond major)\nThe required collateral courses in mathematics, natural science, and statistics constitute an acceptable interdisciplinary minor for students in this major.\nComputer Skills Competency: (0 hours beyond major)\nCOP 3363 (3) Intro to Programming or COP 3014 (3) Programming I \nOral Communication Competency: (0-3 hours beyond major) \nStudents must demonstrate the ability to orally transmit ideas and information clearly. This requirement is met through a college-level approved course, such as SPC 1017 or SPC 2608 (3). Students taking CIS 3250 or any GE Ethics course may take CIS 3250L (1) Ethics & CS lab to satisfy this requirement.\nMinimum Program Requirements \u00adSummary\nTotal Hrs. Required 120\nGeneral Education 36*\nBS Prerequisite Coursework 23*\nBS Major Coursework 60\nMinor Coursework 0-12 or more\nForeign Language 0-12 (depending on placement)\nComputer Skills 0 beyond major\nOral Communication Competency 0-3\nElectives to bring total hours to 120\n*Note: Some prerequisite coursework may also be applied to General Education requirements in math and science. Mapping                                                                                                                                                                                                                 Mapping is FSU\u2019s academic advising and monitoring system. Academic progress is monitored each Fall and Spring semester to ensure that students are on course to earn their degree in a timely fashion. Transfer students must meet mapping guidelines to be accepted into their majors. You may view the map for this major at www.academic-guide.fsu.edu.                 Remarks                                                                                                                                                                                                                 1. A minimum of 45 hours at the 3000 level or above, 30 of which must be taken at this University.\n2. Half of the major course semester hours must be completed in residence at this University.\n3. The final 30 hours must be completed in residence at this University.                 Employment Information  Salary Information: For more information go to: National Association of Colleges and Employers (www.naceweb.org) or the Occupational Outlook Handbook (www.bls.gov/ooh/home.htm) provided by the U.S. Bureau of Labor Statistics.\nRepresentative Job Titles Related to this Major: Programmer (Scientific, Business, Systems), Technical Writer, Systems Analyst, Operations-Research analyst, Software Engineer, Webmaster, Teacher of High School, Technical support Representative, Manager, Data Processing System Manager, Network Administrator, Sales Representative for Computer or Software Manufacturers.\nRepresentative Employers: Computer Firms, High Schools, Colleges and Universities, Financial Firms, Private Industry, Governmental Agencies.                View Computer Science (BS) Academic Map\n\u00a9 2015 Florida State University\n\t\t\t600 W. College Avenue\n\t\t\tTallahassee, FL 32306\nQuestions or Comments\nPrivacy Policy\nCopyright\nFSU Directory Assistance:\n\t\t\t850-644-2525\n", "document_id": 144156}]}, {"paragraphs": [{"qas": [{"question": "How does the FSU-Teach major work?", "id": 154668, "answers": [{"answer_id": 218475, "document_id": 144158, "question_id": 154668, "text": "FSU-Teach majors are first admitted into their primary, discipline-specific major and must meet the statewide common program prerequisites for that major, in this case, the Bachelor of Arts Computer Science degree program. Later, students apply for admission into a secondary major within the College of Education called Secondary STEM Teaching (STEMTEACH). Upon graduation, students are awarded the B.A. degree with majors in FSU-Teach/Computer Science - Math and STEM Teaching.", "answer_start": 1891, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "FSU | Academic Program Guide\nSkip to main content\nFlorida State University\n This is your Donation message.\nLog In\nThis Site\nFSU\nSubmit\nAcademics\nAdmissions\nResearch\nFaculty\nStudents\nAlumni and Friends\nVeterans\nGiving\nAcademic Program Guide\nToggle navigation\nSite Menu\nHome\nMinors\nMajor Comparisons\nCertificates/Specialized Studies\nBachelors/Masters Programs(current)\nLiberal Studies\n  A-Z List\nFSU - Teach Computer Science-Math  College: Arts and Sciences  Degree: B.A. Limited Access: Yes  Contact: Dr. David Whalley and Lauren Higbee Address: Dept of Computer Science, Tallahassee, FL 32306-4530  Dr. Whalley: Love 160, Ms. Higbee: Love 203C Phone: Dr.Whalley:(850)644-3506, Ms. Higbee:(850)644-8700 Email: whalley@cs.fsu.edu or lhigbee@fsu.edu Contact: Dr. Robin R. Smith with FSU Teach Address: 209 Carothers Hall, FSU, Tallahassee, FL 32306-448 Phone: (850) 645-8927  Email: smith@bio.fsu.edu Description of Major                                                                                                                                                 FSU-Teach is an innovative approach to teacher education that involves collaboration between scientists, mathematicians and education faculty at Florida State University. Computer Science students in the FSU-Teach program will develop their technical knowledge and programming skills as well as gain valuable experience needed to be an effective Mathematics teacher. Computer Science coursework will include coursework in mathematics appropriate to Computer Science, programming, database systems, operating systems, and fundamental algorithms. The program will pay for tuition for the first two Education/Teaching prerequisite courses. Part time positions with scientists, mathematicians and local schools are available. For more information, see our web site, http://fsu-teach.fsu.edu/ . \nThis is a double-major only program. FSU-Teach majors are first admitted into their primary, discipline-specific major and must meet the statewide common program prerequisites for that major, in this case, the Bachelor of Arts Computer Science degree program. Later, students apply for admission into a secondary major within the College of Education called Secondary STEM Teaching (STEMTEACH). Upon graduation, students are awarded the B.A. degree with majors in FSU-Teach/Computer Science - Math and STEM Teaching.\nNote to prospective transfer students: Prospective transfer students should contact as-admissions@fsu.edu (Arts & Sciences Admissions) with specific questions about admission and mapping requirements.  Prerequisite Coursework                                                                 Students must complete the following prerequisites required for admission in preparation for the upper division major. All of the following may also apply toward major and/or Liberal Studies requirements.\nMAC 2311 (4) Calculus I\nSTA 2122 (3) Introduction to Applied Statistics\nSMT X043 (1) Inquiry Approach to Teaching (Step 1)\nSMT X053 (1): Inquiry Based Lesson Design (Step 2)\nTransfer students will be able to take SMT 1043 and SMT 1053 while enrolled at FSU. \nNote: Statewide common prerequisites are always under review. For the most current information and for acceptable alternative courses, visit the \u201cCommon Prerequisites Manual.\u201d This is available from the \u201cStudent Services\u201d section of http://www.flvc.org.\n Requirements \nRequirements for graduation in the College of Arts and Sciences include: \nThe College of Arts and Sciences requires proficiency in a foreign language through the intermediate (2220 or equivalent) level or sign language through the advanced (2614 or equivalent) level.\nAdmissions/Continuation Requirements to the Major Program of Studies\nTo be recognized as \u201cformally admitted\u201d into this major, students must meet the following requirements: \n1) certification to upper division (or transfer admission into the program as a junior); \n2) completion of 18 hours of General Education courses or an AA; \n3) satisfactory completion of \u201cStep 1\u201d and \u201cStep 2\u201d prerequisite courses; \n4) a cumulative GPA of at least a 2.50; \n5) completion of all the common prerequisite courses for the major; and \n6) a passing score on all four parts of the FTCE General Knowledge Test. \nOnce these are complete, the student must apply to Educator Preparation online at https://fsu.qualtrics.com/jfe/form/SV_0kqpP1dhZaBXJ3f .\nLimited Access Policy in Computer Science\n*The undergraduate programs in computer science are limited access.* The CS-Math/FSU-Teach  major requires a minimum 2.50 all college-level work attempted GPA for formal admission. All State Common Program Prerequisites listed as Term 1-4 milestones must be completed with a \"C\" range (C minus, C, or C+) grade or better. Students earning less than the necessary grade in any of these courses will be required to retake those courses until the standard is met. \nNote: retaking a course may delay graduation and incur increased fee liability (i.e., repeat course surcharge and excess credit surcharge).\nUpon formal admission into the program, the student must:\n\u2022\tcomplete all courses required for the major with a grade of \"C minus\" or better;\n\u2022\tmaintain a 2.5 all-college-level-work-attempted GPA, excluding the Term 1-4 State Common Prerequisites milestone courses;\n\u2022\tnot receive more than 3 unsatisfactory grades combined in Programming I (COP3363 or COP3014) and Data Structures I (COP3330);\n\u2022\tnot accumulate more than 5 unsatisfactory grades (U, F, D minus, D, D+) in courses required for the major, excluding Term 1-4 State Common Prerequisites milestone courses, taken after enrolling at FSU.\nMajor Program of Studies at FSU: (73-74 hours)\nComputer Science courses: (27-28 hours)\nCOP 3014 (3) Programming I and COP 3353 (1) Introduction to UNIX OR COP 3363 (3) Introduction to C++ for majors\nCOP 3330 (3) Data Structures, Algorithms, and Generic Programming I\nCDA 3100 (3) Computer Organization I\nCEN 4020 (3) Software Engineering I\nCOP 4530 (3) Data Structures, Algorithms, and Generic Programming II\nCOP3252 (3) Java Programming\nCXX 4XXX (3) Computer Science 4000 Elective\nCXX 4XXX (3) Computer Science 4000 Elective\nMAD 2104 (3) Discrete Mathematics I\nFSU-Teach courses: (37 hours)\nMAC 2312 (4) Calculus II\nMAS 3105 (3) Linear Algebra\nMTG 4212 (3) College Geometry\nMAT 3505 (3) Functions and Modeling\nSMT 3100 (3) Knowing and Learning\nSMT 4664 (3) Project Based Instruction\nSMT 4930 and SMT 4945 (6) Apprenticeship Teaching\nHIS 3505 (3) Perspectives on Science and Math*\nISC 3523C (3) Research Methods\nRED 4335 (3) Content Area Reading\nTSL 4324 (3) ESOL Instruction**\n*HIS 3505 fulfills a General Education requirement in History and is an Upper Division Writing course.\n**TSL 4324 is a Formative Experience Course\nAdditional courses required for the BA program in Computer Science: (9 hours) \nNine (9) hours in the fields of humanities and/or history, in addition to the General Education requirements and the Arts and Sciences foreign language requirement.\nMinor: (0 hours beyond major)\nNo minor is required since this is considered a double major program.\nComputer Skills Competency: (0 hours beyond major)\nSatisfied by COP 3014 (3) Programming I or COP 3363 (3) Introduction to Programming\nOral Communication Competency: (0 hours beyond major)\nSatisfied by SMT 4664 (3) Project Based Instruction\nMinimum Program Requirements Summary\nTotal Hrs. Required 120\nGeneral Education 36*\nPrerequisite Coursework 9* \nMajor Coursework 73-74\nForeign Language 0-12 (depending on placement) \nComputer Skills 0 beyond major\nOral Communication Competency 0 beyond major \nElectives to bring total hours to 120\n*Note: Some prerequisite coursework may also be applied to General Education requirements. Mapping                                                                                                                                                 Mapping is FSU\u2019s academic advising and monitoring system. Academic progress is monitored each Fall and Spring semester to ensure that students are on course to earn their degree in a timely fashion. Transfer students must meet mapping guidelines to be accepted into their majors. You may view the map for this major at www.academic- guide.fsu.edu.               Remarks                                                                                                                                                 1.\tA minimum of 45 hours at the 3000 level or above, 30 of which must be taken at this University.\n2.\tHalf of the major course semester hours must be completed in residence at this University.\n3.\tThe final 30 hours must be completed in residence at this University.\n4.\tThe B. A. degree requires nine (9) additional hours in the fields of history and humanities\n Employment Information  Salary Information: For more information go to: National Association of Colleges and Employers (www.naceweb.org) or the Occupational Outlook Handbook (www.bls.gov/ooh/home.htm) provided by the U.S. Bureau of Labor Statistics.\nRepresentative Job Titles Related to this Major: Middle school or high school teacher. In addition, students may pursue careers appropriate for those with a strong background in science and math.\nRepresentative Employers: Public and private schools, research facilities, government agencies; private industry.\nView FSU - Teach Computer Science-Math Academic Map\n\u00a9 2015 Florida State University\n\t\t\t600 W. College Avenue\n\t\t\tTallahassee, FL 32306\nQuestions or Comments\nPrivacy Policy\nCopyright\nFSU Directory Assistance:\n\t\t\t850-644-2525\n", "document_id": 144158}]}, {"paragraphs": [{"qas": [{"question": "What GPA do you need to get into the BA in Computer Science", "id": 93580, "answers": [{"answer_id": 104655, "document_id": 144160, "question_id": 93580, "text": " Students must earn a 2.65 GPA to be accepted into the program ", "answer_start": 2028, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "FSU | Academic Program Guide\nSkip to main content\nFlorida State University\n This is your Donation message.\nLog In\nThis Site\nFSU\nSubmit\nAcademics\nAdmissions\nResearch\nFaculty\nStudents\nAlumni and Friends\nVeterans\nGiving\nAcademic Program Guide\nToggle navigation\nSite Menu\nHome\nMinors\nMajor Comparisons\nCertificates/Specialized Studies\nBachelors/Masters Programs(current)\nLiberal Studies\n  A-Z List\nComputer Science (BA) ACADEMIC MAP (Effective Summer 2021 and after)\nThis map is a term-by-term sample course schedule. The milestones listed to the right of each term are designed to keep you on course to graduate in four years. The Sample Schedule serves as a general guideline to help you build a full schedule each term. The General Education and Elective courses must be selected to satisfy all area and multicultural requirements unless your program meets these requirements with major courses. Milestones are courses and special requirements necessary for timely progress to complete a major. Missing milestones will result in one of two types of map registration stops. The first level (Degree Map Off-track) is placed following grade posting if the student has missed a milestone (course and/or GPA) for the first time in the major. If a student is in non-compliance with milestones for two (2) consecutive semesters (excluding summers), a Major Change Required stop is placed on the student's registration.\nThe Computer Science BA program is designed to prepare students for employment in the computer programming field. Though less math/science oriented than the Bachelors of Science major, the CS/BA major provides a broad background in programming skills, database structure, and computer organization. A student can expect to become proficient at programming in C, C++, and Assembly Language and will have the opportunity to learn other languages as Java, C#, and HTML. As a BA program, participants will need complete 9 hours of humanities/history beyond General Education requirements. \nThis program is limited access. Students must earn a 2.65 GPA to be accepted into the program and must then maintain a minimum GPA of 2.50 to remain in good standing.\n Mapping Coordinator: Shellie Camp  Email: scamp@fsu.edu Sample Schedule Term 1 hrs ENC1101 Freshman Composition3MAC1105 College Algebra3GE Core Social Science3GE History3Elective3Milestones 1Complete ENC1101 ( \u2265 C minus )Complete 1st GE Mathematics ( \u2265 C minus )Term 2 hrs ENC2135 Research, Genre, and Context 3MAC1140 Pre-Calculus Algebra 3GE Core Natural Science with Lab4GE Core Humanities/Cultural Practice3Milestones 2Complete ENC2135 ( \u2265 C minus )Complete MAC 1140 ( \u2265 C minus )Minimum Overall GPA \u2265 2.50Term 3 hrs COP3363 Introduction to C++ for majors or COP3014 Programming I3MAC1114 Analytic Trigonometry3GE Social Science3GE Natural Science3COP3353 Introduction to UNIX (if COP3014 is taken instead of COP 3363)1Minor course3Milestones 3Complete MAC 1114 ( \u2265 C minus )Term 4 hrs MAC2311 Calculus with Analytic Geometry I4MAD2104 Discrete Mathematics 3CDA3100 Computer Organization I3COP 3330 Data Structures, Algorithms, and Genetic Programming I3Oral Competency1-3Milestones 4Complete MAC 2311 ( \u2265 C minus )Minimum Overall GPA \u2265 2.65Summer hrs GE Humanities/Cultural Practice3Term 5 hrs COP4530 Data Structures, Algorithms and Generic Programming II3Foreign Language I4CS Elective3CS Elective3Milestones 5Complete COP3363 or COP 3014 ( \u2265 C minus )Recommend beginning Foreign Language requirementMinimum Overall GPA \u2265 2.50 after formally admittedCivic Literacy requirementTerm 6 hrs COP 4521 Secure Parallel & Distr. Computing w/ Python3Foreign Language II4CS Elective3CS Elective3Milestones 6Complete MAD2104 ( \u2265 C minus )Overall GPA \u2265 2.50Term 7 hrs CEN4020 Software Engineering I3CEN 4090L Software Eng. Capstone1Foreign Language III4GE Ethics3Minor course3Milestones 7Complete CDA3100 ( \u2265 C minus )Complete Pre-Graduation CheckOverall GPA \u2265 2.50Term 8 hrs COP4610 Operating Systems & Concurrent Programming3CS Elective3Minor course3Minor course3Elective3Milestones 8Apply for graduation in 1st two weeksOverall GPA \u2265 2.50 Employment Information Representative Job titles Related to this Major: Programmer (Scientific, Business, Systems), Technical Writer, Systems Analyst, Operations-Research analyst, Software Engineer, Webmaster, Teacher of High School, Technical Support Representative, Manager, Data Processing System Manager, Network Administrator, Sales Representative for Computer or Software Manufacturers.\nRepresentative Employers: Computer Firms, High Schools, Colleges and Universities, Financial Firms, Private Industry, Governmental Agencies. \nInternational Opportunities: International study is available for all students and may include opportunities for internships or taking course work towards various majors and minors. International study may have an impact on the MAP; therefore, it is important to consult with the academic advisor before participating. Interested students can find information about international study, research, internships, and service opportunities at: global.fsu.edu/undergraduate-students/going-abroad. \n This Map is not a contract, either expressed or implied, between the University and the student, but represents a flexible program of the current curriculum which may be altered from time to time to carry out the academic objectives of the University. The University specifically reserves the right to change, delete or add to any Map at any time within the student\u2019s period of study at the University. View Computer Science (BA) Program Guide\n\u00a9 2015 Florida State University\n\t\t\t600 W. College Avenue\n\t\t\tTallahassee, FL 32306\nQuestions or Comments\nPrivacy Policy\nCopyright\nFSU Directory Assistance:\n\t\t\t850-644-2525\n", "document_id": 144160}]}, {"paragraphs": [{"qas": [{"question": "What happens the first time you miss a milestone?", "id": 154690, "answers": [{"answer_id": 218497, "document_id": 144162, "question_id": 154690, "text": "The first level (Degree Map Off-track) is placed following grade posting if the student has missed a milestone (course and/or GPA) for the first time in the major. ", "answer_start": 1087, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "FSU | Academic Program Guide\nSkip to main content\nFlorida State University\n This is your Donation message.\nLog In\nThis Site\nFSU\nSubmit\nAcademics\nAdmissions\nResearch\nFaculty\nStudents\nAlumni and Friends\nVeterans\nGiving\nAcademic Program Guide\nToggle navigation\nSite Menu\nHome\nMinors\nMajor Comparisons\nCertificates/Specialized Studies\nBachelors/Masters Programs(current)\nLiberal Studies\n  A-Z List\nCyber Criminology (Computer Science) ACADEMIC MAP (Effective Summer 2021 and after)\nThis map is a term-by-term sample course schedule. The milestones listed to the right of each term are designed to keep you on course to graduate in four years. The Sample Schedule serves as a general guideline to help you build a full schedule each term. The General Education and Elective courses must be selected to satisfy all area and multicultural requirements unless your program meets these requirements with major courses. Milestones are courses and special requirements necessary for timely progress to complete a major. Missing milestones will result in one of two types of map registration stops. The first level (Degree Map Off-track) is placed following grade posting if the student has missed a milestone (course and/or GPA) for the first time in the major. If a student is in non-compliance with milestones for two (2) consecutive semesters (excluding summers), a Major Change Required stop is placed on the student's registration.\nThe interdisciplinary undergraduate degree in Cyber Criminology will teach students how to use computers to facilitate the study of crime and will study how crimes are accomplished through the use of computers. Students must earn a \u201cC\u201d or better in CCJ2020,  CCJ3011 and CCJ4700 and a C minus or better in all other courses that count toward the major.\nNote: Major code determines graduation requirements and the college within which the student graduates. Mapping Coordinator: Shellie Camp Email: scamp@fsu.edu Sample Schedule Term 1 hrs ENC1101 Freshman Composition3MAC1105 College Algebra3GE Core Social Science3GE Core Humanities/Cultural Practice3GE History3Milestones 1Complete ENC1101 ( \u2265 C minus )Cumulative GPA \u2265 2.00Term 2 hrs ENC2135 Research, Genre, and Context 3MAC1140 Pre-Calculus Algebra 3GE Core Humanities/Cultural Practice3GE Core Natural Science with Lab4CCJ 2020 Introduction to Criminal Justice3Milestones 2Complete ENC2135 ( \u2265 C minus )Complete MAC1105 ( \u2265 C minus )Cumulative GPA  \u2265 2.00Term 3 hrs COP3363 Intro. to Programming in C++ or COP3014 Programming I3MAC 1114Trigonometry3CCJ 3011 Criminology3CJ Elective3COP 3353 Introduction to UNIX (if COP3014 taken)1Milestones 3Complete MAC 1140 ( \u2265 C minus )Cumulative GPA  \u2265 2.00Term 4 hrs CJE3110 Law Enforcement                 3COP 3330 Data Structures, Algorithms, and Genetic Programming I3MAC 2311 Calculus I 3CS Elective3Elective3Milestones 4Complete MAC 1114 ( \u2265 C minus )Cumulative GPA  \u2265 2.00Summer hrs MAD2104 Discrete Mathematics3GE Natural Science3Term 5 hrs CCJ4700 Introduction to Research Methods in Criminology3Oral Communication Competency3Foreign Language I, if needed3CS Elective3Milestones 5Complete MAC 2311 ( \u2265 C minus )Complete COP3363 or COP3014 ( \u2265 C minus )Civic Literacy requirementCumulative GPA  \u2265 2.00Term 6 hrs CIS 4360 Computer Security Fundamentals3Foreign Language II, if needed4CS Elective3CJ Elective3Milestones 6Complete MAD2104 ( \u2265 C minus )Complete COP3330 ( \u2265 C minus )Cumulative GPA  \u2265 2.00Term 7 hrs CIS4385 Cybercrime Detection and Forensics 3 Foreign Language III, if needed4CS Elective3Elective3Milestones 7Complete Two Criminology CoursesCumulative GPA  \u2265 2.00Complete CIS4360 ( \u2265 C minus )Complete Pre-Graduation CheckTerm 8 hrs CCJ 4938 CJ Sys Response to Cyber Cybercrime3CJ Elective4Elective3Elective3Milestones 8Complete Two Criminology CoursesApply for Graduation in 1st two weeksCumulative GPA  \u2265 2.00Complete Foreign Language Proficiency Requirement Employment Information Representative Job Titles Related to this Major: Information technology specialists related to information crime, cyberforensics and computer/network security, security specialist.\nRepresentative Employers: Law enforcement agencies, Consulting, Governmental Agencies, Corporations as security specialists.\nInternational Opportunities: International study is available for all students and may include opportunities for internships or taking course work towards various majors and minors. International study may have an impact on the MAP; therefore, it is important to consult with the academic advisor before participating. Interested students can find information about international study, research, internships, and service opportunities at: global.fsu.edu/undergraduate-students/going-abroad. \nThis Map is not a contract, either expressed or implied, between the University and the student, but represents a flexible program of the current curriculum which may be altered from time to time to carry out the academic objectives of the University. The University specifically reserves the right to change, delete or add to any Map at any time within the student\u2019s period of study at the University. \nView Cyber Criminology (Computer Science) Program Guide\n\u00a9 2015 Florida State University\n\t\t\t600 W. College Avenue\n\t\t\tTallahassee, FL 32306\nQuestions or Comments\nPrivacy Policy\nCopyright\nFSU Directory Assistance:\n\t\t\t850-644-2525\n", "document_id": 144162}]}, {"paragraphs": [{"qas": [], "context": "University, College & Department Rules | Computer Science\n\nUniversity, College & Department Rules\nUniversity & College Rules\nPlease see the  FSU Graduate Bulletin  (hard copy or on-line) for more details. The following are rules that apply from the college &/or university:\nStudents in the thesis master\u2019s program or PhD program must register for thesis/dissertation credits each term in which a substantial amount of work is being done on the the thesis/dissertation, even if the minimum of six (6) semester hours of thesis, or 24 semester hours of dissertation, has already been met. Students who have completed the required course work and who continue to use campus facilities and/or receive faculty supervision but who have not made a final thesis/dissertation submission shall include in the required full-time load two (2) hours of thesis/dissertation. Students who have left the campus must register for at least two (2) semester hours of thesis or dissertation credit per term as long as they are receiving faculty supervision.\nStudents must register for at least one (2) semester hours of thesis or dissertation credit in the final term in which a degree is granted even if ALL the requirements for the degree have been completed in previous semesters. This is to cover the costs of manuscript clearance and final degree clearance. Any work with the major professor, committee members or use of university facilities would require registration for two (2) hours of thesis or dissertation.\nTwelve (12) semester hours per semester constitutes a full-time load for graduate students and fellowship holders in the university. However, nine (9) semester hours is considered a full-time load in the Computer Science department for international students and students with an assistantship. International students must obtain the corresponding form from International Studies to be signed to verify this.\nThe maximum number of hours which a graduate student may carry without special permission is fifteen (15). A heavier load requires approval by the dean.\nStudents who have been out of school (i.e. not registered for) two or more consecutive semesters (including summer) must submit an application for readmission to the readmissions section of the Office of the University Registrar. This application must be submitted at least 60 days prior to the beginning of the term for which readmission is desired.\nInternational students are required to be full-time students fall and spring semesters but not during summer unless summer is the first semester for which they are on campus.\nThe major professor of a doctoral student in candidacy must submit a PhD progress report each year. This can be done via the department by completing this on-line document and submitting it to the CS Director of Graduate Studies. This is completed in January of each year.\nOnce admitted to candidacy, a \u201cDoctoral Supervisory Committee\u201d form and a \u201cAdmission to Candidacy\u201d form must be completed and filed with the department Graduate Coordinator. Such forms are available from the Graduate Coordinator or Director of Graduate Studies.\nA doctoral student must be admitted to candidacy at least six (6) months prior to the granting of the degree.\nThe Office of Graduate Studies requires notification of thesis/dissertation defense two weeks prior to the defense. It further requires that a doctoral student submit a completed copy of the dissertation to the doctoral committee at least four (4) weeks prior to the defense. See GradSpace on Canvas for deadlines.\nAn electronic version of a completed thesis or dissertation must be submitted to the university.\nDuring the first two weeks of the term in which a candidate expects to receive a degree, application should be made for a diploma at the office of the University Registrar. If a candidate previously filed for a diploma but did not receive the degree, the application must be repeated.\nAdditional Department Rules\nThe department extends the University policy about thesis/dissertation hours to include students who are working on a master\u2019s project. Thus, a student who is using University resources or receiving faculty supervision is required to register for at least two (2) hours of project even if the course requirements are complete.\nEach graduate student is required to meet with his or her advisor at least once per semester. The department advising form is to be completed at each such meeting and should be returned to the Graduate Coordinator in 203 Love. The forms will remain in the student\u2019s file until graduation and will be used as part of the graduation check. Advisors and students are advised to keep copies for their records.\nA graduate student is automatically dropped from the graduate program after three or more U\u2019s in any graduate course.\nThe department has a guideline that a student will only receive a S\u00a0(satisfactory) for a CGS5xxx course for an undergraduate prerequisite when the student achieves a B- or better in the equivalent undergraduate course.\nMany fellowships have load requirements that are higher than our departmental requirements. In such cases, the fellowship rules supersede those of the department.\nIt is the responsibility of the major professor of the student doing a project, thesis, or dissertation to submit to the director of graduate studies the names of the major professor and committee members as soon as such committee has been formed. This is necessary before signing up for project, thesis, or dissertation hours.\nMasters students doing the thesis or project option are usually restricted from taking Directed Independent Study courses CIS 5900 and CIS 6900. Rather, such students should take thesis or project hours, respectively.\nA student defending a project, thesis, dissertation or area paper is required to inform the graduate coordinator of the title and date, time and location of the defense at least two (2) weeks prior to the defense.\nIt is not required by the department that the chair of Computer Science sign the signature page of the thesis or dissertation.\nUpon completion of a thesis, project or dissertation, a student must submit an electronic copy of such to the CS department webmaster. Additionally, theses and dissertations must be electronically submitted to the university.\nGraduate studies should be engaged as a full-time endeavor. Students who are supported on a qualifying assistantship are expected to be fully engaged with their studies. Additional employment or activity, especially outside the Program is discouraged to ensure timely completion of one\u2019s degree. Requests for additional or outside, employment or activity will be evaluated for conflicts of interest in accordance with the CBA.\nA PhD CS student cannot be admitted to the MS degree program if they already have a MS in Computer Science or MS in Computer Engineering from another institution. Note that a student must be admitted to the MS program before they can obtain an MS degree.\nPriority for continued departmental support will be given to students who are in good academic standing and are making timely progress towards completion of their degree. A graduate student who has completed all of the requirements for the degree can take additional courses, but will not be eligible for departmental support. Lower priority for support may be given to: (1) MS students who have been in the MS program for 2 full years; (2) PhD students with an MS from another institution who have (a) not passed the qualifying exam after 2 years, (b) not passed the qualifying and preliminary exams after 3 years, and (c) not completed the degree after 5 years; (3) PhD students starting with the BS or completed the MS at FSU who have (a) not passed the qualifying exam after 3 years, (b) not passed the qualifying and preliminary exams after 4 years, and (c) not completed the degree after 6 years.\nALL graduate students must complete an Exit Survey before graduation.\nThe minimum satisfactory progress of a CS PhD student is given at the following link:\nPhD Progress Milestones\n", "document_id": 144172}]}, {"paragraphs": [{"qas": [{"question": "What are the prerequisites for COP 5611?", "id": 89200, "answers": [{"answer_id": 99340, "document_id": 144180, "question_id": 89200, "text": "COP 5611. Advanced Operating Systems (3). Prerequisites: CDA3101, COP4610, and introductory probability or statistics. Design principles of batch, multiprogramming, and time-sharing systems; distributed systems; problems of concurrency.", "answer_start": 16270, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}, {"question": "What are the prerequisites for CEN 5066?", "id": 156915, "answers": [{"answer_id": 221049, "document_id": 144180, "question_id": 156915, "text": "Prerequisite: CAP4730", "answer_start": 4695, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "Graduate Course Descriptions | Computer Science\n\nGraduate Course Descriptions\nDefinition of Prefixes\nCAP \u2013 Computer Applications\nCDA \u2013 Computer Design/Architecture\nCEN \u2013 Computer Engineering Software\nCGS \u2013 Computer General Studies\nCIS \u2013 Computer and Information Systems (special topics)\nCNT \u2013 Computer Networks\nCOP \u2013 Computer Programming (languages, data structures, software systems, operating systems, compiling)\nCOT \u2013 Computer Theory\nSpecial Course Offerings\nThere are various special courses offered every term. Special topics courses may evolve into regularly offered courses if they are successful, but they may also be once-only offerings. The latter is especially true if the enrollment of the first offering is low. To take a look at the special course offerings click  here. \n5000 Level Courses\nCAP 5415 Principles and Algorithms of Computer Vision (3). Prerequisites: COP4530. This course covers the basic computational principles and algorithms to extract information from images and image sequences. Topics include imaging models, linear and non-linear filtering, edge detection, stereopsis and motion estimation, texture modelling, segmentation and grouping, and deformable matching for recognition.\nCAP 5605. Artificial Intelligence (3). Prerequisite: COP4530. Introduction, representing knowledge, controlling attention, exploiting constraints, basic LISP programming, basic graph searching methods, game-playing and dealing with adversaries, understanding vision, theorem proving by computer, computer programs utilizing artificial intelligence techniques.\nCAP 5638. Pattern Recognition (3). Prerequisite: Knowledge of probability and at least one programming language. Application of mathematical tools, in particular, probabilistic, algebraic, and linguistic tools, to problems in pattern recognition and classification. Feature selection procedures, syntactic pattern recognition. Applications of fuzzy set theory to pattern recognition and classification.\nCAP 5726. Introduction to Computer Graphics (3). Prerequisite: COP4530. This course covers fundamental principles and algorithms underlying computer graphics, and also provides a brief introduction to openGL. The course is intended for computer-science graduate students who are interested in computer-graphics related careers or in learning and applying computer-graphics techniques.\nCDA 5125. Parallel and Distributed Systems (3). Prerequisite: COP 4610. This course covers systems issues in parallel and distributed systems. Topics include parallel computer architectures, parallel system models, parallel programming paradigms, performance monitoring and optimization techniques, compilation techniques for parallel architectures, communication library implementations, and software/hardware fault tolerance techniques.\nCDA 5140. Fault Tolerance and Reliability (3). Prerequisite: CDA 5155. Basic definitions; self-checking circuits; error detection measures; interconnection networks; test generation and testability; distributed fault tolerance systems; software fault tolerance; fault tolerance and VLSI; error recovery.\nCDA 5155. Computer Architecture (3). Prerequisite: CD3101. Computer system components; microprocessor and minicomputer architecture; stack computers; parallel computers; overlap and pipeline processing; networks and protocols; performance evaluation; architecture studies of selected systems.\nCEN 5000. Knowledge Management and Data Engineering (3). Prerequisite: COP 5710. A survey of techniques and tools representing the transition from database management to knowledge management; database architecture and models; fuzzy databases; construction of knowledge bases.\nCEN 5035. Software Engineering (3). Prerequisites: COP4020, COP4531, CEN4021. Survey of software engineering and detailed study of topics from requirement analysis and specification, programming methodology, software testing and validation, performance and design evaluation, software project management, and programming tools and standards.\nCEN 5055. Project Development (3). Prerequisites: CEN 5035. This course deals with the planning, design, validation and implementation of a large scale project using IEEE deliverables, state-of-the-art software engineering techniques, analysis and design project reviews and evaluations prior to implementation in the Graduate Software Project.\n CEN 5064. Advanced Software Design (3). Prerequisite: CEN 5035. This course concentrates on the design of software systems after requirements engineering has been completed. The course offers education in techniques such as architectural design, pattern integration, and refactorings.\nCEN 5066. Software Engineering in Graphics (3). Prerequisite: CAP4730. Software engineering techniques as applied to graphical concepts based on ISO 7942, the Graphical Kernel Systems (GKS). Particular topics include binding times, concept coupling, segments, transformations, passive/active graphics, clipping. A class project is required.\nCEN 5720. Computer-Human Interaction (3). Prerequisite: COP4530. Systematic analysis of user needs and activities from the point of view of the actual user. Design and implementation of effective, user-friendly software. Methods of analysis. Performance and interface of programs. User anxiety and convenience.\nCGS 5267. Principles of Computer Organization (3). Co-requisites: COP3330 and MAD 2104.  For graduate non-majors and graduate majors needing foundational work in computer science; credit may not be applied towards a graduate degree in computer science. Basic computer structure and design, register transfer and micro operations, central processor organization, micro programming, arithmetic processor design, input-output, memory organization, virtual memory, microprocessors and microcomputer architecture.\nCGS 5268. Principles of Computer Organization II (3). Prerequisite: CDA3100 For graduate non-majors and graduate majors needing foundational work in computer science; credit may not be applied towards a graduate degree in computer science. Fundamental concepts in processor design, including datapath and control, pipelining, memory hierarchies, and I/O.\nCGS 5409. Object-oriented Programming in C++ for Non-majors (3). Prerequisite: COP3014 or a compatible course in C or C++ programming. Pre/co-requisite: COP3353 For graduate non-majors and graduate majors needing foundational work in computer science; credit may not be applied towards a graduate degree in computer science. Topics include basics of C++ language, objects and classes, programming with classes, constructors and destructor, dynamic memory allocation, function and operator overloading, master classes, the class iostream, base and derived classes, and templates. May not be applied toward a degree in computer science.\nCGS 5425. Object-Oriented Programming with Data Structures (3).  Prerequisites: COP3330 and MAD 2104. Pre/co-requisite: CDA3100. For graduate non-majors and graduate majors needing foundational work in computer science; credit may not be applied towards a graduate degree in computer science. Structured and object-oriented programming; invariant relations, stepwise refinement; text processing, internal sorting methods, linear tables, pointers and linked data structures, recursive programming and recursion elimination, sequential file processing; trees and graphs; program verification and running time analysis; application of concepts through programming projects.\nCGS 5426. Programming Language Concepts (3). Co-requisite: COP4530. For graduate non-majors and graduate majors needing foundational work in computer science; credit may not be applied towards a graduate degree in computer science. A survey of programming languages and language features and an introduction to compilers. Languages to be discussed include FORTRAN, Pascal, Ada, PL/1, APL, and LISP. An oral presentation is required.\nCGS 5427. Algorithm Design and Analysis (3).  Prerequisites: COP4530, MAD 3105-or-3107. Co-requisites: STA4442, STA4321, or STA 3032 . For graduate non-majors and graduate majors needing foundational work in computer science; credit may not be applied towards a graduate degree in computer science. Techniques for the analysis of computer algorithms; examples of well-designed algorithms and associated data structures; principles of algorithm design and application to programming projects.\nCGS 5428. Relational Database Theory (3).  Prerequisites: COP3330 and MAD 2104. For graduate non-majors and graduate majors needing foundational work in computer science; credit may not be applied towards a graduate degree in computer science. Basic file organization methods, indexed files, multi-key processing; architecture of database management systems; relational, hierarchical network, and semantic database models; normalization; distributed databases and file systems; practical use of a DBMS and the building of a database application.\nCGS 5429. Introduction to Computer Theory (3). Prerequisites: MAD 3105. For graduate non-majors and graduate majors needing foundational work in computer science; credit may not be applied towards a graduate degree in computer science. Regular expressions; regular, context-free, context-sensitive, and unrestricted grammars; foundations of language theory; finite automata and linear grammars; pushdown automata; Turing machines and non-solvability.\nCGS 5466. Programming for Non-Majors (3). Prerequisites: MAC 1140. For graduate non-majors and graduate majors needing foundational work in computer science; credit may not be applied towards a graduate degree in computer science. Fundamental concepts and skills of programming in a high-level language. Flow of control: sequence, selection, iteration, subprograms. Data structures: arrays, strings, structs, ADT lists and tables. Algorithms using selection and iteration (decision making, finding maxima and minima, basic searching and sorting, simulation, etc.). Good program design using a procedural paradigm, structure and style are emphasized. Interactive and file IO. Testing and debugging techniques.\nCGS 5765. Principles of Operating Systems (3). Prerequisites: CDA3100, COP4530. For graduate non-majors and graduate majors needing foundational work in computer science; credit may not be applied towards a graduate degree in computer science. Design principles of batch and multi-programming and time-sharing operating systems. Linking, loading, input-output systems, interacting processes, storage management, process and resource control, file systems.\nCGS 5935. Special Topics in Computer Science for Non-Majors (1-3). This course will offer special topics in Computer Science that are designed for non-Computer Science graduate students.\nISC 5228. Monte Carlo Methods (3). This course provides an introduction to probabilistic modelling and Monte Carlo methods (MCMs) suitable for graduate students in science, technology and engineering. It provides an introduction to discrete event simulation, MCMs and their probabilistic foundations, and the application of MCMs to various fields. In particular, Markov chain MCMs are introduced as are the application of MCMs to problems in linear algebra and the solution of partial differential equations.\nCIS 5370. Computer Security (3). Prerequisites: COP4610 or consent of instructor. Covers threats and attacks (such as computer viruses and Trojan horses), access control, entity authentication, covert channels, inference and database security, secure operating systems, network security, legal and ethics aspects, administering security, physical security, and TEMPEST.\nCIS 5371 Cryptography (3). Prerequisites: MAD 3105.  This course addresses issues of modern cryptography covering theory and practice. Algorithms such as the RSA, EIGamal and the digital Signature Standard are covered in depth.\nCIS 5900r. Directed Individual Study (1-9). (S/U grade only) May be repeated to a maximum of twelve (12) semester hours.\nCIS 5910r. Supervised Research (1-5). (S/U grade only.) Cannot be applied to the master\u2019s degree. May be repeated to a maximum of five (5) semester hours.\nCIS 5915r. Graduate Software Project(1-12). (S/U grade only.) A minimum of six (6) semester hours of credit is required.\nCIS 5920r. Colloquium (1). (S/U grade only.) Series of lectures given by faculty and visiting computer scientists. May be repeated up to a maximum of ten (10) semester hours.\nCIS 5940r. Supervised Teaching (1-5). (S/U grade only.) May be repeated to a maximum of five (5) semester hours.\nCIS 5970r. Master\u2019s Thesis (1-12). (S/U grade only.) A minimum of nine (9) semester hours of credit is required.\nCNT 5412. Network Security, Active and Passive Defenses (3).  Prerequisites: COP4530 and MAD 2104, or consent of instructor. Course covers defense of computer networks, investigation of threats to computer networks, network vulnerabilities, techniques for strengthening passive defenses, tools for establishing an active network defense, and policies for enhancing forensic analysis of crimes and attacks on computer networks.\nCNT 5415. Applied Computer and Network Security (3). In this course, students familiarize themselves with current and emerging threats to the security of computer systems and networks, including viruses, worms, and network intrusion; and with techniques for the prevention, detection, and recovery from such attacks, such as firewalls, intrusion detection systems, secure coding practices, and others. Attack and defense mechanisms are studied in a systematic way to develop students\u2019 practical and analytical skills to identify and correct or mitigate threats to computer systems and networks.\nCNT 5505. Data and Computer Communications (3). Prerequisite: CDA3101 and COP4610. Overview of networks; data communications principles; data link layer; routing in packet switched networks; flow and congestion control; multiple access communication protocols; local area network protocols and standards; network interconnection; transport protocols; integrated services digital networks (narrowband and broadband); switching techniques and fast packet switching.\nCNT 5605. Computer and Network Administration (3). Prerequisite: COP4610. UNIX user commands and shell programming. Problem solving and diagnostic methods, system startup and shutdown, device files and installing devices, disk drives and file systems, NFS, NIS, DNS, send mail. Managing a WWW site, managing UNIX software applications, system security, performance tuning. Legal and professional issues, ethics and policies.\nCOP 5385. HSM and Reactive Systems (3). Prerequisites: COP4530, COP4610. Hierarchical state machines (HSM) are finite state machines with a behavioral inheritance hierarchy. HSM provide a theoretical model for event-driven (reactive) systems. The course studies this HSM model and introduces a framework for implementing reactive systems based on HSM models of systems. The use of HSM as an organizing principle for applications software, from desktop to real time, is studied. A range of applications is discussed and a student project is required.\nCOP 5517. Generic Programming (3). Prerequisite: COP4530. Generic Programming Principles and Techniques, including most of the following topics: Generic Containers; Function and Predicate Objects; Generic Algorithms; Mediation between containers and algorithms with iterators; Containers and Algorithms in the C++ STL Vectors, Lists, and Deques; Stacks, Queues, Priority Queues, Ordered Sets and Maps, Hashed Sets and Maps, Iterators and Iterator Adaptors, General algorithms, Set algorithms, Heap algorithms, Search algorithms, and Sort algorithms; Extending the STL; Graphs, Digraphs, and Graph Algorithms; Policy Based Design; Partial template specialization; Traits; Typelists; Design Pattern Implementations: Singletons; Smart Pointers; Abstract Factory; and related special topics.\nCOP 5570. Concurrent, Parallel, and Distributed Programming (3). Prerequisite: COP4610. UNIX and C standards, file I/O, file access and attributes, directories, the standard I/O library, systems administration files, the process environment, process control, process relationships, signals, terminal I/O, daemon processes, interprocess communication, and pseudo terminals.\nCOP 5611. Advanced Operating Systems (3). Prerequisites: CDA3101, COP4610, and introductory probability or statistics. Design principles of batch, multiprogramming, and time-sharing systems; distributed systems; problems of concurrency.\nCOP 5621. Compiler Construction (3). Prerequisites: CDA3100 and COT4420. Introduction to compiling, elements of language theory, syntax-directed translation, lexical analysis, symbol tables, backtrack parsing, precedence parsing, LR(k) parsing, LL(k) parsing, intermediate code generation, code optimization, code generation, error detection and recovery. \nCOP 5641. Kernel and Device Driver Programming (3). Prerequisite: COP4610, COP 5570, or permission of instructor. Internals of the Linux operating system kernel, including virtual and physical memory management, scheduling, and device drivers. Kernel modules, hardware interfaces, char and block devices, kernel debugging, interrupt handling, memory mapping. Laboratory exercises modifying example modules, project developing a new device driver.\nCOP 5642. RealTime Systems Theory and Practice (3). Prerequisite: COP4610 or COP 5570 Theoretical foundations and practical techniques for the design and implementation of real time computer systems. Topics include applicable scheduling theory, the use of computers for controlling real time processes, the use of a real-time operating system. Laboratory work includes writing software to control a physical device with hard timing constraints, and analysis of scheduling performance by simulation. A term project is required.\nCOP 5725. Database Systems (3). Prerequisites: COP4710, COP4610. Use of a generalized database management system; characteristics of database systems; hierarchical, network, and relational models; file organizations.\nCOP 5818. Distributed Applications Development (3). Prerequisite: COP3252 Programming of distributed web applications using Java database connectivity, servlets, Java server pages, remote method invocation, and enterprise Java beans; use of the Sun Microsystems Java 2 Enterprise Edition development platform either directly or through an integrated development environment such as IBM\u2019s websphere.\nCOP 6622. Advanced Topics in Compilation (3). Prerequisite: COP5621 The course covers attribute grammars and attribute grammar processors, formal methods of semantic analysis, generalized tree transformers, code selection, analysis and optimization, as well as error analysis and recovery.\nCOT 5310. Theory of Automata and Formal Languages (3). Prerequisites: COP 4020, COT4420 Formal models of computation; automata; formal languages, their relationships, decidable and undecidable problems.\nCOT 5315. Programming Language Foundations (3). Prerequisites: COP4020 and MAD 3105 . Conceptual subtleties in programming languages; formal specification of syntax and semantics; issues in the design and implementation of programming languages.\nCOT 5405. Advanced Algorithms (3).  Prerequisites: COP4531 Algorithms, formal proofs of correctness, and time complexity analysis for: network flow problems, approximation of NP hard combinatorial optimization problems, parallel algorithms, cache-aware algorithms, randomized algorithms, computational geometry, string algorithms, and other topics requiring advanced techniques for proof of correctness or time/space complexity analysis.\nCOT 5410. Complexity of Algorithms (3). Prerequisites: COP4531 and COT4420. Formal methods for the analysis of algorithm complexity, application to specific algorithms, lower bounds, asymptotically optimal algorithms, Reducibilities, NP completeness, and other classifications of \u201chard\u201d problems.\nCOT 5507. Analytical Methods in Computer Science (3). Prerequisite: COP4531. This course teaches computer science students the fundamental discrete mathematics required for serious graduate work in Algorithms and Theoretical Computer Science. It specifically covers topics in recurrent problems, sums, integer functions, elementary number theory, binomial coefficients, special numbers, and generating functions.\nCOT 5540. Logic for Computer Science (3). Prerequisite: COT4420. Syntax, semantics, and proof theory of propositional logic and first order languages; prenex normal form; Gentzen systems; resolution for propositional logic; elements of PROLOG and program verification.\nCOT 5715. Random Number Generation (3). Prerequisite: COT4531. This course provides a graduate level examination of all aspects of random number generation as used in simulation. Specifically, the course concentrates on pseudo-random number generation and quasi-random number generation theory and practice.\nISC 5318. High Performance Computing (3). Prerequisites: COP4020 This course introduces high-performance computing, the use of parallel supercomputers, computer clusters, as well as software and hardware in order to speed up computations. Students learn to write faster code that is highly optimized for modern multi-core processors and clusters, using modern software-development tools and performance analyzers, specialized algorithms, parallelization strategies, and advanced parallel programming constructs.\n6000 Level Courses\nCAP 6417. Theoretical Foundations of Computer Vision (3). Prerequisite: CAP 5415. This course covers theoretical foundations of computer vision. By formulating vision as an inference process, approaches to vision are presented and analyzed systematically. Topics include Marr\u2019s computational vision paradigm, regularization theory, Bayesian inference framework, pattern theory, and visual learning theories.\nCIS 6900r. Directed Individual Study (1-12). (S/U grade only.) May be repeated to a maximum of twenty-four (24) semester hours.\nCIS 6930r. Advanced Topics in Computer Science (1-3). May be repeated to a maximum of twelve (12) semester hours.\nCIS 6935r. Advanced Seminar in Computer Science(S/U grade only) (1). May be repeated to a maximum of eight (12) semester hours.\nCIS 6980r. Dissertation (1-12). (S/U grade only.)\nCOP 6622. Advanced Topics in Compilation (3). Prerequisite: COP 5621. In-depth study of the following topics: attribute grammars and attribute grammar processors, formal methods of semantic analysis, generalized tree transformers, code selection, analysis and optimization, and error analysis and recovery.\n8000 Level Courses\nCIS 8962r. Doctoral Qualifying Examination (0). (P/F grade only)\nCIS 8964r. Doctoral Preliminary Examination (0). (P/F grade only.)\nCIS 8966r. Master\u2019s Comprehensive Examination (0). (P/F grade only.)\nCIS 8974. Master\u2019s Project Defense (0). (P/F grade only.)\nCIS 8976r. Master\u2019s Thesis Defense (0). (P/F grade only.)\nCIS 8985r. Defense of Dissertation (0). (P/F grade only.)\n", "document_id": 144180}]}, {"paragraphs": [{"qas": [{"question": "Can other people help with a graduate project?", "id": 156927, "answers": [{"answer_id": 221061, "document_id": 144182, "question_id": 156927, "text": "The work submitted for the master\u2019s project, including both the code and the document, is required to be the individual work of the student. ", "answer_start": 2347, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "Master\u2019s Project | Computer Science\n\nMaster\u2019s Project\nThe master\u2019s project typically has the following parts:\ncreation of an original software artifact, adequate to demonstrate the mastery of software development;\nwriting of an original paper, adequate to demonstrate mastery of technical writing;\npresentation of an oral report of the project, adequate to demonstrate mastery of public speaking.\nIn judging whether these three deliverables demonstrate adequate mastery, the supervisory committee shall consider whether the depth of technical knowledge and level of skill demonstrated by the student are consistent with the expectations for professional employment.\nThe scope and difficulty of the project should be greater than that of a term paper for a course. The technical depth should be appropriate for the capstone of a graduate degree. In particular, it should require study of one or more areas of computer science beyond what is covered by the required graduate and undergraduate courses.\nThe software may be an end product or be incidental to a piece of experimental research (e.g. a simulator, or implementation of an algorithm for performance testing). The originality need not be fundamental. Creativity at a fundamental level, such as in the design of algorithms and data structures, or in the concept of the application, is desirable but not required. It is acceptable to produce \u201cyet another\u201d implementation of a type of software that has been done before. However, in the latter case it is essential that the student first do a study of prior work and document that study with references and analysis, showing how the new implementation incorporates lessons learned from prior practice.\nThe project document shall always include a description of the project adequate to inform the committee members of the motivation, objectives, scope, methods, and results. It shall ordinarily cover the full software development cycle, including requirements analysis, software design, test design, validation testing, and performance analysis. This project description shall have the form of a technical report. If the software is an end product, the project document shall also include user and maintenance documentation. The latter two shall ordinarily be separate from the project description, though they may be presented as appendices.\nThe work submitted for the master\u2019s project, including both the code and the document, is required to be the individual work of the student. The student is allowed and encouraged to solicit review and comment, including editorial suggestions, especially from the major professor and supervisory committee members. However, the student and advisor should keep in mind that by awarding a master\u2019s degree in computer science the department is certifying that the student has mastered technical English writing to a level that is acceptable for a professional.\nIf the master\u2019s project software is part of a larger software development or research project, it may make use of other software components that were not written by the student, but such other components shall be clearly identified and separated from the contributions of the student. Further, if the master\u2019s project is part of a larger project, the organization of the larger project must allow the master\u2019s student a high degree of autonomy and individual responsibility for a well defined and clearly partitioned segment of the project, from the inception to completion of the segment.\nThe application of the above criteria to the project is up to the individual student\u2019s supervisory committee. The committee shall be formed by the start of the project, and registered with the Director of Graduate Studies. All committee members shall be given an early opportunity to review the scope and technical approach of the project, before work has progressed too far to make whatever modifications may be needed to obtain their approval.\nThe project defense is primarily a test of the student\u2019s oral communication skills.\nWhen scheduling the defense, the student shall allow at least ten days to two weeks for review of the final paper by the committee after it has been approved by the major professor. It is the responsibility of the student to schedule the defense and reserve the room and the PC cart through the Graduate Coordinator.\nOnce the project has been defended and all modifications suggested by the major professor and committee have been made, an electronic version must be submitted to the webmaster. Appropriate copyright notices and authorizations should be given to allow the department to distribute the document. The first page of the report should have the student author\u2019s name, the title, and the names of the major professor and committee members.\n", "document_id": 144182}]}, {"paragraphs": [{"qas": [{"question": "Who are PhD portfolios reviewed by?", "id": 157020, "answers": [{"answer_id": 221154, "document_id": 144193, "question_id": 157020, "text": "by the Portfolio Evaluation Committee (PEC)", "answer_start": 760, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "Portfolio | Computer Science\n\nPortfolio\nPhD Student Portfolio Guidelines\nThe portfolio is the principal artifact used by the department to monitor progress of doctoral students and to determine if a student is ready to take the Doctoral Qualifying Exam, which is a required component of admission to candidacy. This document is intended as a guide to the portfolio component of these requirements. Adhering to these guidelines is a requirement for continuing in the doctoral program.\nPortfolio Requirement\nEvery Computer Science doctoral student is required to assemble and submit a portfolio for review no later than the date specified under Portfolio Calendar below.\nPortfolios are reviewed on a regular basis (generally once a year, during the Spring term) by the Portfolio Evaluation Committee (PEC), a faculty committee appointed by the department chair. Feedback to the student on portfolio contents and on progress towards admission to candidacy is provided as a result of these reviews.\nNew portfolios should be submitted to the student\u2019s academic advisor for preliminary review. The advisor may suggest that the student make modifications. Students should print the cover page form and include the form with the Portfolio for submission to the academic advisor for review. When the advisor is satisfied, the advisor will sign the cover page form and transmit the portfolio on to the PEC.\nAdmission to candidacy for the PhD degree consists of two milestones:\nCIS 8962 Doctoral Qualifying Exam\nCIS 8964 Doctoral Preliminary Exam (Area Exam)\nA grade of \u201cP\u201d must be earned in both of these. Normally the Doctoral Qualifying Exam would precede, or at least occur in the same semester as, the Area Exam. See below under Portfolio Review and Qualifying Exam for the procedure to follow.\nPortfolio Calendar\nDuring the first semester in the program, the student should assemble a portfolio and submit it to the department office through the student\u2019s academic advisor. This initial portfolio should be submitted as soon as possible, but in no case later than the end of the first semester. (It is understood that the portfolio will not be complete at this point.)\nEvery Fall and Spring semester prior to the student\u2019s admission to candidacy, the student is required to maintain the currency of the portfolio by updating it, asking his or her advisor to review it, and obtaining the advisor\u2019s signature on the portfolio cover page form, by the end of the second week of the semester.\nAt least once a year, typically in the Spring, the portfolio will be reviewed by the Portfolio Evaluation Committee. The result of the review will be advisory in nature.\nWhen the student wishes to take the Doctoral Qualifying Exam:\nFor the term in which the student wishes to take the Doctoral Qualifying Exam, the student should enroll in the course CIS 8962 Doctoral Qualifying Exam. In order for the student to register for the Qualifying Exam the student\u2019s and the student\u2019s major professor must sign a portfolio cover page form indicating that the professor has reviewed the portfolio and considers it complete . The CIS 8962 Doctoral Qualifying Exam will be scheduled during that semester.\nFull time students entering with a Masters in Computer Science should normally expect to take the Qualifying Exam near the end of their first year.\nFull time students entering directly from a Bachelor\u2019s degree in Computer Science should normally expect to take the Qualifying Exam near the end of their second year.\nFor all students, the CIS 8962 Doctoral Qualifying Exam should normally occur soon after the core course requirements have been met.\nAfter admission to candidacy, the portfolio should not be modified. It will be archived by the department staff. Copies of the progress reports prepared by the student\u2019s major professor should be placed in the student\u2019s regular departmental advisement file.\nPortfolio Content & Organization\nEvery student in the FSU Computer Science doctoral program is required to prepare a three-ring binder containing as much as possible of the information described below. For each major section, please begin the corresponding section in your binder with a tabbed separator labeled so as to identify the section heading. All sections are required to be included.\nSummary Data\nComplete the following table on personal information:\nPersonal Information\nYour Name:\nYour FSUSN:\nDate entered program (semester/year):\nFull or part time student?\nPrincipal source of support:\nGive the names of your dissertation advisor and other committee members. If the committee has not yet been formed, please indicate this with \u2018TBD\u2019. Note that advance into candidacy can only be approved when a committee has been appointed.\nDoctoral Committee\nMajor Professor / Advisor\nCommittee Member\nCommittee Member\nCommittee Member\nExternal Committee Member\nComplete the following table on core courses (see the Graduate Bulletin for information on the core course requirements). You must complete four (4) core courses in total: at least one course from each of the three core areas. List these four core courses in the table below. Note that only those core courses you completed with a grade of B or higher will count towards the complete set of four, so only list the core courses with a grade of B or higher:\nCore Graduate Courses and Grades\nCore Area\nCore Course\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\nSemester Taken or Planned\u00a0\u00a0\nName of Instructor\u00a0\u00a0\nGrade Received\u00a0\u00a0\nSoftware\nSystems\nTheory\nAny\nIf you are requesting that courses taken at other institutions be counted toward the core, please provide supporting documentation showing the equivalence. In addition, our department\u2019s Director of Graduate Studies or another qualified graduate faculty member has to make an examination and determine that the course is equivalent. Obtain a letter or memo signed by this person and put a copy in the portfolio. In any case, include in your portfolio a copy of the course syllabus, including at least the information about the prerequisites, topics, and textbook or other references used, and copies of whatever graded work (examinations, projects, etc.) you have retained from the course.\nIn general, to be equivalent, a course must be a graduate course, with similar prerequisites, a similar list of topics, and similar performance expectations. For example, a course in operating systems will not be considered equivalent to COP 5611 unless it is a \u201csecond semester\u201d course, i.e. one for which there is another operating systems course like COP 4610 as prerequisite. For the theory area, the course grade must be based on the ability to do mathematical proofs. For the software area, the course must involve substantial hands-on software development, with a mature level of documentation and testing.\nComplete the following table on elective courses, including all the graduate courses you have taken (including thesis and DIS courses) that are not in the list of core courses above.\nElective Courses and Grades\nElective Course\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\nSemester Taken or Planned\u00a0\u00a0\nName of Instructor\u00a0\u00a0\nGrade Received\u00a0\u00a0\nGPA for elective courses:\nComplete the following table for all area exams you have taken or plan to take. The last row should be the exam you have taken or plan to take for your current degree.\nArea Exams\nExam Coverage Area \u00a0\u00a0\nDate of Exam (semester/year) \u00a0\u00a0\nResult of Exam \u00a0\u00a0\nState whether you have chosen a doctoral research topic and, if known, give a brief description of the proposed research. (one or two sentences)\nCurriculum VitaeThe CV should contain the following information:\nAcademic degrees: List all degrees you have earned to date, including for each degree the date it was conferred, the subject area, and the institution\u2019s name and general location.\nProfessional employment: List any teaching or research assistantships, any fellowships, and any nonacademic jobs providing training or experience in Computer Science or closely related areas. For teaching and research assistantships, indicate level of effort, e.g., whether these were 1/2 time, 1/4 time, etc. appointments.\nHonors and Awards: List any special academic honors, awards, or honor society memberships.\nPublications: List all published writings for which you are the author or a co-author.\nService: Indicate anything you have done which either directly or indirectly benefited the department, university, or the Computer Science profession\u2013e.g., officer of the student ACM chapter, reviewer for professional conference or journal, assistance at any professional conference, help at science fairs, service in local public schools, etc.\nResearch Publications and Writing\nBegin this required section by repeating the publication list cited in your CV.\nPlace a reprint or photocopy of one research publication or technical writing of which you were the primary author or writer, provided that:\nIf the publication has three authors or fewer in total, then state the role you played in this publication, i.e., what was your role in the research and in the writing of the paper? If your writing was edited by a co-author (such as your advisor), then you should clearly indicate this.\nIf all of your publications have four authors or more in total, or if you were not the person primarily responsible for writing the paper, or if you have no publications, then you must contribute a work of a research or technical nature which you personally created. This could be your Masters Thesis, or if you have not written a thesis, then some other research-oriented or technical writing, such as a term paper, or the area survey paper, or a technical report for which you were the primary author.\nSoftware Engineering A person holding the PhD in Computer Science is expected to have the ability to contribute substantially to significant software artifacts. As such, one such artifact is a required component of the doctoral portfolio. Include a copy of ONE such artifact, including design, engineering, and certification reports, software documentation, and actual code.A listing of unidentified uncommented code is not sufficient. The portfolio must include enough external documentation and internal comments for the reviewers to read and evaluate the scope and quality of the software. Some indication must be included of how the quality of the software was tested. If the software is something submitted for grade in a course, you should include the instructor\u2019s statement of the assignment as external documentation, but that is not sufficient; the code must at least include internal comments. Similarly, for a course assignment you may provide the grade you received, and any comments the instructor made, as part of the \u201ccertification report\u201d, but you also should explain how you tested it.For large projects, only indicative samples of the actual code need be included, but the full code should be available either on-line or as a separate document. If lengthy, these items may be submitted in a separate binder. If you include a CD containing materials, please include printed copy of at least some overview material, with pointers to the CD for the rest.If any of the software or documentation components are the work of more than one author, you must indicate what parts of these components you contributed to and estimate the percent of your personal contribution to each part. Moreover, it is best that you also include some examples of your individual work.\nDissertation Research Write a 1-2 page abstract describing your intended area of dissertation research. Include indications of progress you have made.\nSupport List all employment you have had while a graduate student in the department along with the begin/end dates of that employment. Include TA/RA positions, other work within FSU, as well as outside employment. We are interested in some detail, for example, if you are research assistant, describe the position, work requirements (in terms of both effort and outcome), and who the employer/supervisor is. This information is relevant both for the extent to which your activities support your educational objectives and the extent to which they may occupy your time in activities not related to your degree program.For each RA and TA position you have held at FSU, include here photocopies of your semesterly evaluation of performance in those positions.List all fellowship support you have while a student in our program. List the granting agency, the academic and ancillary requirements, and the amount of funding for each fellowship.\nLectures All candidates for doctoral degrees in the department are required to participate in teaching activities at some time during their graduate careers, which will allow them to make an informed decision regarding whether or not they may wish to pursue a career in academia. Therefore, every candidate is required to either teach a course or serve as a recitation instructor for a course before they graduate. This experience can be part of their TA duties or can be obtained at another university prior to coming to FSU. In this section include supportive material that demonstrates lecture preparation and presentation material. Alternatively, include recitation presentation material in case you were assigned recitation responsibilities. This requirement can be waived by the Department chair in special circumstances only. When waived by the Chair, please include a copy of the memo.\nDocumentation Supportive documentation should include:\nPrevious Portfolio Reviews (when applicable)As discussed above, doctoral student portfolios will be reviewed regularly by the Portfolio Review Committee, and each student will be sent a letter indicating the committee\u2019s evaluation of the student\u2019s progress toward the degree. Photocopies of all such letters to date are to appear in this section of the portfolio.\nTranscripts To the extent these are available, include copies of your transcripts from prior institutions, i.e., universities or colleges you attended prior to your beginning as a graduate student in Computer Science at FSU. If you submitted transcripts with your application to our graduate program, the departmental staff can make photocopies of these for you from your application file, if you so request.\nGRE and TOEFL Score Reports (when available)In this section, place photocopies of the official reporting forms of your GRE and TOEFL scores reported in section 1 above. When you opt to omit it, the department will retrieve this information electronically.\nArea Exam Reports In this section place photocopies of the result reports from all area exams you have taken.\nPortfolio Review and Qualifying Exam\nThe PhD Portfolio is intended to provide the department with a complete view of the student\u2019s accomplishments and abilities that relate to likelihood of success as a PhD professional. The portfolio is reviewed regularly by the Portfolio Evaluation Committee to determine whether the student is making suitable progress towards the degree, and must be completed with a list of the satisfactory grades (B or higher) for the four core graduate courses when the student takes the Doctoral Qualifying Exam. Based on the completion of the portfolio, a student can enroll in CIS 8962 Doctoral Qualifying Exam. A passing grade \u201cP\u201d for the CIS 8962 Doctoral Qualifying Exam is one of the two required components of admission to candidacy.\nThe student should be enrolled in CIS 8962 Doctoral Qualifying Exam when he or she has completed the four core graduate courses, completed the portfolio, and both the student and major professor agree that the student is ready to take the Doctoral Qualifying Exam. ( Doctoral Qualifying Exams may be scheduled for Fall or Spring semester, but not Summer semester.) The Portfolio Evaluation Committee will schedule and conduct the Doctoral Qualifying Exam during the semester. The exam will be oral and will cover the four core graduate courses taken by the student. The student will be tested on the four core graduate course topics. The student is strongly advised to study the core course topics well in advance in preparation for the Doctoral Qualifying Exam.\nA student cannot take the Doctoral Qualifying Exam if he or she has not completed the four core graduate courses. However, there is one exception to this rule. A student who has received satisfactory grades with a cumulative GPA of 3.5 or higher for all but one of the core courses can take the Qualifying Exam in the Spring term in which the last core course is being taken, assuming that the Qualifying Exams take place after spring break. In that case, the student is expected to be able to answer questions about all of the four core courses, including the core course currently being taken. If the student passes the oral, the exam is not recorded as passed until after the end of the term, and the chair of the Portfolio Evaluation Committee has verified that the remaining core course has been passed with an acceptable grade.\nIn evaluating the portfolio for the Doctoral Qualifying Exam, no single aspect of the portfolio is taken as a determining factor, but rather an attempt is made to consider all strengths and weaknesses and to determine whether, overall, the student may reasonably be expected to succeed and become a credit to the department. Components of such success generally are as follows:\nGeneral competency in Computer Science.In order to demonstrate adequate mastery of the breadth of Computer Science, we ordinarily expect a successful candidate to maintain a GPA of at least 3.5 in the core courses required for the degree. A GPA below 3.5 for the core courses is sufficient cause to deny permission to take the Qualifying Exam, unless convincing justifications are presented to the committee for consideration. Candidates may refer to the grading scale for PhD students in graduate courses that has been adopted by the department. The Portfolio Evaluation Committee may make exceptions to this GPA rule if it finds compelling evidence of exceptional strength in research. For example, a slightly lower GPA might be offset by published papers in reputable journals or conference proceedings. Note that the four core courses you took must be completed with a B or higher grade. If a student receives an A in a CS graduate core course at FSU, then the student is exempt from taking the exam. If you completed a core course with an unsatisfactory grade of B- or lower, do not list this course as a core course but list the course as an elective. Then sign up for another core course in that same core area to ensure you have taken four core courses, with at least one course from each core area.The Doctoral Qualifying Exam tests the general knowledge of the candidate in areas covered by the four core graduate courses.\nResearch Aptitude.Research is a critical component of the PhD degree process and is a fundamental part of most professional positions that require a PhD as credentials. The department would like to admit to candidacy individuals who have demonstrated the ability, or aptitude, for research in the field.\nSoftware Skills.The creation of computer software is a fundamental part of computer science, and the department generally expects that its graduates possess the skills and training necessary to contribute to such endeavors.\nCommunication Skills.The department wishes to see that the student has a capacity to express his or her thoughts in publication-quality English. Thus there is a requirement that the Portfolio contain some writing sample that demonstrates written communication skills, and the Doctoral Qualifying Exam serves to evaluate spoken communication skills. The writing requirement may be met by a professional publication, masters thesis, a masters degree project report, or any other writing that the student may have produced as part of his or her course work. Note that an ability to present one\u2019s ideas in written English is considered as separate from an ability to conduct research, and that both abilities are deemed necessary.The department also wishes to see that the student is capable of responding extemporaneously to oral questions, as a researcher is required to do when presenting a paper at a conference and a professor is required to do when teaching. The Doctoral Qualifying Exam is a test of these oral communication skills. The student will be expected to be able to understand the questions presented by the examiners, and to answer them on the spot.\nPhD Grading Scale\nThe Florida State University Department of Computer Science has adopted a grade interpretation scale for PhD students and any other students who take graduate courses in the department and may wish at some future time to enter the PhD program. Effective Fall 2002, grades in graduate courses taught by Computer Science Department faculty will use this grade interpretation scale. The scale is given by the following table.\nCourse Grade\nCS Department Interpretation\nA\nPerformance met or exceeded expectations for PhD students\nA-\nPerformance met expectations for PhD students\nB+\nPerformance was marginally below expectations for PhD students\nB\nPerformance was significantly below expectations for PhD students\nB-\nPerformance was unsatisfactory for PhD students\nC+ or below\nPerformance was unsatisfactory for graduate work\nFrequently Asked Questions\nQ: Can I substitute another course for one of the four required core courses? How about doing it just for the Portfolio Review, if I promise to take the course later?A: No. The Qualifying Exam is the point at which the Department checks for completion of the required core courses and the quality of work in those courses. Until you take the course we have no way to tell how well you will have done in the course.Of course, with adequate justification, departments at FSU are permitted to approve course substitutions in degree requirements. The PEC will only consider a substitution if the Portfolio contains a copy of a letter approving a course substitution for the degree requirements, signed by Director of Graduate Studies and the Department Chair.\nQ: I received a B- for a core course. Should I take another core course and have that one count towards to four core courses?A: Yes, you can choose another core course as long as you take at least three core courses to cover all three core areas as part of the total of four core courses you want to count towards the Qualifying Exam.\nQ: What kind of oral questions can I expect at the Qualifying Exam?A: That will be up to the individual members of the PEC. You should expect questions on the four areas: (a) general competency in CS; (b) research aptitude; (c) software skills; (d) communication skills. If the portfolio itself is strong, all or most of the questions are likely to be on (a).\nIn area (a) the intent of the questions will be to gauge your understanding and retention of material normally covered in the four core courses and their undergraduate prerequisites. For example, if you have taken Automata and Formal Languages as part of your core requirement, you should not be take by surprise if you are asked to explain what is a finite state machine, what is the difference between a deterministic and a non deterministic finite state machine, what it means for a gramar to be ambiguous, how that compares to a language being inherently ambiguous, etc..Be sure to have your major professor, and possibly others, help you prepare for such questions. Minimal preparation would include reviewing your notes from the core courses, and then answering some oral questions from each of the areas they cover.A big part of preparing for the exam is learning to be comfortable listening to questions, making sure you understand (by asking for clarification if necessary), and then expressing yourself clearly. You will have an easel and pen to write on. Plan to use it appropriately, to help with your answer. A \u201cmock\u201d oral examination is a good way to practice.Students who have not taken the core courses recently, or who have transferred credit for a core course from another institution, should expect to be asked more questions on the core courses, to verify that the knowledge has not become stale, and that the material learned is similar in scope and depth to what is covered in the corresponding course here at FSU. Similarly, if you took the course at FSU but your grade was not A or A-, you may expect more questions on that course.\nIn area (b) you might expect questions concerning your research experience, your contributions to any research papers in your portfolio, your research plans, and the membership of your supervisory committee.\nIn area (c) you might expect questions on what software you wrote, and the examples of software you included in your portfolio.\nIn area (d) you might expect questions on the technical writing samples you included in your portfolio, but mainly the committee will be judging your communication skills by the manner in which you answer the questions about (a). That is: Can you understand the question? Can you ask appropriate questions for clarification? Can you give a clear answer? How well you do these things in the exam will be viewed as indication of your ability to function in a classroom, and as a speaker at a research conference.\nThese are just examples, not intended to limit the options of individual committee members.\nAlong with the questions, if the questions do not take up all of the available time, you can expect some encouraging words about the strong points of your portfolio, and some constructive advice as to how to proceed.\nQ: Can I take the Qualifying Exam during the summer term?A: No, or at least you should not count on it. Very few of the faculty are available during the summer as they tend to leave town to attend conference meetings. If there happen to be enough members of the PEC in town, an exam may be held in exceptional cases.\nQ: Can I do my Area Examination before my Qualifying Exam?A: Not officially. The course number for the Area Examination is listed as the Ph.D. Preliminary Examination, and the FSU Graduate Bulletin says that a student is admitted to Ph.D. candidacy by passing the Preliminary Examination. Our department\u2019s faculty has set up the admission to candidacy as a two-step process. The necessary first step is the Qualifying Exam. In a few cases, for scheduling reasons, a student may go through the Area Examination process, but a passing grade for the Area Examination cannot be turned in until the student has completed the Qualifying Exam. If the are done the same term, this can work out. Students and advisors should take care about this. If, by some oversight, a passing grade for the Area Examination were to be turned in before the student passes the Qualifying Exam, the Department would need to revoke the passing grade on the Area Examination until the Qualifying Exam is passed.\nQ: What if I took courses at another institution, that I want to count toward my core requirement?A: First, you should have obtained some clearance for transfer credit when you were admitted, and you should put a copy of a letter or memo to this effect in your portfolio. Second, you should include in your portfolio the name of the textbook you used in the course, a copy of the course syllabus, and examples of graded exams and projects form the course. This will enable the PEC to gauge whether the course seems equivalent, and to know what sort of questions to ask during your oral examination on that area.\nQ: When will I know whether I passed?A: The PEC will probably wait to tell anyone until all of the students taking the Qualifying Exam that term have completed the exam.\nQ: Can I talk with other students about the exam, after I take it?A: You are asked not to discuss questions you were asked on the oral exam with anyone, until you are told the result of the exam. This allows us to be fairer to all students. For example, suppose you have trouble on a question. It may be that all students have trouble with that question, and the committee decides to disregard it. However, if you tell another student who is due to take the exam later, and the other student then looks up the answer and so answers better than you did, the committee may conclude that the question was not hard, and that you have no excuse for answering poorly.\nQ: Do I need to form my entire Ph.D. supervisory committee before I take the Qualifying Exam?A: This is not a requirement, but if you do not yet have your supervisory committee formed you need to do it right away, because you need the full supervisory committee before you can move on to the next step, which is the Area Examination.\nQ: Do I need to choose my research area before I take the Qualifying Exam?A: This is not a requirement, but if you do not yet have your area chosen you need to do it right away, since you can\u2019t prepare for the CIS 8964 Preliminary Exam until you have chosen an area.\n", "document_id": 144193}]}, {"paragraphs": [{"qas": [{"question": "What is CIS 8962?", "id": 157000, "answers": [{"answer_id": 221134, "document_id": 144189, "question_id": 157000, "text": "CIS 8962, the qualifying examination (portfolio defense)", "answer_start": 624, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}, {"question": "What is the PhD for CS?", "id": 89222, "answers": [{"answer_id": 99362, "document_id": 144189, "question_id": 89222, "text": "The Doctor of Philosophy is regarded as a research degree and is awarded on the basis of accomplishment in a recognized specialty in computer science. Such accomplishment should include scholarly mastery of the field, significant contributions to new knowledge in the field, and written and oral communication skills appropriate for the field.", "answer_start": 218, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}, {"question": "What are the requirements for a PhD?", "id": 89223, "answers": [{"answer_id": 99363, "document_id": 144189, "question_id": 89223, "text": "The requirements for the Ph.D. include the following: passing CIS 8962, the qualifying examination (portfolio defense), and CIS 8964, preliminary examination (area exam); satisfaction of the course requirements; successfully defending a dissertation prospectus, and successfully defending a dissertation.", "answer_start": 562, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "PhD Degree Information | Computer Science\n\nPhD Degree Information\nThe number of hours for the graduate degree as described in this web page will be effective in Summer 2018.\nGraduate Student Handbook \u2013 Doctoral Degree\nThe Doctor of Philosophy is regarded as a research degree and is awarded on the basis of accomplishment in a recognized specialty in computer science. Such accomplishment should include scholarly mastery of the field, significant contributions to new knowledge in the field, and written and oral communication skills appropriate for the field.\nThe requirements for the Ph.D. include the following: passing CIS 8962, the qualifying examination (portfolio defense), and CIS 8964, preliminary examination (area exam); satisfaction of the course requirements; successfully defending a dissertation prospectus, and successfully defending a dissertation. All candidates for doctoral degrees in the department are required to participate in teaching activities at some time during their graduate careers unless waived by the department chair. Additionally, each doctoral student must complete at least one oral research presentation which is critiqued by at least one faculty member. This can be at the departmental research conference or any discipline-related conference. Each PhD has a Publication Requirement and as such that student is required to be the primary (e.g., first) author for at least one accepted or published regular paper (six or more pages) in a conference or journal that is ranked B or higher by the Computing Research and Education Association (CORE) [http://www.core.edu.au].\nCourse Requirements\nThe doctoral student must complete the undergraduate pre-requisites before graduating. The doctoral student should have completed four core courses (18 hours), with at least one course in each of the three areas Software, Systems, and Theory (the PhD core course requirement). These core courses are defined in the  FSU Master\u2019s degree requirements. Equivalent courses taken at other institutions must be approved by the Portfolio Evaluation Committee (PEC).\nStudents entering the program after earning a Master\u2019s degree in Computer Science or related area must take at least four additional courses (12 hours) beyond those taken for the MS degree, at the 5000 or 6000 level, as advised by the student\u2019s major professor and supervisory committee. These courses must be taken at FSU and a maximum of 2 courses (6 hours) may come from outside of the department. Core courses can also be used to meet this \u201c4 additional course\u201d requirement, provided they are taken at FSU and were not completed as part of an MS program. Supervised Teaching, Supervised Research, DIS and courses with prefix CGS do not count towards this requirement.\nStudents entering the program after earning a bachelor\u2019s degree in computer science or related area, must take at least nine courses (27 hours) at the 5000 or 6000 level, as advised by the student\u2019s major professor and supervisory committee. Four of these courses (12 hours) must meet the PhD core course requirement. The remaining five courses (15 hours) must be taken at FSU and cannot be part of an MS degree program outside of the FSU Computer Science Department. A maximum of two courses (6 hours) may come from outside of the Computer Science Department. Supervised teaching, supervised research, DIS, and courses with prefix CGS do not count towards this requirement.\nIf a PhD student takes CIS5920 Colloquium three times and gets an S each time, then this may substitute for one 3 hour course.\nThe student\u2019s PhD committee can require the student to take more than the aforementioned number of courses. The student must receive a grade of \u201cB-\u201d or better on all graduate courses taken to satisfy the minimum course requirements of the degree. Once these minimum requirements are met, however, it is permissible to take any subsequent courses on an \u201cS/U\u201d basis.\nOnce a student has completed twenty-seven (27) semester hours of graduate work or has been awarded the Master\u2019s degree, the student must be enrolled on The Florida State University Tallahassee campus for a minimum of twenty-four (24) graduate semester hours credit within a continuous 12-month period to meet the university residency requirement. The doctoral student must also complete at least twenty-four (24) hours of CIS 6980r Dissertation. A student may enroll in CIS 6980r only after being admitted to candidacy. Once admitted to candidacy, Students must be enrolled for a minimum of two Dissertation hours each semester until completion (of degree) and must graduate with the doctoral degree within five years of being admitted to doctoral candidacy.\nMajor Professor and Supervisory Committee\nAs early as is feasible in the student\u2019s program, the student should identify an area for dissertation research and secure an informal agreement with a faculty member to serve as the student\u2019s major professor. This agreement should include an understanding of the area and timeline of the dissertation research. This agreement is then made formal by the Department Chair appointing that faculty member to serve in this capacity. In a similar manner, the student must secure agreements with, and the Chair must approve, the remaining members of the student\u2019s Supervisory Committee: one (1) additional faculty members in the Department; one (1) Representative-at-large who is a member of the graduate faculty in another department. Graduate Studies requires the representative-at-large to ensure \u201cthat University policies are followed, and that decisions made by the supervisory committee reflect the collective judgment of the committee. Therefore, the graduate faculty representative must be someone who is free of conflicts of interest with other members of the committee.\u201d If there are any questions as to the appropriateness of a particular faculty member to serve in this role, the Dean of Graduate Studies should be contacted. In addition, the Chair will appoint a member to serve as a Department Representative. All members must hold doctoral directive status. The supervisory committee is responsible for approving an individual program of study, including any additional course requirements, and verifying that the student satisfies the following departmental requirements. The area examination, prospectus, and dissertation defenses must be unanimously approved by the major professor and supervisory committee.\nStudent Portfolio Defense (CIS 8962, Qualifying Exam)\nAll students admitted to the program, but not yet admitted to candidacy, are required to compile and keep current a portfolio containing information relevant to the student\u2019s progress in the program. Required contents of the portfolio, submission dates, and guidelines for preparing the portfolio are published by the Department of Computer Science at  PhD Portfolio. When all components of the portfolio are complete, the student should register for the portfolio defense (CIS 8962).\nThe portfolio of any student not yet in candidacy is reviewed annually by the departmental Portfolio Evaluation Committee (PEC). This committee consists of a core that is appointed by the Department Chair and normally meets in the spring. Feedback to the student on the contents of the portfolio and on progress towards admission to candidacy is provided after each review.\nThe final review occurs in conjunction with the defense of the portfolio. Thus, when a student and his or her major professor agree the portfolio is complete, the student should register for the Doctoral Qualifying Exam, CIS 8962 (0) for the next semester. Students will be required to pass an oral examination over the material in four core courses, with at least one course in each of the three areas Software, Systems, and Theory (the PhD core course requirement). If a student has taken a core course at FSU and has received a grade of an A-, then the student is exempt from having to take an oral examination in that course.\nIf the student is not successful on the first sitting of the Qualifying Exam, a grade of \u201cI\u201d will be assigned. If the second sitting of the exam is also unsuccessful, a grade of \u201cF\u201d is assigned. A student can take the Qualifying Exam at most twice. A student either passes or fails; there is no conditional pass.\nIf the student is successful, he or she should register for CIS 6900 DIS hours to maintain enrollment status until the completion of the Area Examination (CIS 8964, Preliminary Exam). Prior to this benchmark, PhD\u2019s should use CIS 5900 DIS hours to reflect research efforts as they complete the coursework and ready themselves for the Qualifying Exam (CIS 8962).\nArea Examination (CIS 8964, Preliminary Exam)\nThe area examination (CIS 8964) covers the student\u2019s intended area of research. It has both written and oral parts. Both parts of the examination are conducted by the student\u2019s supervisory committee, which may delegate the responsibility to a larger area committee. It is strongly recommended that the student write an area survey paper as part of this exam. The oral part is open to all department faculty having doctoral status who elect to participate. The oral part of the examination is held in an open forum which other students are invited to attend and is followed by a closed session if the committee so desires. Students who do not pass the area exam may be advised to retake it at a later time. A student who changes to a new research area after having previously passed this exam will be required to stand for a further exam over the new area. A student can fail the area exam at most once.\nA PhD CS student can be exempt from writing the document for the area exam if the student was the primary author on an accepted or published paper in the general intended research area and the student\u2019s PhD committee deems the paper and the publication venue to be acceptable.\u00a0 However, an oral examination for the area exam is still required.\u00a0 The student\u2019s PhD committee may allow the student to present the accepted or published paper in place of the normal presentation of the research area, but the PhD committee can still ask the student questions about the intended area of research.\nNormal expectations are that the portfolio defense occurs prior to taking the area exam, or at least in the same semester as the area exam. Within two semesters (including summer) of passing the QE, a doctoral student should have taken the area exam.\nAdmission to Candidacy\nIn order to be advanced to candidacy for the doctoral degree, the student must:\npass CIS 8962, the qualifying examination, which consists of passing the defense of the portfolio, and\npass CIS 8964, the preliminary exam, which consists of passing the area examination.\nSuggested Timeline\nby the end of the first academic year, a doctoral student who entered the program with an MS degree, should have completed the QE and established a doctoral committee\nfor a doctoral student who entered the program without an MS degree, the student should have completed the QE and formed a doctoral committee by the end of the second academic year\nwithin two semesters (including summer) of passing the QE, a doctoral student should have taken the PE (area exam).\nProspectus\nThe student must formally propose the research for the dissertation to his or her Supervisory Committee in the form of a prospectus. The prospectus should consist of much of the background work for the dissertation, including:\nthorough literature review;\nthe theory, preliminary computational results, and/or bases for the feasibility of the research;\na proposal for the research to be completed for the dissertation.\nIn addition, as an appendix to the prospectus, publication plans should be presented. The research proposed should make clear any substantial advances in the state of knowledge in computer science, and the publication plans should be designed to affirm the quality and nature of the research. The publication should be in nationally recognized conferences and journals in the field. The prospectus must be successfully defended before the student\u2019s supervisory committee in an open meeting.\nDissertation\nAfter completing the research proposed in the prospectus, the student must write a dissertation. The dissertation represents the fulfillment of the proposals made in the prospectus. The dissertation document must comply with all current University standards for style. The dissertation must be successfully defended before the student\u2019s committee in an open meeting. The dissertation must be successfully defended within five (5) years of passing the preliminary exam. An electronic version of the dissertation must be submitted to the university as well as the CS webmaster, and CS graduate coordinator.\nScholarly Engagement Requirement\nEach CS doctoral student must be scholarly engaged during their academic studies. A PhD CS student meets the scholarly engagement requirement by giving at least one presentation at an FSU CS graduate student seminar, an FSU CS Department seminar, or at an international conference. It is also recommended that each PhD CS student attends as many department and graduate student colloquia as possible.\nPublication Requirement\nEach PhD student is required to be the primary (e.g., first) author for at least one accepted or published regular paper (six or more pages) in a conference or journal that is ranked B or higher by the Computing Research and Education Association (CORE) [http://www.core.edu.au]; see the here on how to request an exception.\nExamination in Defense of Dissertation\nThe defense of the dissertation will be oral. Responsibility for suggesting the time, designating the place, and presiding at the examination rests with the major professor. It is recommended that students defend no later than the eighth week of classes in the semester of intent to graduate. Students must defend by no later than the Format Approval Deadline in the semester of intent to graduate. Consult the Graduate School Canvas site GradSpace for more information.\nAcademic courtesy requires that the dissertation be submitted to each member of the supervisory committee at least four weeks before the date of the oral examination. The supervisory committee, the chair of the major department, and such other members of the faculty as may be appointed by the academic dean will conduct the examination. All members of the graduate faculty are invited to attend. At least two weeks prior to the date of the examination, the student or major professor will present an announcement of the dissertation title and the date and place of the examination to the Graduate School. Consult the Registration Guide for the deadline dates\nAll committee members and the student must attend the entire defense in real-time, either by being physically present or participating via distance technology. If exceptional emergency circumstances, e.g. medical or other emergency situations, prevent the participation of a committee member then it may be necessary to arrange for an additional appropriately qualified colleague to attend the defense. A minimum of four members with Graduate Faculty Status must participate.\nThe oral examining committee will certify in writing to the academic dean of the major department the results of the examination: passed, failed, or to be re-examined. The report of results following a re-examination must indicate the student either passed or failed. To receive a passing grade, the written dissertation must be in final form or require only minor revisions at the time of the defense. A grade of PASS for the defense of treatise or dissertation requires at least a majority approval of the committee.\nIf the student passes, each member must sign the Manuscript Signature Form to substantiate the results of the defense. It is the responsibility of the major professor to submit this completed form either directly to the Clearance Advisor or to the appropriate college or departmental office for subsequent delivery to the Clearance Advisor in The Graduate School. A written critique of the conduct of the examination in defense of the dissertation should be submitted by the university representative from the graduate faculty to the appropriate academic dean and the Dean of the Graduate School within one week after the date of defense. The degree cannot be awarded until both forms have been received by the Graduate School and the final version of the manuscript has been submitted to and approved by the Clearance Advisor.\n", "document_id": 144189}]}, {"paragraphs": [{"qas": [{"question": "What level do graduate courses need to be for the course-based MS degree?", "id": 156953, "answers": [{"answer_id": 221087, "document_id": 144184, "question_id": 156953, "text": "a total of at least 10 courses (30 hours) at or above the 5000 level", "answer_start": 253, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "MS (Course-Based Option) Graduation Check List | Computer Science\n\nMS (Course-Based Option) Graduation Check List\nBelow is a brief checklist of items an MS (Course-Based Option) student should complete before graduation:\n Degree Requirements Checklist \na total of at least 10 courses (30 hours) at or above the 5000 level excluding supervised teaching, supervised research, seminars, DIS, CIS 5915, CIS 5970 \nof the 10 courses, there must be at least 6 with a grade of B+ or better\nof the 10 courses, there must be at least one course from each of the core areas: Software, Systems, Theory\nregister with the Director of Graduate Studies, at most once, for CIS 8966, MS Comprehensive Exam (withdraw from all but one instance of this if you have registered more than once; withdraw from CIS 8974 or CIS 8976 if you have registered for either).\nregister for graduation at the Registrar\u2019s Office during the second and third weeks of the semester in which you wish to graduate.\n Graduation Checklist \nComplete the departmental online EXIT survey\n", "document_id": 144184}]}, {"paragraphs": [{"qas": [{"question": "What is the minimum GPA required for PhD students?", "id": 89228, "answers": [{"answer_id": 99368, "document_id": 144192, "question_id": 89228, "text": "maintain 3.5 GPA", "answer_start": 700, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}, {"question": "When should a PhD student have completed all required courses?", "id": 157016, "answers": [{"answer_id": 221150, "document_id": 144192, "question_id": 157016, "text": "by the end of Year 4:", "answer_start": 1518, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}, {"question": "What ranking does a conference or journal need to have?", "id": 157017, "answers": [{"answer_id": 221151, "document_id": 144192, "question_id": 157017, "text": "conference or journal that is ranked B or higher by the Computing Research and Education Association (CORE) ", "answer_start": 2165, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "Minimum Satisfactory Progress of a PhD Student in the FSU CS Department | Computer Science\n\nMinimum Satisfactory Progress of a PhD Student in the FSU CS Department\nStudents entering with an MS degree\nby the end of Year 1:\nmaintain 3.5 GPA and no U\u2019s in nongraded courses\nby the end of Year 2:\nmaintain 3.5 GPA and no U\u2019s in nongraded courses\npass the PhD Portfolio (qualifying) exam or make significant progress on research\nby the end of Year 3:\nmaintain 3.5 GPA and no U\u2019s in nongraded courses\npass the PhD Portfolio exam\ncomplete all required courses\nhave a major advisor\npass the area (preliminary) exam or have a published/accepted paper as the primary (e.g., first) author\nby the end of Year 4:\nmaintain 3.5 GPA and no U\u2019s in nongraded courses\npass the PhD Portfolio exam\ncomplete all required courses\nhave a major advisor\npass the area (preliminary) exam\npass prospectus or have a published/accepted paper as the primary (e.g., first) author\nby the end of Year 5:\ndefend the dissertation and have a published/accepted paper as the primary (e.g., first) author in a conference or journal that is ranked B or higher by the Computing Research and Education Association (CORE) [http://www.core.edu.au]\nStudents entering without an MS degree\nby the end of Year 1:\nmaintain 3.5 GPA and no U\u2019s in nongraded courses\nby the end of Year 2:\nmaintain 3.5 GPA and no U\u2019s in nongraded courses\nby the end of Year 3:\nmaintain 3.5 GPA and no U\u2019s in nongraded courses\npass the PhD Portfolio (qualifying) exam\nhave a major advisor\nby the end of Year 4:\nmaintain 3.5 GPA and no U\u2019s in nongraded courses\npass the PhD Portfolio exam\ncomplete all required courses\nhave a major advisor\npass the area (preliminary) exam or have a published/accepted paper as the primary (e.g., first) author\nby the end of Year 5:\nmaintain 3.5 GPA and no U\u2019s in nongraded courses\npass the PhD Portfolio exam\ncomplete all required courses\npass the area (preliminary) exam\nhave a major advisor\npass prospectus or have a published/accepted paper as the primary (e.g., first) author\nby the end of Year 6:\ndefend the dissertation and have a published/accepted paper as the primary (e.g., first) author in a conference or journal that is ranked B or higher by the Computing Research and Education Association (CORE) [http://www.core.edu.au]\n", "document_id": 144192}]}, {"paragraphs": [{"qas": [{"question": "Where are defense result forms?", "id": 157011, "answers": [{"answer_id": 221145, "document_id": 144190, "question_id": 157011, "text": "Defense result forms are available in 203 LOV.", "answer_start": 597, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "PhD Graduation Check List | Computer Science\n\nPhD Graduation Check List\nBelow is a brief checklist of items a doctoral student should complete before graduation:\n Degree Requirements Checklist\nFour core courses in the areas of Software, Systems, and Theory (one from each category, plus one)\nAt least four courses past the MS degree requirements with at least a B- in each\nPass CIS 8962, Qualifying Exam\nPass CIS 8964, Preliminary Exam\nBe admitted to candidacy at least 6 months prior to the awarding of the degree\nDefend a prospectus and submit a defense result form to the Graduate Coordinator. Defense result forms are available in 203 LOV.\nComplete at least 24 hours of CIS6980, Dissertation, with a minimum enrollment of 2 credit hours of Dissertation each semester after being admitted to candidacy until completion of degree.\nRegister, at most once, for CIS 8985, Dissertation Defense, and withdraw from all but one instance if you have registered for this more than once.\nAll requirements for the doctoral degree must be completed within five years from the time the student passes the preliminary examination, or the student\u2019s supervisory committee will require that a new preliminary exam be passed.\nRegister for graduation at the Registrar\u2019s Office during the second and third week of the term in which you wish to graduate using the apply for graduation link on the my.fsu.edu portal.\n Defense & Graduation Checklist \nDetermine the manuscript approval deadline found at https://gradschool.fsu.edu/academics-research/thesis-treatise-and-dissertation/manuscript-clearance-deadlines. The manuscript format check, defense date submission, and defended manuscript must be submitted to the Portal Website: https://clearance.fsu.edu.\nSubmit the dissertation to the doctoral committee at least 4 weeks in advance\nThe Manuscript Clearance Overview can be found at https://gradschool.fsu.edu/academics-research/thesis-treatise-and-dissertation/manuscript-clearance-overview that includes what needs to be submitted to the ProQuest ETD Website:  https://www.etdadmin.com/fsu and the Manuscript Clearance Portal: https://clearance.fsu.edu. \nSchedule defense (at least  2 weeks  in advance):\nReserve room (typically 151 Love) with the CS senior secretary\nReserve PC cart (if needed) by signing up on calendar on the door in the copy room in 260 Love\nComplete the defense announcement form found at https://clearance.fsu.edu (due no later than two weeks before the defense date).\nInform Daniel Clawson of your presentation title, reserved room, defense date and time, and committee list so an announcement can be sent to the department at least one week in advance.\nObtain the CS Defense Result Form (\u201cgreen form\u201d) from outside office (203A). Take this form with you to the defense to record the outcome of the defense.\nReturn the CS Defense Result Form to the CS Graduate Coordinator, Daniel Clawson.\nFor students defending a Master\u2019s Project, please send the project report after any revisions have been done once successfully defended to the Graduate Coordinator, Daniel Clawson (clawson [at cs dot fsu dot edu]).\nTo be cleared for graduation, please send a list of all teaching activities (including recitation and solo instructor TA appointments), publications (accepted and published), and conference presentations done while enrolled as a PhD student.\nComplete the departmental EXIT survey (sent electronically towards the ent of the semester).\nIf your employment plans are uncertain when completing the EXIT survey, inform the CS Director of Graduate Studies via email when those plans are complete.\n", "document_id": 144190}]}, {"paragraphs": [{"qas": [{"question": "Which track is recommended for the CS minor?", "id": 157055, "answers": [{"answer_id": 221198, "document_id": 144209, "question_id": 157055, "text": "The following SCIENCE TRACK is a rigorous set of courses (essentially the beginning of a computer science major) that is approved and recommended for the minor:", "answer_start": 1686, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "Minor in Computer Science | Computer Science\n\nMinor in Computer Science\nOverall Requirement\nStudents pursuing a minor in Computer Science may choose one of two sets of computer science courses pre-approved by the department: the General Track (12 hours) or the Science Track (12 hours). Unless following one of the two tracks listed below, the student should obtain written approval in advance from the department for the specific combination of courses used for the minor. Students must also satisfy stated prerequisites before enrolling in any computer science course. A grade of \u201cC-\u201d or better must be earned in each course counted toward the minor.\nWhat is a Minor?\nA minor in another subject is part of the requirements for a bachelor\u2019s degree in certain departments. Unlike a major, a student does not need to be formally admitted to a minor, nor does the minor appear on the transcript. The Department and the Registrar do not have any forms to fill out or any way to register that a student intends to complete a minor in a particular subject. A student who has fulfilled the requirements for any given minor simply claims the minor when requesting a Graduation Check with their respective College.\nDocumentation\nIt is up to the student\u2019s major Department or College if they require the student to complete a minor, to verify that the student has completed an acceptable minor. This can be checked using the lists below. Because the content of this web page may change in the future, it would be a good idea for a student to print out a copy of this web page at the point the student decides to do a minor, and save the copy for later verification of the minor.\nApproved Tracks\nThe following SCIENCE TRACK is a rigorous set of courses (essentially the beginning of a computer science major) that is approved and recommended for the minor:\nCourse\nPrerequisites\nCOP 3014 (3)  or COP 3363 (3)* \nMAC 1140\nCOP 3353 (1) or  COP 3363 (3)* \nnone\nCOP 3330 (3)\nCOP 3353 (co/prerequisite) and COP 3014\nPlus two of the following:\nCDA 3100 (3)\n COP 3330 (co/pre) and MAD 2104 (co/pre)\nCEN 4020 (3)\n COP 4530 (co/pre)\nCIS 4360 (3)\nCOP 3330\nCNT 4603 (3)\n CGS 3406 or COP 3014\nCOP 3252 (3)\n COP 3330\nCOP 4342 (3)\n COP 3330\nCOP 4530 (3)\n COP 3330 and MAD 2104 and CDA 3100 (co/pre)\nCOP 4710 (3)\n COP 3330 and MAD 2104\nCOP 4610 (3)\n COP 4530, CDA 3100\n*COP 3363 combines COP 3014 and COP 3353; students may satisfy both requirements with this course. Students may\u00a0not\u00a0take\u00a0both\u00a0COP 3014 and COP 3363 and have them both count for the minor.\nThe following GENERAL TRACK is also approved for the minor (this is the recommended track for Information and Management Sciences majors):\nCourse\nPrerequisites\nAny beginning programming course from the following:\nJava: CGS 3416 (3)\nMAC 1105\nC++: CGS 3406 (3)  or   COP 3014 (3)  or   COP 3363 (3) \nMAC 1105 (CGS 3406), MAC 1140 (COP 3014, COP 3363)\nPython: CGS 3465 (3)\nMAC 1105\nPlus three of the following:\nA second beginning programming course listed above that is not in the same programming language.\nCGS 2060 (3) or CGS 2100 (3) [Credit will not be given for both courses]CGS 3066 (3)\nNone\nCOP 3502 (3)\nMAC 1105\nCIS 4403 (3)  or  CGS 2930 (3)* [Any 3-hr course listed for Science Track minor in the previous table]\nNone\n*COP 3363 combines COP 3014 and COP 3353.\n**Students may take either CIS 4360 OR CGS 2930 towards the General Track minor in Computer Science.\nOther sets of courses may be recommended for students in certain specific majors. As this department works out such recommendations they will be added to this web page. Advisors in other departments are encouraged to contact the CS department chair about this.\n", "document_id": 144209}]}, {"paragraphs": [{"qas": [{"question": "Are tutors allowed to help with programming assignments?", "id": 93912, "answers": [{"answer_id": 104986, "document_id": 144197, "question_id": 93912, "text": "It is a violation of the FSU\u00a0Academic Honor Code.", "answer_start": 2297, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}, {"question": "If a tutor helps a student complete an assignment, does it count as cheating?", "id": 157035, "answers": [{"answer_id": 221178, "document_id": 144197, "question_id": 157035, "text": "It is a violation of the FSU\u00a0Academic Honor Code.", "answer_start": 2297, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "Policy on Tutors | Computer Science\n\nPolicy on Tutors\nThis department discourages the use of tutors. Students who have problems in a course should first contact their instructor. A student who needs a modest amount of individual help should get it from the instructor and teaching assistants for the course.\nWhile we cannot prevent a student from hiring a tutor, we will not endorse or recommend anyone as a tutor, nor will we act as intermediary for students attempting to locate a tutor.\nThis policy is based on the following considerations:\nWe want to hear if students are having trouble in a course. If a student has the prerequisites for a course and is putting in the expected level of effort, and if the course is being taught well enough, there should be no need for a tutor. When students hire tutors instead of going to the instructor or department administration to solve their problems it can make it appear to the instructor and the department that everything is going well when in fact it is not. For example: if there is a need to spend more time teaching a particular topic, the instructor needs to find out; if the student is missing necessary background, it may be best for the student to switch to another course; if the instructor is not doing the job well, the department chair should hear about it. In short, if there is a serious problem we want to be informed of it and to solve it. This is the main reason for the policy.\nWe cannot guarantee the competence of a tutor. An incompetent or misinformed tutor could do a student academic harm.\nStudent problems are often very specific to material that is covered in class, or that is related to a programming assignment. Since tutors do not attend the class meetings, they will not be well informed. If a student hires a tutor and the tutor teaches the student something different from what the instructor is teaching, the student will suffer.\nWe have seen cases of tutors helping students do programming assignments. This is a big temptation for the student and the tutor, since it is much quicker and easier to show a person how to solve a specific homework problem or programming assignment than it is to help the student learn the skills needed to solve the problem on his/her own. When this happens it is bad in two ways:\nIt is a violation of the FSU\u00a0Academic Honor Code.\nThe student\u2019s final grade suffers. Since the learning objectives of the assignment are not accomplished, the student will not have the knowledge and skills to pass the examinations. This can result in a student having even an \u201cA\u201d average on homework and failing the course. (It is common for courses to have a policy that examination grades must be at least passing in order for a student to pass a course, no matter how high the grades on unsupervised work.)\nUsing a tutor in a college course is unfair to other students, in the sense that it gives students with extra money an advantage over students who might work as hard or harder but who have less money to spend.\nNote:\u00a0The policy of discouraging the use of tutors does not apply to accommodations for disabilities that are approved by the\u00a0Student Disability Resource Center.\nIf such a student wants to find a tutor, there are usually some upper level undergraduate students and graduate students who are willing to serve as tutors. Notices soliciting and offering tutoring services show up on bulletin boards in the Love Building from time to time.\n", "document_id": 144197}]}, {"paragraphs": [{"qas": [{"question": "What is the FSU CS Department's mission?", "id": 89246, "answers": [{"answer_id": 99386, "document_id": 144205, "question_id": 89246, "text": "Departmental Mission Statement\nTo strive for excellence in advancing, applying, and imparting knowledge in computer science through comprehensive educational programs, research in collaboration with industry and government, and dissemination through scholarly products;\nTo produce outstanding computer science professionals who have the fundamental knowledge, problem-solving skills, and life-long learning capability to advance their careers;\nTo disseminate computer science knowledge to students and professionals in other disciplines, and\nTo provide service to the university community, professional societies, local communities, the state, and the nation.", "answer_start": 1745, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}, {"question": "Does the FSU CS Department teach technical writing?", "id": 89247, "answers": [{"answer_id": 99387, "document_id": 144205, "question_id": 89247, "text": "SC) Technical Writing: Upon completion of the program, the student will be able to produce a technical document, written to professional standards.", "answer_start": 5328, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}, {"question": "What is the assessment for ethics?", "id": 157043, "answers": [{"answer_id": 221186, "document_id": 144205, "question_id": 157043, "text": " assignment or exam in CIS3250.", "answer_start": 5996, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "BS Degree Program Mission, Educational Objectives & Student Outcomes (Up to Summer 2020) | Computer Science\n\nBS Degree Program Mission, Educational Objectives & Student Outcomes (Up to Summer 2020)\nThe following information is applicable from Fall 2019. For previous information please check this link.\nThe primary mission of the undergraduate program in Computer Science is to provide a high quality undergraduate educational program. To this end, the department seeks continually to strengthen the faculty and the education program to assure that students are well prepared for careers in the field of Computer Science.\nThe Computer Science department\u2019s Bachelor of Science in Computer Science degree program is accredited by the Computing Accreditation Commission of ABET, http://www.abet.org. ABET is the recognized accrediting body of college and university programs in engineering, computing, technology and applied science.\nOur BS CS program is characterized by Program Educational Objectives and Student Outcomes. The program educational objectives describe expected accomplishments of our graduates of the BS program and is consistent with the mission of the department. The student outcomes define the criteria that prepare students to attain the program objectives.\nThe department periodically assesses and evaluates the BS curriculum for consistency with each student outcome and educational objective with the goal to ensure that each student outcome can be attained. This regular evaluation is used to identify program weaknesses, put improvements in place and re-evaluate the effectiveness of those improvements; resulting in continuous improvement of the program. This assures that our students receive a high-quality education.\nDepartmental Mission Statement\nTo strive for excellence in advancing, applying, and imparting knowledge in computer science through comprehensive educational programs, research in collaboration with industry and government, and dissemination through scholarly products;\nTo produce outstanding computer science professionals who have the fundamental knowledge, problem-solving skills, and life-long learning capability to advance their careers;\nTo disseminate computer science knowledge to students and professionals in other disciplines, and\nTo provide service to the university community, professional societies, local communities, the state, and the nation.\nThe program educational objectives for the Bachelors of Science degree program in Computer Science is to produce graduates who will:\nGoal 1: Problem solving and presentation\nEngage in the practice of computer science to identify and solve significant problems across a broad range of application areas, and communicate these solutions professionally.\nGoal 2: Theoretical foundations\nApply sound principles of the theoretical foundations and mathematical bases of computer science in solving complex problems.\nGoal 3: Impact and Responsibility\nEmbrace the breadth of impact of computing on society, and apply ethical, social and professional responsibilities in the profession.\nGoal 4: Life-long learning\nAdapt to new technologies, tools and methodologies to remain at the leading edge of computer science developments and practice in the profession and in the academic field.\nBS Degree Student Outcomes\nABET/CAC Outcomes\nNote that SMALC/SACS outcomes are defined right after these outcomes.\nA1. Analyze a complex computing problem and to apply principles of computing and other relevant disciplines to identify solutions.\nSMALC/SACS outcome: SA\nA2. Design, implement, and evaluate a computing-based solution to meet a given set of computing requirements in the context of the program\u2019s discipline.\nSMALC/SACS outcome: SB\nA3. Communicate effectively in a variety of professional contexts.\nSMALC/SACS outcomes: SC and SD\nA4. Recognize professional responsibilities and make informed judgements in computing practice based on legal and ethical principles.\nSMALC/SACS outcome: SE\nA5. Function effectively as a member or leader of a team engaged in activities appropriate to the program\u2019s discipline.\nSMALC/SACS outcome: SF\nA6. Apply computer science theory and software development fundamentals to produce computing-based solutions.\nSMALC/SACS outcomes: SG and SH\nThe acceptance and use of the program educational objectives and student outcomes of the BS degree program are periodically assessed by the CS faculty, by the CS Board of Advisors, and by the officers of the FSU ACM Student Chapter.\nSMALC/SACS FSU Institutional Effectiveness Outcomes\nThe Florida State University is accredited by the Southern Association of Colleges and Schools (SACS). The accreditation standards require the use of the State Mandated Academic Learning Compacts (SMALC) to define the student outcomes.\nThe SMALC/SACS outcomes SA to SH to attain the learning outcomes listed below:\nSA) Programming Competence: Upon completion of the program, the student will be able to design and create a programming solution for a problem.\nAssessment: A programming assignment in COP4530.\nSB) Software Analysis and Development: Upon completion of the program, the student will be able to analyze the requirement of a complex software system and to design and develop the system based on the requirement.\nAssessment: capstone group project in revised CEN4020.\nSC) Technical Writing: Upon completion of the program, the student will be able to produce a technical document, written to professional standards.\nAssessment: a writing assignment in CIS3250\nSD) Oral Presentation: Upon completion of the program, the student will be able to formulate and deliver an effective oral presentation on a technical software-related subject or a research topic.\nAssessment: a presentation assignment in revised CEN4020.\nSE) Ethics and Responsibility: Upon completion of the program, the student will be able to explain the professional, ethical, legal, security and social issues and responsibilities of a computing professional.\nAssessment: assignment or exam in CIS3250.\nSF) Teamwork: Upon completion of the program, the student will be able to function effectively as a team member or leader in the analysis, design, and implementation of a software system.\nAssessment: capstone group project in revised CEN4020.\nSG) Computing Theory: Upon completion of the program, the student will be able to apply computing theory and fundamentals to decide the computability of a problem.\nAssessment: an assignment in COT4420\nSH) Computational Complexity: Upon completion of the program, the student will be able to analyze the computational complexity of algorithms used in the solution of a programming problem, and to evaluate the performance trade-offs of alternative data structures and algorithms.\nAssessment: an assignment in COP4530\nThe SMALC/SACS outcomes for the BS degree are related to the ABET/CAC student outcomes as follows.\nSMALC/SACS FSU Institutional Effectiveness Outcomes\nABET/CAC mapping\nSA. Programming Competence\nA1\nSB. Software Analysis and Development\nA2\nSC. Technical writing\nA3\nSD. Oral Presentation\nA3\nSE. Ethics and Responsibility\nA4\nSF. Teamwork\nA5\nSG. Computing Theory\nA6\nSH. Computational Complexity\nA6\nUndergraduate Enrollment and Degrees Awarded\nComprehensive and update-to-date data about enrollments and degrees awarded are available interactively at https://ir.fsu.edu/ (Select Student Information and then Interactive Enrollment Reports and Degrees Awarded). Our program is in the College of Arts and Sciences and the major is BS in Computer Science). Data can be broken down based on Colleges, Departments, Majors, and so on. \nYear\nEnrollment\nDegrees Awarded\n2018\n610\n95 (Summer 2019 not included)\n2017\n606\n127\n2016\n619\n100\n2015\n548\n97\n2014\n531\n79\n", "document_id": 144205}]}, {"paragraphs": [{"qas": [{"question": "What will students in the computational biology program learn?", "id": 157061, "answers": [{"answer_id": 221204, "document_id": 144210, "question_id": 157061, "text": "In the process, it is hoped that the student will learn how to meld biological and quantitative skills", "answer_start": 834, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "WHY MAJOR IN COMPUTATIONAL BIOLOGY | Computer Science\n\nWHY MAJOR IN COMPUTATIONAL BIOLOGY\nAbout the Program\nScientific discovery is the result of creative interplay between inductive and deductive reasoning. Computational models play an increasingly important role in deducing the consequences of explanatory models, yet biologists are routinely hindered by the limitations of models currently available as software. In part this results from a lack of interdisciplinary training in both biological and computational sciences. This program seeks to achieve two goals: 1) to develop an understanding of the issues associated with developing biologically meaningful computational models, and 2) to give students the broad-based education that is needed to create a set of models directed towards solving a practical biomedical problem. In the process, it is hoped that the student will learn how to meld biological and quantitative skills. Students participating in this degree program will be better positioned to develop productive careers in the burgeoning fields of computational biology and bioinformatics.\nEmployment and Research Opportunities\nEmployment opportunities for students with these skills can be found throughout industry, including the areas of healthcare, forensics and the pharmaceutical companies. As one might expect in an emerging field, even more research opportunities exist. Here are a few:\nthe creation of biological algorithms and heuristics that are computationally efficient on serial and parallel computers;\nthe analysis of the primary (sequence), secondary (folding), and tertiary (3-dimensional) structures of DNA, RNA and protein sequences;\ngenomic diversity (the study of disease genes, variation, mutations, etc.);\ncomparative genomics (whole genomes, genome structures, gene locations and function);\ngenomic engineering;\nthe development and application of theoretical techniques for the design of molecular medicine;\nanalytical chemistry techniques or molecular biological experimental work, guided by computational structural analysis.\n", "document_id": 144210}]}, {"paragraphs": [{"qas": [], "context": "Differences between the BS and BA in computer science | Computer Science\n\nDifferences between the BS and BA in computer science\nDifferences between the BS and BA in computer science\nThe BS in Computer Science (BS in CS) is considered the science track and the BA in Computer Science (BA in CS) is considered the humanities track.  Also the BS in CS degree is accredited by the Computing Accreditation Commission of ABET, http://www.abet.org, and the BA in CS degree is not. The department encourages students to pursue the BS in CS if they are capable of completing it. We believe there will be more opportunities for BS in CS students after graduation, such as working for engineering and science firms. However, we do believe there will be significant opportunities for BA in CS students who are primarily interested in applications outside the sciences and engineering. The BA in CS is also an excellent track for students who are double majoring in another field outside the sciences and engineering.\nBecause of reduced requirements in mathematics and theoretical computer science, the BA degree is not ABET accredited and students graduating with the BA in CS who wish to be admitted to the graduate program in CS at FSU may be required to take  prerequisite undergraduate courses. This same policy is already in place for students who are admitted to graduate study in CS from other closely related majors, such as Mathematics and Computer Engineering.\nThe BS in CS and BA in CS have the following differences in course requirements.\nMAC2312 (4) Calculus II, and MAD3105 (3) Discrete Math II are required for the BS in CS and are not required for the BA in CS.\nThe probability course STA4442 (3) Introduction to Probability is required for the BS in CS.\nPHY2048C (5) General Physics I w/Lab and PHY2049C (5) General Physics II w/Lab are required for the BS in CS. In contrast, BA in CS students may instead satisfy the liberal studies science requirement by taking 7 hours of science courses from the approved list.\nCOP4531 (3) Analysis of Data Structures and Algorithms and COT4420 (3) Theory of Computation, which have MAD3105 Discrete Math II as a prerequisite, are required for the BS in CS, but not for the BA in CS.\nThe BA in CS will require 9 hours of humanities, which are not required for the BS in CS.\nThe BA in CS will require additional hours of general electives that are not required for the BS in CS degree.\nThe BS in CS has a collateral interdisciplinary minor. BA in CS students will likely need to select a minor in another subject, which could overlap with the 9 hours of humanities and/or the additional hours of general electives.\n", "document_id": 144208}]}, {"paragraphs": [{"qas": [], "context": "Viet Tung Hoang | Viet Tung Hoang Assistant Professor Office: Telephone: E-Mail: Visit Personal Page (no link) Research Dr.  Hoang\u2019s research area is cryptography, with a practice-oriented theme. His line of research aims to bridge the gap between the theory and practice of cryptography, giving products of genuine utility that are theoretically justified yet faster than heuristic solutions. For example, he has built a new authenticated encryption scheme AEZ to improve both security and speed of standardized schemes underlying Internet protocols such as HTTPS, IPSec, and WPA2. AEZ is currently a second-round candidate in the standardization competition CAESAR. Dr. Hoang\u2019s research papers earned the Best Honorable Mention at EUROCRYPT 2015 and Best Paper Award at CCS 2015.", "document_id": 287753}]}, {"paragraphs": [{"qas": [], "context": "Dr. Viet Tung Hoang Receives NSF CAREER Award | Dr. Viet Tung Hoang Receives NSF CAREER Award FSU\u2019s Computer Science faculty member Viet Tung Hoang was awarded the prestigious National Science Foundation CAREER Award of $563,971 over a duration of 5 years. The focus of the project is to improve the method of encrypting credit-card numbers, the randomness generation for cryptographic use, and the time-memory tradeoff in the security analysis of encryption. To achieve these goals, the project aims to develop analytic techniques that are useful for a wide range of cryptographic applications. Another goal of the project is to develop a problem-solving course to help senior undergraduates and first-year graduates to undertake research in theoretical computer science.", "document_id": 287812}]}, {"paragraphs": [{"qas": [], "context": "Dr. Whalley Gets NSF IRES Grant | Dr. Whalley Gets NSF IRES Grant Dr. David Whalley has been awarded a $150K grant from the National Science Foundation titled \u201cSupporting FSU and MTU Student Research with NTNU Faculty on Automatic Improvement of Application Performance.\u201d This grant will allow up to 8 FSU CS students to spend a summer working with research collaborators at the Norwegian University of Science and Technology (NTNU) in Trondheim, Norway.", "document_id": 287813}]}, {"paragraphs": [{"qas": [], "context": "PREcision Audit LLC Excellence Scholarship Created | PREcision Audit LLC Excellence Scholarship Created The PREcision Audit LLC Excellence Scholarship is a monetary award in the amount of $2,500. It is awarded in the spring to two undergraduate students pursuing a degree in Computer Science or Computer Engineering at FSU Panama City. Recipients must possess and maintain a minimum 3.5 GPA and must be enrolled in at least 6 credit hours. Applicants must also demonstrate participation in extracurricular activities, indicating broader interests than solely the coursework, as well as community service, demonstrating a level of compassion and concern for others.  This funding is set to last 8-10 semesters.", "document_id": 287901}]}, {"paragraphs": [{"qas": [], "context": "General Graduate Degree Requirements | General Graduate Degree Requirements Please review all college-wide degree requirements summarized in the \u201cCollege of Arts and Sciences\u201d section of the FSU Graduate Bulletin. Unless specifically admitted into the part-time graduate program, all students are required to maintain full-time enrollment (at least nine (9) semester hours per term for TAs and RAs, nine (9) semester hours per term for international students, and twelve (12) hours otherwise, excluding Summer) in courses related to their program of studies throughout the entire program of study (except term of graduation). The student must receive a grade of \u201cB-\u201d or better on all graduate courses taken to satisfy the minimum requirements of either graduate degree. Once these minimum requirements are met, however, it is permissible to take any subsequent courses on an S/U basis. Upon joining the department, each graduate student is assigned an advisor by the director of graduate studies. At least once each semester the student is required to meet with the advisor and complete the departmental advising forms. Completion of these forms becomes part of the graduation check. For those students completing a thesis, project or dissertation, a major professor will be selected by the student once a topic for such is chosen. At this point the major professor takes over the advising responsibilities. For those master\u2019s students in the course-based option, the advisor initially assigned continues in the advisement role. Advising forms stay with the advisor (major professor) until the graduation check. All candidates for doctoral degrees in the department are required to participate in teaching activities at some time during their graduate careers unless waived by the department chair. All students participate in an exit interview with the chair or associate chair or director of graduate studies during the term of graduation.", "document_id": 287610}]}, {"paragraphs": [{"qas": [], "context": "Undergraduate Programs | Undergraduate Programs For more information about our undergraduate programs, admissions, and financial aids, please contact undergraduate advisor ( Lauren Higbee ) at (850)644-8700 or higbee [at cs dot fsu dot edu]. Information for Majors B.S. in Computer Science (accredited by the Computing Accreditation Commission of ABET, http://www.abet.org) BS Degree Program Mission, Educational Objectives & Student Outcomes Combined B.S./M.S. Degree B.A. in Computer Science (not accredited by the Computing Accreditation Commission of ABET, http://www.abet.org) Differences Between the B.S. and B.A. Computer Science Degrees B.A. in Computer Programming and Applications B.A. in Computer Science-Math/FSU-Teach B.S. in Computational Biology B.S. in\u00a0Cyber Criminology Information for Non-Majors Minor Requirements Computer Courses for Non-Majors Additional Information Admissions Course Descriptions \u2013 Undergraduate Recent Course Changes Scholarship and Fellowship Opportunities", "document_id": 287633}]}, {"paragraphs": [{"qas": [], "context": "CS Cybersecurity program made top 10 Best for Vets list by Military Times | CS Cybersecurity program made top 10 Best for Vets list by Military Times The cybersecurity program in the Computer Science department has been ranked the sixth in the Military Times\u2019 2017 top 10 Best for Vets list. More details can be found at http://www.militarytimes.com/articles/ten-schools-top-new-ranking-of-best-cybersecurity-programs . National Security Agency and Department of Homeland Security designated FSU as a National Center of Academic Excellence in both Information Assurance/Cybersecurity Education and Research. The program was awarded a $4.6 million grant last year from the National Science Foundation that will help dozens of cybersecurity students finance their education.", "document_id": 287697}]}, {"paragraphs": [{"qas": [], "context": "CS professor awarded an NSF/Intel grant for computer architecture research | CS professor awarded an NSF/Intel grant for computer architecture research FSU Department of Computer Science Professor David Whalley has been awarded a new NSF/Intel grant for his project \u201cDependent ILP: Dynamic Hoisting and Eager Scheduling of Dependent Instructions.\u201d  The project is a collaborative effort between FSU and a colleague from Michigan Technological University.  The aim of the project is to combine a traditional superscalar processor architecture with a dataflow style pipeline that makes efficient early fetching and dispatching of dependent instructions possible.  The award includes funding for FSU in the amount of $220,000.", "document_id": 287704}]}, {"paragraphs": [{"qas": [], "context": "News | Dr. Grigory Fedyukovich Awarded NSF Grant News FSU Computer Science Assistant Professor, Dr. Grigory Fedyukovich has been awarded a $449,882 grant\u2026 Dr. Xin Yuan and Dr. Weikuan Yu Awarded FSU CS Professorships News Dr. Xin Yuan has been awarded the Harris Professorship\u2026. Dr. Whalley Gets NSF IRES Grant News Dr. David Whalley has been awarded a $150K grant from the National Science Foundation\u2026. Dr. Fedyukovich Receives Amazon Research Award News FSU Computer Science Assistant Professor, Dr. Grigory Fedyukovich, has received the Amazon Research Award\u2026 Dr. Viet Tung Hoang Receives NSF CAREER Award News FSU\u2019s Computer Science faculty member Viet Tung Hoang was awarded the prestigious National Science Foundation CAREER Award\u2026 Dr. Fedyukovich\u2019s Paper Has Been Selected As a Distinguished Paper for PLDI 2021 News FSU Computer Science Assistant Professor, Dr. Grigory Fedyukovich, has received the distinguished paper award\u2026 \u00ab Older Entries", "document_id": 287672}]}, {"paragraphs": [{"qas": [{"question": "What should I do if I'm still in high school?", "id": 162652, "answers": [{"answer_id": 227202, "document_id": 287667, "question_id": 162652, "text": "Students still in high school who are considering Computer Science are advised to study higher level math courses and, if possible, complete AP, IB, or CLEP tests and potentially earn college credit.", "answer_start": 368, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "Admission Procedures and Standards | Admission Procedures and Standards Applying for Admission Undergraduate Admissions is not handled by the Computer Science Department. Students interested in applying to the program should apply online through the Office of Admissions webpage and submit any supporting documents directly to their office. Minimum Admission Criteria Students still in high school who are considering Computer Science are advised to study higher level math courses and, if possible, complete AP, IB, or CLEP tests and potentially earn college credit. Students working on their AA are advised to review the Common Course Prerequisites for their potential major in the Academic Guide . Students may be admitted into the University without completing prerequisites, but may not be admitted to the major until they are completed. A student who has accumulated more than five grades below \u201cC-\u201c (including grades of \u201cU\u201d) in mathematics, statistics, science, or computer science courses taken for college credit at The Florida State University or elsewhere, whether repeated or not, will not be permitted to continue as a major in the department.", "document_id": 287667}]}, {"paragraphs": [{"qas": [], "context": "News | Dr. Sonia Haiduc Receives Most Influential Paper Award News Dr. Sonia Haiduc has received the Most Influential Paper Award\u2026 Dr. Xiaonan Zhang Joins the CS Department News Dr. Xiaonan Zhang joined the CS department at FSU in Fall 2020. Dr. Xian Mallory Joins the CS Department News Dr. Xian Mallory joined the Department of Computer Science at FSU in Fall 2020. PREcision Audit LLC Excellence Scholarship Created News The PREcision Audit LLC Excellence Scholarship is a monetary award in the amount of $2,500\u2026. Professor Yuan received an NSF grant for his research on Software Defined Networking in High Performance Computing systems News Dr. Xin Yuan has been awarded a grant of $500K from the National Science Foundation titled \u201cUnderstanding and Exploiting SDN in HPC environments.\u201d Professors Wang, Whalley, Haiduc, and Liu Awarded a $1 Million Grant from the National Science Foundation News Professors Wang, Whalley, Haiduc, and Liu Awarded a $1 Million Grant from the National Science Foundation. \u00ab Older Entries Next Entries \u00bb", "document_id": 287673}]}, {"paragraphs": [{"qas": [{"question": "What award did Dr. Chakraborty receive?", "id": 162675, "answers": [{"answer_id": 227225, "document_id": 287674, "question_id": 162675, "text": "AWS Machine Learning Research Award", "answer_start": 560, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "News | Dr. Gubanov published a paper in the August issue of Communications of ACM News Michael Gubanov has published a paper in Communications of ACM, together with collaborators from Rice University. The journal is known to be very selective, summarizing the most impactful contributions to Computer Science across all areas. Gubanov describes a novel data analytics system, marrying linear and relational algebra, introduced by Edgar Codd in Communications of ACM in 1970 and used widely in data management systems today. Dr. Shayok Chakraborty receives the AWS Machine Learning Research Award News FSU Computer Science Assistant Professor, Dr. Shayok Chakraborty, has received the prestigious AWS Machine Learning Research Award for his project \u201cActive Learning with Imperfect Oracles\u201d. Dr. Weikuan Yu Receives Grants for Collaborative Research on Deep Learning News Dr. Weikuan Yu has been awarded a grant of $300K from the National Science Foundation titled \u201cIRES Track-1: I/O Research for Data-Intensive Analytics and Deep Learning\u201d. Dr. Weikuan Yu also received two grants in the amounts of $72K and $74K from Lawrence Livermore National Laboratory. Dr. Shayok Chakraborty receives the Amazon Research Award News FSU Computer Science Assistant Professor, Dr. Shayok Chakraborty, has received the Amazon Research Award for his project \u201cDeep Active Learning with Relative Label Feedback\u201d. Dr. Sudhir Aggarwal receives NIJ award for AI Enabled Community Supervision for Criminal Justice Services News Dr. Sudhir Aggarwal (Department of Computer Science) and Dr. Carrie Pettus-Davis (Department of Social Work) are co-PIs on a recently funded NIJ award for $1,999,778, entitled \u201cAI Enabled Community Supervision for Criminal Justice Services.\u201d Dr. Jie Yang awarded $459K NSF grant for Wireless Sensing Research News Professor Jie Yang awarded $459k NSF grant for WiFi-based Ubiquitous Sensing \u00ab Older Entries Next Entries \u00bb", "document_id": 287674}]}, {"paragraphs": [{"qas": [{"question": "What does Zhang propose in his paper?", "id": 173983, "answers": [{"answer_id": 227838, "document_id": 287711, "question_id": 173983, "text": " to decouple the rigid one-to-one mapping between files and metadata with a new concept of composite files to allow many-to-one mappings.", "answer_start": 677, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "CS Student Published in Top Storage Systems Conference | CS Student Published in Top Storage Systems Conference Aug 30, 2016 | Student Recognition Fourth year PhD student, Shuanglong Zhang, has been conducting research in the storage systems area as his dissertation topic under the guidance of Prof. Andy Wang. His recent work on composite-file file systems has been published in the\u00a0paper titled \u201cThe Composite-file File System: Decoupling the One-to-One Mapping of Files and Metadata for Better Performance\u201d. The paper\u00a0was co-authored with Helen Catanese and Andy Wang in USENIX FAST 2016, a top tier conference in the storage systems area. In the paper, Shuanglong proposed to decouple the rigid one-to-one mapping between files and metadata with a new concept of composite files to allow many-to-one mappings. This creates an entire class of optimizations. Empirical evaluation shows up to\u00a0 27% performance gain.", "document_id": 287711}]}, {"paragraphs": [{"qas": [], "context": "CS Student Selected to Be a 2016-17 PIE Teaching Associate | CS Student Selected to Be a 2016-17 PIE Teaching Associate May 6, 2016 | Student Recognition Computer Science Ph.D. Student Gokila Dorai was selected to be a PIE (Program for Instructional Excellence) Teaching Associate for the term 2016-17. A PIE Teaching Associate is an experienced graduate student teaching assistant (TA) nominated by the academic department and trained by the PIE. Through this assistantship, she will serve as a mentor for other TAs in the department and assist PIE with university workshops, conferences, teaching awards, and other events. PIE Teaching Associates serve for one year and earn a stipend for one year.", "document_id": 287712}]}, {"paragraphs": [{"qas": [], "context": "CS students receive DoD Cyber Scholarships | CS students receive DoD Cyber Scholarships 2 juniors (major: Computer Science) and one graduate in Computer Science at FSU have been awarded DoD Cyber Scholarship. Selected scholars receive full tuition, fees, a book allowance, and a stipend for living expense ($25K for undergraduates, $30K for graduates) in exchange for civilian service at a DoD Agency upon graduation. Application details for DoD scholarships at FSU: http://www.sait.fsu.edu/scholarships/dod-ias/index.shtml", "document_id": 287713}]}, {"paragraphs": [{"qas": [{"question": "Where was Khandaker's paper published?", "id": 173990, "answers": [{"answer_id": 227845, "document_id": 287714, "question_id": 173990, "text": "USENIX Security", "answer_start": 329, "answer_category": null}], "is_impossible": false, "augmented": false, "aug_method": "none", "split": "eval"}], "context": "CS Students to Present in Top Computer Security Conference | CS Students to Present in Top Computer Security Conference Mustakimur R. Khandaker, a Ph.D. student from the CS Department, has published a full paper in the prestigious 28th USENIX Security Symposium, which will hold on August 14-16, 2019 in Santa Clara, California. USENIX Security is one of the top-tier conferences in the Computer Security area. The paper, titled \u201cOrigin-sensitive Control Flow Integrity\u201d proposes a new context-sensitive CFI system that can significantly improve the security of the state-of-art CFI systems. This work is the continuation of his earlier work published in EuroS&P\u201919 titled \u201cAdaptive Call-site Sensitive Control Flow Integrity\u201d. Both projects have been open-sourced available at the author\u2019s GitHub page: https://github.com/mustakcsecuet/ . The other students that contributed to the projects include Wenqing Liu and Abu Naser.", "document_id": 287714}]}, {"paragraphs": [{"qas": [], "context": "CS student won FSU Preparing Future Faculty award | CS student won FSU Preparing Future Faculty award Ms. Gokila Dorai, a PhD student supervised by Prof. Sudhir Aggarwal, is among the winners of the 2017 FSU Preparing Future Faculty awards. She was recognized in the award ceremony in April 18 in the FSU Alumni Center. The Preparing Future Faculty Program assists Florida State\u2019s doctoral students prepare for future faculty work. Through participation in coursework, workshops/seminars, and/or online training, and mentoring, PFF Fellows increase their awareness of expectations for faculty performance and of resources available to aid in scholarly careers, and build their readiness to address research, teaching and related demands of faculty life. Congratulations Gokila!", "document_id": 287716}]}]}